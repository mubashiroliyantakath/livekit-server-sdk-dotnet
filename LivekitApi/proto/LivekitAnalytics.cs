// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: livekit_analytics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Livekit.Server.Sdk.Dotnet {

  /// <summary>Holder for reflection information generated from livekit_analytics.proto</summary>
  public static partial class LivekitAnalyticsReflection {

    #region Descriptor
    /// <summary>File descriptor for livekit_analytics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LivekitAnalyticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdsaXZla2l0X2FuYWx5dGljcy5wcm90bxIHbGl2ZWtpdBofZ29vZ2xlL3By",
            "b3RvYnVmL3RpbWVzdGFtcC5wcm90bxoUbGl2ZWtpdF9tb2RlbHMucHJvdG8a",
            "FGxpdmVraXRfZWdyZXNzLnByb3RvGhVsaXZla2l0X2luZ3Jlc3MucHJvdG8a",
            "EWxpdmVraXRfc2lwLnByb3RvGhJsaXZla2l0X3Jvb20ucHJvdG8iVAoTQW5h",
            "bHl0aWNzVmlkZW9MYXllchINCgVsYXllchgBIAEoBRIPCgdwYWNrZXRzGAIg",
            "ASgNEg0KBWJ5dGVzGAMgASgEEg4KBmZyYW1lcxgEIAEoDSLTAwoPQW5hbHl0",
            "aWNzU3RyZWFtEgwKBHNzcmMYASABKA0SFwoPcHJpbWFyeV9wYWNrZXRzGAIg",
            "ASgNEhUKDXByaW1hcnlfYnl0ZXMYAyABKAQSGgoScmV0cmFuc21pdF9wYWNr",
            "ZXRzGAQgASgNEhgKEHJldHJhbnNtaXRfYnl0ZXMYBSABKAQSFwoPcGFkZGlu",
            "Z19wYWNrZXRzGAYgASgNEhUKDXBhZGRpbmdfYnl0ZXMYByABKAQSFAoMcGFj",
            "a2V0c19sb3N0GAggASgNEg4KBmZyYW1lcxgJIAEoDRILCgNydHQYCiABKA0S",
            "DgoGaml0dGVyGAsgASgNEg0KBW5hY2tzGAwgASgNEgwKBHBsaXMYDSABKA0S",
            "DAoEZmlycxgOIAEoDRIyCgx2aWRlb19sYXllcnMYDyADKAsyHC5saXZla2l0",
            "LkFuYWx5dGljc1ZpZGVvTGF5ZXISLgoKc3RhcnRfdGltZRgRIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYEiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKFHBhY2tldHNfb3V0X29mX29y",
            "ZGVyGBMgASgNItICCg1BbmFseXRpY3NTdGF0EgoKAmlkGA4gASgJEhUKDWFu",
            "YWx5dGljc19rZXkYASABKAkSIQoEa2luZBgCIAEoDjITLmxpdmVraXQuU3Ry",
            "ZWFtVHlwZRIuCgp0aW1lX3N0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIMCgRub2RlGAQgASgJEg8KB3Jvb21faWQYBSABKAkSEQoJ",
            "cm9vbV9uYW1lGAYgASgJEhYKDnBhcnRpY2lwYW50X2lkGAcgASgJEhAKCHRy",
            "YWNrX2lkGAggASgJEg0KBXNjb3JlGAkgASgCEikKB3N0cmVhbXMYCiADKAsy",
            "GC5saXZla2l0LkFuYWx5dGljc1N0cmVhbRIMCgRtaW1lGAsgASgJEhEKCW1p",
            "bl9zY29yZRgMIAEoAhIUCgxtZWRpYW5fc2NvcmUYDSABKAIiNwoOQW5hbHl0",
            "aWNzU3RhdHMSJQoFc3RhdHMYASADKAsyFi5saXZla2l0LkFuYWx5dGljc1N0",
            "YXQimgIKE0FuYWx5dGljc0NsaWVudE1ldGESDgoGcmVnaW9uGAEgASgJEgwK",
            "BG5vZGUYAiABKAkSEwoLY2xpZW50X2FkZHIYAyABKAkSGwoTY2xpZW50X2Nv",
            "bm5lY3RfdGltZRgEIAEoDRIXCg9jb25uZWN0aW9uX3R5cGUYBSABKAkSMgoQ",
            "cmVjb25uZWN0X3JlYXNvbhgGIAEoDjIYLmxpdmVraXQuUmVjb25uZWN0UmVh",
            "c29uEhUKCGdlb19oYXNoGAcgASgJSACIAQESFAoHY291bnRyeRgIIAEoCUgB",
            "iAEBEhQKB2lzcF9hc24YCSABKA1IAogBAUILCglfZ2VvX2hhc2hCCgoIX2Nv",
            "dW50cnlCCgoIX2lzcF9hc24inAkKDkFuYWx5dGljc0V2ZW50EgoKAmlkGBkg",
            "ASgJEikKBHR5cGUYASABKA4yGy5saXZla2l0LkFuYWx5dGljc0V2ZW50VHlw",
            "ZRItCgl0aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEg8KB3Jvb21faWQYAyABKAkSGwoEcm9vbRgEIAEoCzINLmxpdmVraXQu",
            "Um9vbRIWCg5wYXJ0aWNpcGFudF9pZBgFIAEoCRItCgtwYXJ0aWNpcGFudBgG",
            "IAEoCzIYLmxpdmVraXQuUGFydGljaXBhbnRJbmZvEhAKCHRyYWNrX2lkGAcg",
            "ASgJEiEKBXRyYWNrGAggASgLMhIubGl2ZWtpdC5UcmFja0luZm8SFQoNYW5h",
            "bHl0aWNzX2tleRgKIAEoCRIoCgtjbGllbnRfaW5mbxgLIAEoCzITLmxpdmVr",
            "aXQuQ2xpZW50SW5mbxIxCgtjbGllbnRfbWV0YRgMIAEoCzIcLmxpdmVraXQu",
            "QW5hbHl0aWNzQ2xpZW50TWV0YRIRCgllZ3Jlc3NfaWQYDSABKAkSEgoKaW5n",
            "cmVzc19pZBgTIAEoCRI7ChxtYXhfc3Vic2NyaWJlZF92aWRlb19xdWFsaXR5",
            "GA4gASgOMhUubGl2ZWtpdC5WaWRlb1F1YWxpdHkSKwoJcHVibGlzaGVyGA8g",
            "ASgLMhgubGl2ZWtpdC5QYXJ0aWNpcGFudEluZm8SDAoEbWltZRgQIAEoCRIj",
            "CgZlZ3Jlc3MYESABKAsyEy5saXZla2l0LkVncmVzc0luZm8SJQoHaW5ncmVz",
            "cxgSIAEoCzIULmxpdmVraXQuSW5ncmVzc0luZm8SDQoFZXJyb3IYFCABKAkS",
            "JAoJcnRwX3N0YXRzGBUgASgLMhEubGl2ZWtpdC5SVFBTdGF0cxITCgt2aWRl",
            "b19sYXllchgWIAEoBRIPCgdub2RlX2lkGBggASgJEhMKC3NpcF9jYWxsX2lk",
            "GBogASgJEiYKCHNpcF9jYWxsGBsgASgLMhQubGl2ZWtpdC5TSVBDYWxsSW5m",
            "bxIUCgxzaXBfdHJ1bmtfaWQYHCABKAkSNwoRc2lwX2luYm91bmRfdHJ1bmsY",
            "HSABKAsyHC5saXZla2l0LlNJUEluYm91bmRUcnVua0luZm8SOQoSc2lwX291",
            "dGJvdW5kX3RydW5rGB4gASgLMh0ubGl2ZWtpdC5TSVBPdXRib3VuZFRydW5r",
            "SW5mbxIcChRzaXBfZGlzcGF0Y2hfcnVsZV9pZBgfIAEoCRI3ChFzaXBfZGlz",
            "cGF0Y2hfcnVsZRggIAEoCzIcLmxpdmVraXQuU0lQRGlzcGF0Y2hSdWxlSW5m",
            "bxIuCgxzaXBfdHJhbnNmZXIYJCABKAsyGC5saXZla2l0LlNJUFRyYW5zZmVy",
            "SW5mbxIjCgZyZXBvcnQYISABKAsyEy5saXZla2l0LlJlcG9ydEluZm8SJgoI",
            "YXBpX2NhbGwYIiABKAsyFC5saXZla2l0LkFQSUNhbGxJbmZvEiUKB3dlYmhv",
            "b2sYIyABKAsyFC5saXZla2l0LldlYmhvb2tJbmZvIjoKD0FuYWx5dGljc0V2",
            "ZW50cxInCgZldmVudHMYASADKAsyFy5saXZla2l0LkFuYWx5dGljc0V2ZW50",
            "IqQBChhBbmFseXRpY3NSb29tUGFydGljaXBhbnQSCgoCaWQYASABKAkSEAoI",
            "aWRlbnRpdHkYAiABKAkSDAoEbmFtZRgDIAEoCRItCgVzdGF0ZRgEIAEoDjIe",
            "LmxpdmVraXQuUGFydGljaXBhbnRJbmZvLlN0YXRlEi0KCWpvaW5lZF9hdBgF",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAipgEKDUFuYWx5dGlj",
            "c1Jvb20SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRISCgpwcm9qZWN0X2lk",
            "GAUgASgJEi4KCmNyZWF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEjcKDHBhcnRpY2lwYW50cxgEIAMoCzIhLmxpdmVraXQuQW5h",
            "bHl0aWNzUm9vbVBhcnRpY2lwYW50IpQBChJBbmFseXRpY3NOb2RlUm9vbXMS",
            "DwoHbm9kZV9pZBgBIAEoCRIXCg9zZXF1ZW5jZV9udW1iZXIYAiABKAQSLQoJ",
            "dGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIl",
            "CgVyb29tcxgEIAMoCzIWLmxpdmVraXQuQW5hbHl0aWNzUm9vbSJLCgpSZXBv",
            "cnRJbmZvEjIKDWZlYXR1cmVfdXNhZ2UYASABKAsyGS5saXZla2l0LkZlYXR1",
            "cmVVc2FnZUluZm9IAEIJCgdtZXNzYWdlImkKCVRpbWVSYW5nZRIuCgpzdGFy",
            "dGVkX2F0GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghl",
            "bmRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiwQIK",
            "EEZlYXR1cmVVc2FnZUluZm8SMgoHZmVhdHVyZRgBIAEoDjIhLmxpdmVraXQu",
            "RmVhdHVyZVVzYWdlSW5mby5GZWF0dXJlEhIKCnByb2plY3RfaWQYAiABKAkS",
            "EQoJcm9vbV9uYW1lGAMgASgJEg8KB3Jvb21faWQYBCABKAkSHAoUcGFydGlj",
            "aXBhbnRfaWRlbnRpdHkYBSABKAkSFgoOcGFydGljaXBhbnRfaWQYBiABKAkS",
            "EAoIdHJhY2tfaWQYByABKAkSJwoLdGltZV9yYW5nZXMYCCADKAsyEi5saXZl",
            "a2l0LlRpbWVSYW5nZSJQCgdGZWF0dXJlEhwKGEtSSVNQX05PSVNFX0NBTkNF",
            "TExBVElPThAAEicKI0tSSVNQX0JBQ0tHUk9VTkRfVk9JQ0VfQ0FOQ0VMTEFU",
            "SU9OEAEiswUKDkFQSUNhbGxSZXF1ZXN0EjkKE2NyZWF0ZV9yb29tX3JlcXVl",
            "c3QYASABKAsyGi5saXZla2l0LkNyZWF0ZVJvb21SZXF1ZXN0SAASNwoSbGlz",
            "dF9yb29tc19yZXF1ZXN0GAIgASgLMhkubGl2ZWtpdC5MaXN0Um9vbXNSZXF1",
            "ZXN0SAASOQoTZGVsZXRlX3Jvb21fcmVxdWVzdBgDIAEoCzIaLmxpdmVraXQu",
            "RGVsZXRlUm9vbVJlcXVlc3RIABJFChlsaXN0X3BhcnRpY2lwYW50c19yZXF1",
            "ZXN0GAQgASgLMiAubGl2ZWtpdC5MaXN0UGFydGljaXBhbnRzUmVxdWVzdEgA",
            "EkUKGXJvb21fcGFydGljaXBhbnRfaWRlbnRpdHkYBSABKAsyIC5saXZla2l0",
            "LlJvb21QYXJ0aWNpcGFudElkZW50aXR5SAASQAoXbXV0ZV9yb29tX3RyYWNr",
            "X3JlcXVlc3QYBiABKAsyHS5saXZla2l0Lk11dGVSb29tVHJhY2tSZXF1ZXN0",
            "SAASRwoadXBkYXRlX3BhcnRpY2lwYW50X3JlcXVlc3QYByABKAsyIS5saXZl",
            "a2l0LlVwZGF0ZVBhcnRpY2lwYW50UmVxdWVzdEgAEksKHHVwZGF0ZV9zdWJz",
            "Y3JpcHRpb25zX3JlcXVlc3QYCCABKAsyIy5saXZla2l0LlVwZGF0ZVN1YnNj",
            "cmlwdGlvbnNSZXF1ZXN0SAASNQoRc2VuZF9kYXRhX3JlcXVlc3QYCSABKAsy",
            "GC5saXZla2l0LlNlbmREYXRhUmVxdWVzdEgAEkoKHHVwZGF0ZV9yb29tX21l",
            "dGFkYXRhX3JlcXVlc3QYCiABKAsyIi5saXZla2l0LlVwZGF0ZVJvb21NZXRh",
            "ZGF0YVJlcXVlc3RIAEIJCgdtZXNzYWdlIvUCCgtBUElDYWxsSW5mbxISCgpw",
            "cm9qZWN0X2lkGAEgASgJEigKB3JlcXVlc3QYAiABKAsyFy5saXZla2l0LkFQ",
            "SUNhbGxSZXF1ZXN0Eg8KB3NlcnZpY2UYAyABKAkSDgoGbWV0aG9kGAQgASgJ",
            "Eg8KB25vZGVfaWQYBSABKAkSDgoGc3RhdHVzGAYgASgFEhgKEHR3aXJwX2Vy",
            "cm9yX2NvZGUYByABKAkSGwoTdHdpcnBfZXJyb3JfbWVzc2FnZRgIIAEoCRIR",
            "Cglyb29tX25hbWUYCSABKAkSDwoHcm9vbV9pZBgKIAEoCRIcChRwYXJ0aWNp",
            "cGFudF9pZGVudGl0eRgLIAEoCRIWCg5wYXJ0aWNpcGFudF9pZBgMIAEoCRIQ",
            "Cgh0cmFja19pZBgNIAEoCRIuCgpzdGFydGVkX2F0GA4gASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBITCgtkdXJhdGlvbl9ucxgPIAEoAyKrBAoL",
            "V2ViaG9va0luZm8SEAoIZXZlbnRfaWQYASABKAkSDQoFZXZlbnQYAiABKAkS",
            "EgoKcHJvamVjdF9pZBgDIAEoCRIRCglyb29tX25hbWUYBCABKAkSDwoHcm9v",
            "bV9pZBgFIAEoCRIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgGIAEoCRIWCg5w",
            "YXJ0aWNpcGFudF9pZBgHIAEoCRIQCgh0cmFja19pZBgIIAEoCRIRCgllZ3Jl",
            "c3NfaWQYCSABKAkSEgoKaW5ncmVzc19pZBgKIAEoCRIuCgpjcmVhdGVkX2F0",
            "GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBItCglxdWV1ZWRf",
            "YXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhkKEXF1ZXVl",
            "X2R1cmF0aW9uX25zGA0gASgDEisKB3NlbnRfYXQYDiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEhgKEHNlbmRfZHVyYXRpb25fbnMYDyABKAMS",
            "CwoDdXJsGBAgASgJEhMKC251bV9kcm9wcGVkGBEgASgFEhIKCmlzX2Ryb3Bw",
            "ZWQYEiABKAgSFgoOc2VydmljZV9zdGF0dXMYEyABKAkSGgoSc2VydmljZV9l",
            "cnJvcl9jb2RlGBQgASgFEhUKDXNlcnZpY2VfZXJyb3IYFSABKAkSEgoKc2Vu",
            "ZF9lcnJvchgWIAEoCSoqCgpTdHJlYW1UeXBlEgwKCFVQU1RSRUFNEAASDgoK",
            "RE9XTlNUUkVBTRABKrEIChJBbmFseXRpY3NFdmVudFR5cGUSEAoMUk9PTV9D",
            "UkVBVEVEEAASDgoKUk9PTV9FTkRFRBABEhYKElBBUlRJQ0lQQU5UX0pPSU5F",
            "RBACEhQKEFBBUlRJQ0lQQU5UX0xFRlQQAxIiCh5QQVJUSUNJUEFOVF9DT05O",
            "RUNUSU9OX0FCT1JURUQQLRITCg9UUkFDS19QVUJMSVNIRUQQBBIbChdUUkFD",
            "S19QVUJMSVNIX1JFUVVFU1RFRBAUEhUKEVRSQUNLX1VOUFVCTElTSEVEEAUS",
            "FAoQVFJBQ0tfU1VCU0NSSUJFRBAGEh0KGVRSQUNLX1NVQlNDUklCRV9SRVFV",
            "RVNURUQQFRIaChZUUkFDS19TVUJTQ1JJQkVfRkFJTEVEEBkSFgoSVFJBQ0tf",
            "VU5TVUJTQ1JJQkVEEAcSGgoWVFJBQ0tfUFVCTElTSEVEX1VQREFURRAKEg8K",
            "C1RSQUNLX01VVEVEEBcSEQoNVFJBQ0tfVU5NVVRFRBAYEhcKE1RSQUNLX1BV",
            "QkxJU0hfU1RBVFMQGhIZChVUUkFDS19TVUJTQ1JJQkVfU1RBVFMQGxIWChJQ",
            "QVJUSUNJUEFOVF9BQ1RJVkUQCxIXChNQQVJUSUNJUEFOVF9SRVNVTUVEEBYS",
            "EgoORUdSRVNTX1NUQVJURUQQDBIQCgxFR1JFU1NfRU5ERUQQDRISCg5FR1JF",
            "U1NfVVBEQVRFRBAcEiYKIlRSQUNLX01BWF9TVUJTQ1JJQkVEX1ZJREVPX1FV",
            "QUxJVFkQDhIPCgtSRUNPTk5FQ1RFRBAPEhMKD0lOR1JFU1NfQ1JFQVRFRBAS",
            "EhMKD0lOR1JFU1NfREVMRVRFRBATEhMKD0lOR1JFU1NfU1RBUlRFRBAQEhEK",
            "DUlOR1JFU1NfRU5ERUQQERITCg9JTkdSRVNTX1VQREFURUQQHRIdChlTSVBf",
            "SU5CT1VORF9UUlVOS19DUkVBVEVEEB4SHQoZU0lQX0lOQk9VTkRfVFJVTktf",
            "REVMRVRFRBAfEh4KGlNJUF9PVVRCT1VORF9UUlVOS19DUkVBVEVEECASHgoa",
            "U0lQX09VVEJPVU5EX1RSVU5LX0RFTEVURUQQIRIdChlTSVBfRElTUEFUQ0hf",
            "UlVMRV9DUkVBVEVEECISHQoZU0lQX0RJU1BBVENIX1JVTEVfREVMRVRFRBAj",
            "EhsKF1NJUF9QQVJUSUNJUEFOVF9DUkVBVEVEECQSFQoRU0lQX0NBTExfSU5D",
            "T01JTkcQJRIUChBTSVBfQ0FMTF9TVEFSVEVEECYSEgoOU0lQX0NBTExfRU5E",
            "RUQQJxIaChZTSVBfVFJBTlNGRVJfUkVRVUVTVEVEECsSGQoVU0lQX1RSQU5T",
            "RkVSX0NPTVBMRVRFECwSCgoGUkVQT1JUECgSDAoIQVBJX0NBTEwQKRILCgdX",
            "RUJIT09LECpCRlojZ2l0aHViLmNvbS9saXZla2l0L3Byb3RvY29sL2xpdmVr",
            "aXSqAg1MaXZlS2l0LlByb3Rv6gIOTGl2ZUtpdDo6UHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Livekit.Server.Sdk.Dotnet.LivekitModelsReflection.Descriptor, global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor, global::Livekit.Server.Sdk.Dotnet.LivekitIngressReflection.Descriptor, global::Livekit.Server.Sdk.Dotnet.LivekitSipReflection.Descriptor, global::Livekit.Server.Sdk.Dotnet.LivekitRoomReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Livekit.Server.Sdk.Dotnet.StreamType), typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer), global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer.Parser, new[]{ "Layer", "Packets", "Bytes", "Frames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsStream), global::Livekit.Server.Sdk.Dotnet.AnalyticsStream.Parser, new[]{ "Ssrc", "PrimaryPackets", "PrimaryBytes", "RetransmitPackets", "RetransmitBytes", "PaddingPackets", "PaddingBytes", "PacketsLost", "Frames", "Rtt", "Jitter", "Nacks", "Plis", "Firs", "VideoLayers", "StartTime", "EndTime", "PacketsOutOfOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsStat), global::Livekit.Server.Sdk.Dotnet.AnalyticsStat.Parser, new[]{ "Id", "AnalyticsKey", "Kind", "TimeStamp", "Node", "RoomId", "RoomName", "ParticipantId", "TrackId", "Score", "Streams", "Mime", "MinScore", "MedianScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsStats), global::Livekit.Server.Sdk.Dotnet.AnalyticsStats.Parser, new[]{ "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta), global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta.Parser, new[]{ "Region", "Node", "ClientAddr", "ClientConnectTime", "ConnectionType", "ReconnectReason", "GeoHash", "Country", "IspAsn" }, new[]{ "GeoHash", "Country", "IspAsn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent), global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent.Parser, new[]{ "Id", "Type", "Timestamp", "RoomId", "Room", "ParticipantId", "Participant", "TrackId", "Track", "AnalyticsKey", "ClientInfo", "ClientMeta", "EgressId", "IngressId", "MaxSubscribedVideoQuality", "Publisher", "Mime", "Egress", "Ingress", "Error", "RtpStats", "VideoLayer", "NodeId", "SipCallId", "SipCall", "SipTrunkId", "SipInboundTrunk", "SipOutboundTrunk", "SipDispatchRuleId", "SipDispatchRule", "SipTransfer", "Report", "ApiCall", "Webhook" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsEvents), global::Livekit.Server.Sdk.Dotnet.AnalyticsEvents.Parser, new[]{ "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant), global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant.Parser, new[]{ "Id", "Identity", "Name", "State", "JoinedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom), global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom.Parser, new[]{ "Id", "Name", "ProjectId", "CreatedAt", "Participants" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AnalyticsNodeRooms), global::Livekit.Server.Sdk.Dotnet.AnalyticsNodeRooms.Parser, new[]{ "NodeId", "SequenceNumber", "Timestamp", "Rooms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ReportInfo), global::Livekit.Server.Sdk.Dotnet.ReportInfo.Parser, new[]{ "FeatureUsage" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.TimeRange), global::Livekit.Server.Sdk.Dotnet.TimeRange.Parser, new[]{ "StartedAt", "EndedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo), global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Parser, new[]{ "Feature", "ProjectId", "RoomName", "RoomId", "ParticipantIdentity", "ParticipantId", "TrackId", "TimeRanges" }, null, new[]{ typeof(global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.APICallRequest), global::Livekit.Server.Sdk.Dotnet.APICallRequest.Parser, new[]{ "CreateRoomRequest", "ListRoomsRequest", "DeleteRoomRequest", "ListParticipantsRequest", "RoomParticipantIdentity", "MuteRoomTrackRequest", "UpdateParticipantRequest", "UpdateSubscriptionsRequest", "SendDataRequest", "UpdateRoomMetadataRequest" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.APICallInfo), global::Livekit.Server.Sdk.Dotnet.APICallInfo.Parser, new[]{ "ProjectId", "Request", "Service", "Method", "NodeId", "Status", "TwirpErrorCode", "TwirpErrorMessage", "RoomName", "RoomId", "ParticipantIdentity", "ParticipantId", "TrackId", "StartedAt", "DurationNs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.WebhookInfo), global::Livekit.Server.Sdk.Dotnet.WebhookInfo.Parser, new[]{ "EventId", "Event", "ProjectId", "RoomName", "RoomId", "ParticipantIdentity", "ParticipantId", "TrackId", "EgressId", "IngressId", "CreatedAt", "QueuedAt", "QueueDurationNs", "SentAt", "SendDurationNs", "Url", "NumDropped", "IsDropped", "ServiceStatus", "ServiceErrorCode", "ServiceError", "SendError" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum StreamType {
    [pbr::OriginalName("UPSTREAM")] Upstream = 0,
    [pbr::OriginalName("DOWNSTREAM")] Downstream = 1,
  }

  public enum AnalyticsEventType {
    [pbr::OriginalName("ROOM_CREATED")] RoomCreated = 0,
    [pbr::OriginalName("ROOM_ENDED")] RoomEnded = 1,
    [pbr::OriginalName("PARTICIPANT_JOINED")] ParticipantJoined = 2,
    [pbr::OriginalName("PARTICIPANT_LEFT")] ParticipantLeft = 3,
    [pbr::OriginalName("PARTICIPANT_CONNECTION_ABORTED")] ParticipantConnectionAborted = 45,
    [pbr::OriginalName("TRACK_PUBLISHED")] TrackPublished = 4,
    [pbr::OriginalName("TRACK_PUBLISH_REQUESTED")] TrackPublishRequested = 20,
    [pbr::OriginalName("TRACK_UNPUBLISHED")] TrackUnpublished = 5,
    [pbr::OriginalName("TRACK_SUBSCRIBED")] TrackSubscribed = 6,
    [pbr::OriginalName("TRACK_SUBSCRIBE_REQUESTED")] TrackSubscribeRequested = 21,
    [pbr::OriginalName("TRACK_SUBSCRIBE_FAILED")] TrackSubscribeFailed = 25,
    [pbr::OriginalName("TRACK_UNSUBSCRIBED")] TrackUnsubscribed = 7,
    [pbr::OriginalName("TRACK_PUBLISHED_UPDATE")] TrackPublishedUpdate = 10,
    [pbr::OriginalName("TRACK_MUTED")] TrackMuted = 23,
    [pbr::OriginalName("TRACK_UNMUTED")] TrackUnmuted = 24,
    [pbr::OriginalName("TRACK_PUBLISH_STATS")] TrackPublishStats = 26,
    [pbr::OriginalName("TRACK_SUBSCRIBE_STATS")] TrackSubscribeStats = 27,
    [pbr::OriginalName("PARTICIPANT_ACTIVE")] ParticipantActive = 11,
    [pbr::OriginalName("PARTICIPANT_RESUMED")] ParticipantResumed = 22,
    [pbr::OriginalName("EGRESS_STARTED")] EgressStarted = 12,
    [pbr::OriginalName("EGRESS_ENDED")] EgressEnded = 13,
    [pbr::OriginalName("EGRESS_UPDATED")] EgressUpdated = 28,
    [pbr::OriginalName("TRACK_MAX_SUBSCRIBED_VIDEO_QUALITY")] TrackMaxSubscribedVideoQuality = 14,
    [pbr::OriginalName("RECONNECTED")] Reconnected = 15,
    [pbr::OriginalName("INGRESS_CREATED")] IngressCreated = 18,
    [pbr::OriginalName("INGRESS_DELETED")] IngressDeleted = 19,
    [pbr::OriginalName("INGRESS_STARTED")] IngressStarted = 16,
    [pbr::OriginalName("INGRESS_ENDED")] IngressEnded = 17,
    [pbr::OriginalName("INGRESS_UPDATED")] IngressUpdated = 29,
    [pbr::OriginalName("SIP_INBOUND_TRUNK_CREATED")] SipInboundTrunkCreated = 30,
    [pbr::OriginalName("SIP_INBOUND_TRUNK_DELETED")] SipInboundTrunkDeleted = 31,
    [pbr::OriginalName("SIP_OUTBOUND_TRUNK_CREATED")] SipOutboundTrunkCreated = 32,
    [pbr::OriginalName("SIP_OUTBOUND_TRUNK_DELETED")] SipOutboundTrunkDeleted = 33,
    [pbr::OriginalName("SIP_DISPATCH_RULE_CREATED")] SipDispatchRuleCreated = 34,
    [pbr::OriginalName("SIP_DISPATCH_RULE_DELETED")] SipDispatchRuleDeleted = 35,
    [pbr::OriginalName("SIP_PARTICIPANT_CREATED")] SipParticipantCreated = 36,
    [pbr::OriginalName("SIP_CALL_INCOMING")] SipCallIncoming = 37,
    [pbr::OriginalName("SIP_CALL_STARTED")] SipCallStarted = 38,
    [pbr::OriginalName("SIP_CALL_ENDED")] SipCallEnded = 39,
    [pbr::OriginalName("SIP_TRANSFER_REQUESTED")] SipTransferRequested = 43,
    [pbr::OriginalName("SIP_TRANSFER_COMPLETE")] SipTransferComplete = 44,
    [pbr::OriginalName("REPORT")] Report = 40,
    [pbr::OriginalName("API_CALL")] ApiCall = 41,
    [pbr::OriginalName("WEBHOOK")] Webhook = 42,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsVideoLayer : pb::IMessage<AnalyticsVideoLayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsVideoLayer> _parser = new pb::MessageParser<AnalyticsVideoLayer>(() => new AnalyticsVideoLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsVideoLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsVideoLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsVideoLayer(AnalyticsVideoLayer other) : this() {
      layer_ = other.layer_;
      packets_ = other.packets_;
      bytes_ = other.bytes_;
      frames_ = other.frames_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsVideoLayer Clone() {
      return new AnalyticsVideoLayer(this);
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 1;
    private int layer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "packets" field.</summary>
    public const int PacketsFieldNumber = 2;
    private uint packets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Packets {
      get { return packets_; }
      set {
        packets_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 3;
    private ulong bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 4;
    private uint frames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frames {
      get { return frames_; }
      set {
        frames_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsVideoLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsVideoLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Layer != other.Layer) return false;
      if (Packets != other.Packets) return false;
      if (Bytes != other.Bytes) return false;
      if (Frames != other.Frames) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Layer != 0) hash ^= Layer.GetHashCode();
      if (Packets != 0) hash ^= Packets.GetHashCode();
      if (Bytes != 0UL) hash ^= Bytes.GetHashCode();
      if (Frames != 0) hash ^= Frames.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Layer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Layer);
      }
      if (Packets != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Packets);
      }
      if (Bytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Bytes);
      }
      if (Frames != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Layer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Layer);
      }
      if (Packets != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Packets);
      }
      if (Bytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Bytes);
      }
      if (Frames != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Layer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Layer);
      }
      if (Packets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Packets);
      }
      if (Bytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Bytes);
      }
      if (Frames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frames);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsVideoLayer other) {
      if (other == null) {
        return;
      }
      if (other.Layer != 0) {
        Layer = other.Layer;
      }
      if (other.Packets != 0) {
        Packets = other.Packets;
      }
      if (other.Bytes != 0UL) {
        Bytes = other.Bytes;
      }
      if (other.Frames != 0) {
        Frames = other.Frames;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Layer = input.ReadInt32();
            break;
          }
          case 16: {
            Packets = input.ReadUInt32();
            break;
          }
          case 24: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 32: {
            Frames = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Layer = input.ReadInt32();
            break;
          }
          case 16: {
            Packets = input.ReadUInt32();
            break;
          }
          case 24: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 32: {
            Frames = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsStream : pb::IMessage<AnalyticsStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsStream> _parser = new pb::MessageParser<AnalyticsStream>(() => new AnalyticsStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStream(AnalyticsStream other) : this() {
      ssrc_ = other.ssrc_;
      primaryPackets_ = other.primaryPackets_;
      primaryBytes_ = other.primaryBytes_;
      retransmitPackets_ = other.retransmitPackets_;
      retransmitBytes_ = other.retransmitBytes_;
      paddingPackets_ = other.paddingPackets_;
      paddingBytes_ = other.paddingBytes_;
      packetsLost_ = other.packetsLost_;
      frames_ = other.frames_;
      rtt_ = other.rtt_;
      jitter_ = other.jitter_;
      nacks_ = other.nacks_;
      plis_ = other.plis_;
      firs_ = other.firs_;
      videoLayers_ = other.videoLayers_.Clone();
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      packetsOutOfOrder_ = other.packetsOutOfOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStream Clone() {
      return new AnalyticsStream(this);
    }

    /// <summary>Field number for the "ssrc" field.</summary>
    public const int SsrcFieldNumber = 1;
    private uint ssrc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Ssrc {
      get { return ssrc_; }
      set {
        ssrc_ = value;
      }
    }

    /// <summary>Field number for the "primary_packets" field.</summary>
    public const int PrimaryPacketsFieldNumber = 2;
    private uint primaryPackets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PrimaryPackets {
      get { return primaryPackets_; }
      set {
        primaryPackets_ = value;
      }
    }

    /// <summary>Field number for the "primary_bytes" field.</summary>
    public const int PrimaryBytesFieldNumber = 3;
    private ulong primaryBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PrimaryBytes {
      get { return primaryBytes_; }
      set {
        primaryBytes_ = value;
      }
    }

    /// <summary>Field number for the "retransmit_packets" field.</summary>
    public const int RetransmitPacketsFieldNumber = 4;
    private uint retransmitPackets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RetransmitPackets {
      get { return retransmitPackets_; }
      set {
        retransmitPackets_ = value;
      }
    }

    /// <summary>Field number for the "retransmit_bytes" field.</summary>
    public const int RetransmitBytesFieldNumber = 5;
    private ulong retransmitBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RetransmitBytes {
      get { return retransmitBytes_; }
      set {
        retransmitBytes_ = value;
      }
    }

    /// <summary>Field number for the "padding_packets" field.</summary>
    public const int PaddingPacketsFieldNumber = 6;
    private uint paddingPackets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PaddingPackets {
      get { return paddingPackets_; }
      set {
        paddingPackets_ = value;
      }
    }

    /// <summary>Field number for the "padding_bytes" field.</summary>
    public const int PaddingBytesFieldNumber = 7;
    private ulong paddingBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PaddingBytes {
      get { return paddingBytes_; }
      set {
        paddingBytes_ = value;
      }
    }

    /// <summary>Field number for the "packets_lost" field.</summary>
    public const int PacketsLostFieldNumber = 8;
    private uint packetsLost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PacketsLost {
      get { return packetsLost_; }
      set {
        packetsLost_ = value;
      }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 9;
    private uint frames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frames {
      get { return frames_; }
      set {
        frames_ = value;
      }
    }

    /// <summary>Field number for the "rtt" field.</summary>
    public const int RttFieldNumber = 10;
    private uint rtt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rtt {
      get { return rtt_; }
      set {
        rtt_ = value;
      }
    }

    /// <summary>Field number for the "jitter" field.</summary>
    public const int JitterFieldNumber = 11;
    private uint jitter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Jitter {
      get { return jitter_; }
      set {
        jitter_ = value;
      }
    }

    /// <summary>Field number for the "nacks" field.</summary>
    public const int NacksFieldNumber = 12;
    private uint nacks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Nacks {
      get { return nacks_; }
      set {
        nacks_ = value;
      }
    }

    /// <summary>Field number for the "plis" field.</summary>
    public const int PlisFieldNumber = 13;
    private uint plis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Plis {
      get { return plis_; }
      set {
        plis_ = value;
      }
    }

    /// <summary>Field number for the "firs" field.</summary>
    public const int FirsFieldNumber = 14;
    private uint firs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Firs {
      get { return firs_; }
      set {
        firs_ = value;
      }
    }

    /// <summary>Field number for the "video_layers" field.</summary>
    public const int VideoLayersFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer> _repeated_videoLayers_codec
        = pb::FieldCodec.ForMessage(122, global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer> videoLayers_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsVideoLayer> VideoLayers {
      get { return videoLayers_; }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "packets_out_of_order" field.</summary>
    public const int PacketsOutOfOrderFieldNumber = 19;
    private uint packetsOutOfOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PacketsOutOfOrder {
      get { return packetsOutOfOrder_; }
      set {
        packetsOutOfOrder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ssrc != other.Ssrc) return false;
      if (PrimaryPackets != other.PrimaryPackets) return false;
      if (PrimaryBytes != other.PrimaryBytes) return false;
      if (RetransmitPackets != other.RetransmitPackets) return false;
      if (RetransmitBytes != other.RetransmitBytes) return false;
      if (PaddingPackets != other.PaddingPackets) return false;
      if (PaddingBytes != other.PaddingBytes) return false;
      if (PacketsLost != other.PacketsLost) return false;
      if (Frames != other.Frames) return false;
      if (Rtt != other.Rtt) return false;
      if (Jitter != other.Jitter) return false;
      if (Nacks != other.Nacks) return false;
      if (Plis != other.Plis) return false;
      if (Firs != other.Firs) return false;
      if(!videoLayers_.Equals(other.videoLayers_)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (PacketsOutOfOrder != other.PacketsOutOfOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ssrc != 0) hash ^= Ssrc.GetHashCode();
      if (PrimaryPackets != 0) hash ^= PrimaryPackets.GetHashCode();
      if (PrimaryBytes != 0UL) hash ^= PrimaryBytes.GetHashCode();
      if (RetransmitPackets != 0) hash ^= RetransmitPackets.GetHashCode();
      if (RetransmitBytes != 0UL) hash ^= RetransmitBytes.GetHashCode();
      if (PaddingPackets != 0) hash ^= PaddingPackets.GetHashCode();
      if (PaddingBytes != 0UL) hash ^= PaddingBytes.GetHashCode();
      if (PacketsLost != 0) hash ^= PacketsLost.GetHashCode();
      if (Frames != 0) hash ^= Frames.GetHashCode();
      if (Rtt != 0) hash ^= Rtt.GetHashCode();
      if (Jitter != 0) hash ^= Jitter.GetHashCode();
      if (Nacks != 0) hash ^= Nacks.GetHashCode();
      if (Plis != 0) hash ^= Plis.GetHashCode();
      if (Firs != 0) hash ^= Firs.GetHashCode();
      hash ^= videoLayers_.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (PacketsOutOfOrder != 0) hash ^= PacketsOutOfOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ssrc != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ssrc);
      }
      if (PrimaryPackets != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrimaryPackets);
      }
      if (PrimaryBytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(PrimaryBytes);
      }
      if (RetransmitPackets != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RetransmitPackets);
      }
      if (RetransmitBytes != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(RetransmitBytes);
      }
      if (PaddingPackets != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PaddingPackets);
      }
      if (PaddingBytes != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(PaddingBytes);
      }
      if (PacketsLost != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PacketsLost);
      }
      if (Frames != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Frames);
      }
      if (Rtt != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Rtt);
      }
      if (Jitter != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Jitter);
      }
      if (Nacks != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Nacks);
      }
      if (Plis != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Plis);
      }
      if (Firs != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Firs);
      }
      videoLayers_.WriteTo(output, _repeated_videoLayers_codec);
      if (startTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EndTime);
      }
      if (PacketsOutOfOrder != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PacketsOutOfOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ssrc != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ssrc);
      }
      if (PrimaryPackets != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrimaryPackets);
      }
      if (PrimaryBytes != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(PrimaryBytes);
      }
      if (RetransmitPackets != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RetransmitPackets);
      }
      if (RetransmitBytes != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(RetransmitBytes);
      }
      if (PaddingPackets != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PaddingPackets);
      }
      if (PaddingBytes != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(PaddingBytes);
      }
      if (PacketsLost != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PacketsLost);
      }
      if (Frames != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Frames);
      }
      if (Rtt != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Rtt);
      }
      if (Jitter != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Jitter);
      }
      if (Nacks != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Nacks);
      }
      if (Plis != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Plis);
      }
      if (Firs != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Firs);
      }
      videoLayers_.WriteTo(ref output, _repeated_videoLayers_codec);
      if (startTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(EndTime);
      }
      if (PacketsOutOfOrder != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PacketsOutOfOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ssrc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ssrc);
      }
      if (PrimaryPackets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrimaryPackets);
      }
      if (PrimaryBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PrimaryBytes);
      }
      if (RetransmitPackets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RetransmitPackets);
      }
      if (RetransmitBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RetransmitBytes);
      }
      if (PaddingPackets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaddingPackets);
      }
      if (PaddingBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PaddingBytes);
      }
      if (PacketsLost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketsLost);
      }
      if (Frames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frames);
      }
      if (Rtt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtt);
      }
      if (Jitter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Jitter);
      }
      if (Nacks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nacks);
      }
      if (Plis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Plis);
      }
      if (Firs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Firs);
      }
      size += videoLayers_.CalculateSize(_repeated_videoLayers_codec);
      if (startTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (PacketsOutOfOrder != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PacketsOutOfOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsStream other) {
      if (other == null) {
        return;
      }
      if (other.Ssrc != 0) {
        Ssrc = other.Ssrc;
      }
      if (other.PrimaryPackets != 0) {
        PrimaryPackets = other.PrimaryPackets;
      }
      if (other.PrimaryBytes != 0UL) {
        PrimaryBytes = other.PrimaryBytes;
      }
      if (other.RetransmitPackets != 0) {
        RetransmitPackets = other.RetransmitPackets;
      }
      if (other.RetransmitBytes != 0UL) {
        RetransmitBytes = other.RetransmitBytes;
      }
      if (other.PaddingPackets != 0) {
        PaddingPackets = other.PaddingPackets;
      }
      if (other.PaddingBytes != 0UL) {
        PaddingBytes = other.PaddingBytes;
      }
      if (other.PacketsLost != 0) {
        PacketsLost = other.PacketsLost;
      }
      if (other.Frames != 0) {
        Frames = other.Frames;
      }
      if (other.Rtt != 0) {
        Rtt = other.Rtt;
      }
      if (other.Jitter != 0) {
        Jitter = other.Jitter;
      }
      if (other.Nacks != 0) {
        Nacks = other.Nacks;
      }
      if (other.Plis != 0) {
        Plis = other.Plis;
      }
      if (other.Firs != 0) {
        Firs = other.Firs;
      }
      videoLayers_.Add(other.videoLayers_);
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.PacketsOutOfOrder != 0) {
        PacketsOutOfOrder = other.PacketsOutOfOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ssrc = input.ReadUInt32();
            break;
          }
          case 16: {
            PrimaryPackets = input.ReadUInt32();
            break;
          }
          case 24: {
            PrimaryBytes = input.ReadUInt64();
            break;
          }
          case 32: {
            RetransmitPackets = input.ReadUInt32();
            break;
          }
          case 40: {
            RetransmitBytes = input.ReadUInt64();
            break;
          }
          case 48: {
            PaddingPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            PaddingBytes = input.ReadUInt64();
            break;
          }
          case 64: {
            PacketsLost = input.ReadUInt32();
            break;
          }
          case 72: {
            Frames = input.ReadUInt32();
            break;
          }
          case 80: {
            Rtt = input.ReadUInt32();
            break;
          }
          case 88: {
            Jitter = input.ReadUInt32();
            break;
          }
          case 96: {
            Nacks = input.ReadUInt32();
            break;
          }
          case 104: {
            Plis = input.ReadUInt32();
            break;
          }
          case 112: {
            Firs = input.ReadUInt32();
            break;
          }
          case 122: {
            videoLayers_.AddEntriesFrom(input, _repeated_videoLayers_codec);
            break;
          }
          case 138: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 146: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 152: {
            PacketsOutOfOrder = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ssrc = input.ReadUInt32();
            break;
          }
          case 16: {
            PrimaryPackets = input.ReadUInt32();
            break;
          }
          case 24: {
            PrimaryBytes = input.ReadUInt64();
            break;
          }
          case 32: {
            RetransmitPackets = input.ReadUInt32();
            break;
          }
          case 40: {
            RetransmitBytes = input.ReadUInt64();
            break;
          }
          case 48: {
            PaddingPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            PaddingBytes = input.ReadUInt64();
            break;
          }
          case 64: {
            PacketsLost = input.ReadUInt32();
            break;
          }
          case 72: {
            Frames = input.ReadUInt32();
            break;
          }
          case 80: {
            Rtt = input.ReadUInt32();
            break;
          }
          case 88: {
            Jitter = input.ReadUInt32();
            break;
          }
          case 96: {
            Nacks = input.ReadUInt32();
            break;
          }
          case 104: {
            Plis = input.ReadUInt32();
            break;
          }
          case 112: {
            Firs = input.ReadUInt32();
            break;
          }
          case 122: {
            videoLayers_.AddEntriesFrom(ref input, _repeated_videoLayers_codec);
            break;
          }
          case 138: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 146: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 152: {
            PacketsOutOfOrder = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsStat : pb::IMessage<AnalyticsStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsStat> _parser = new pb::MessageParser<AnalyticsStat>(() => new AnalyticsStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStat(AnalyticsStat other) : this() {
      id_ = other.id_;
      analyticsKey_ = other.analyticsKey_;
      kind_ = other.kind_;
      timeStamp_ = other.timeStamp_ != null ? other.timeStamp_.Clone() : null;
      node_ = other.node_;
      roomId_ = other.roomId_;
      roomName_ = other.roomName_;
      participantId_ = other.participantId_;
      trackId_ = other.trackId_;
      score_ = other.score_;
      streams_ = other.streams_.Clone();
      mime_ = other.mime_;
      minScore_ = other.minScore_;
      medianScore_ = other.medianScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStat Clone() {
      return new AnalyticsStat(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 14;
    private string id_ = "";
    /// <summary>
    /// unique id for this stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "analytics_key" field.</summary>
    public const int AnalyticsKeyFieldNumber = 1;
    private string analyticsKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnalyticsKey {
      get { return analyticsKey_; }
      set {
        analyticsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private global::Livekit.Server.Sdk.Dotnet.StreamType kind_ = global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamType Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 4;
    private string node_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Node {
      get { return node_; }
      set {
        node_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 5;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 6;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 7;
    private string participantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 8;
    private string trackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 9;
    private float score_;
    /// <summary>
    /// average score
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "streams" field.</summary>
    public const int StreamsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsStream> _repeated_streams_codec
        = pb::FieldCodec.ForMessage(82, global::Livekit.Server.Sdk.Dotnet.AnalyticsStream.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStream> streams_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStream>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStream> Streams {
      get { return streams_; }
    }

    /// <summary>Field number for the "mime" field.</summary>
    public const int MimeFieldNumber = 11;
    private string mime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mime {
      get { return mime_; }
      set {
        mime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_score" field.</summary>
    public const int MinScoreFieldNumber = 12;
    private float minScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinScore {
      get { return minScore_; }
      set {
        minScore_ = value;
      }
    }

    /// <summary>Field number for the "median_score" field.</summary>
    public const int MedianScoreFieldNumber = 13;
    private float medianScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MedianScore {
      get { return medianScore_; }
      set {
        medianScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AnalyticsKey != other.AnalyticsKey) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(TimeStamp, other.TimeStamp)) return false;
      if (Node != other.Node) return false;
      if (RoomId != other.RoomId) return false;
      if (RoomName != other.RoomName) return false;
      if (ParticipantId != other.ParticipantId) return false;
      if (TrackId != other.TrackId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if(!streams_.Equals(other.streams_)) return false;
      if (Mime != other.Mime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinScore, other.MinScore)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MedianScore, other.MedianScore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AnalyticsKey.Length != 0) hash ^= AnalyticsKey.GetHashCode();
      if (Kind != global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream) hash ^= Kind.GetHashCode();
      if (timeStamp_ != null) hash ^= TimeStamp.GetHashCode();
      if (Node.Length != 0) hash ^= Node.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (ParticipantId.Length != 0) hash ^= ParticipantId.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      hash ^= streams_.GetHashCode();
      if (Mime.Length != 0) hash ^= Mime.GetHashCode();
      if (MinScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinScore);
      if (MedianScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MedianScore);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AnalyticsKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AnalyticsKey);
      }
      if (Kind != global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Kind);
      }
      if (timeStamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeStamp);
      }
      if (Node.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Node);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RoomId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TrackId);
      }
      if (Score != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Score);
      }
      streams_.WriteTo(output, _repeated_streams_codec);
      if (Mime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Mime);
      }
      if (MinScore != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MinScore);
      }
      if (MedianScore != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(MedianScore);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AnalyticsKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AnalyticsKey);
      }
      if (Kind != global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Kind);
      }
      if (timeStamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeStamp);
      }
      if (Node.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Node);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RoomId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TrackId);
      }
      if (Score != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Score);
      }
      streams_.WriteTo(ref output, _repeated_streams_codec);
      if (Mime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Mime);
      }
      if (MinScore != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MinScore);
      }
      if (MedianScore != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(MedianScore);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AnalyticsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsKey);
      }
      if (Kind != global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (timeStamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeStamp);
      }
      if (Node.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Node);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (ParticipantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantId);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      size += streams_.CalculateSize(_repeated_streams_codec);
      if (Mime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mime);
      }
      if (MinScore != 0F) {
        size += 1 + 4;
      }
      if (MedianScore != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsStat other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AnalyticsKey.Length != 0) {
        AnalyticsKey = other.AnalyticsKey;
      }
      if (other.Kind != global::Livekit.Server.Sdk.Dotnet.StreamType.Upstream) {
        Kind = other.Kind;
      }
      if (other.timeStamp_ != null) {
        if (timeStamp_ == null) {
          TimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimeStamp.MergeFrom(other.TimeStamp);
      }
      if (other.Node.Length != 0) {
        Node = other.Node;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.ParticipantId.Length != 0) {
        ParticipantId = other.ParticipantId;
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      streams_.Add(other.streams_);
      if (other.Mime.Length != 0) {
        Mime = other.Mime;
      }
      if (other.MinScore != 0F) {
        MinScore = other.MinScore;
      }
      if (other.MedianScore != 0F) {
        MedianScore = other.MedianScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AnalyticsKey = input.ReadString();
            break;
          }
          case 16: {
            Kind = (global::Livekit.Server.Sdk.Dotnet.StreamType) input.ReadEnum();
            break;
          }
          case 26: {
            if (timeStamp_ == null) {
              TimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(TimeStamp);
            break;
          }
          case 34: {
            Node = input.ReadString();
            break;
          }
          case 42: {
            RoomId = input.ReadString();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 58: {
            ParticipantId = input.ReadString();
            break;
          }
          case 66: {
            TrackId = input.ReadString();
            break;
          }
          case 77: {
            Score = input.ReadFloat();
            break;
          }
          case 82: {
            streams_.AddEntriesFrom(input, _repeated_streams_codec);
            break;
          }
          case 90: {
            Mime = input.ReadString();
            break;
          }
          case 101: {
            MinScore = input.ReadFloat();
            break;
          }
          case 109: {
            MedianScore = input.ReadFloat();
            break;
          }
          case 114: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AnalyticsKey = input.ReadString();
            break;
          }
          case 16: {
            Kind = (global::Livekit.Server.Sdk.Dotnet.StreamType) input.ReadEnum();
            break;
          }
          case 26: {
            if (timeStamp_ == null) {
              TimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(TimeStamp);
            break;
          }
          case 34: {
            Node = input.ReadString();
            break;
          }
          case 42: {
            RoomId = input.ReadString();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 58: {
            ParticipantId = input.ReadString();
            break;
          }
          case 66: {
            TrackId = input.ReadString();
            break;
          }
          case 77: {
            Score = input.ReadFloat();
            break;
          }
          case 82: {
            streams_.AddEntriesFrom(ref input, _repeated_streams_codec);
            break;
          }
          case 90: {
            Mime = input.ReadString();
            break;
          }
          case 101: {
            MinScore = input.ReadFloat();
            break;
          }
          case 109: {
            MedianScore = input.ReadFloat();
            break;
          }
          case 114: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsStats : pb::IMessage<AnalyticsStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsStats> _parser = new pb::MessageParser<AnalyticsStats>(() => new AnalyticsStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStats(AnalyticsStats other) : this() {
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsStats Clone() {
      return new AnalyticsStats(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsStat> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(10, global::Livekit.Server.Sdk.Dotnet.AnalyticsStat.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStat> stats_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsStat> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsStats other) {
      if (other == null) {
        return;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsClientMeta : pb::IMessage<AnalyticsClientMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsClientMeta> _parser = new pb::MessageParser<AnalyticsClientMeta>(() => new AnalyticsClientMeta());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsClientMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsClientMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsClientMeta(AnalyticsClientMeta other) : this() {
      _hasBits0 = other._hasBits0;
      region_ = other.region_;
      node_ = other.node_;
      clientAddr_ = other.clientAddr_;
      clientConnectTime_ = other.clientConnectTime_;
      connectionType_ = other.connectionType_;
      reconnectReason_ = other.reconnectReason_;
      geoHash_ = other.geoHash_;
      country_ = other.country_;
      ispAsn_ = other.ispAsn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsClientMeta Clone() {
      return new AnalyticsClientMeta(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private string region_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 2;
    private string node_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Node {
      get { return node_; }
      set {
        node_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_addr" field.</summary>
    public const int ClientAddrFieldNumber = 3;
    private string clientAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAddr {
      get { return clientAddr_; }
      set {
        clientAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_connect_time" field.</summary>
    public const int ClientConnectTimeFieldNumber = 4;
    private uint clientConnectTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientConnectTime {
      get { return clientConnectTime_; }
      set {
        clientConnectTime_ = value;
      }
    }

    /// <summary>Field number for the "connection_type" field.</summary>
    public const int ConnectionTypeFieldNumber = 5;
    private string connectionType_ = "";
    /// <summary>
    /// udp, tcp, turn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectionType {
      get { return connectionType_; }
      set {
        connectionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reconnect_reason" field.</summary>
    public const int ReconnectReasonFieldNumber = 6;
    private global::Livekit.Server.Sdk.Dotnet.ReconnectReason reconnectReason_ = global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ReconnectReason ReconnectReason {
      get { return reconnectReason_; }
      set {
        reconnectReason_ = value;
      }
    }

    /// <summary>Field number for the "geo_hash" field.</summary>
    public const int GeoHashFieldNumber = 7;
    private readonly static string GeoHashDefaultValue = "";

    private string geoHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GeoHash {
      get { return geoHash_ ?? GeoHashDefaultValue; }
      set {
        geoHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "geo_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGeoHash {
      get { return geoHash_ != null; }
    }
    /// <summary>Clears the value of the "geo_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGeoHash() {
      geoHash_ = null;
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 8;
    private readonly static string CountryDefaultValue = "";

    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Country {
      get { return country_ ?? CountryDefaultValue; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountry {
      get { return country_ != null; }
    }
    /// <summary>Clears the value of the "country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountry() {
      country_ = null;
    }

    /// <summary>Field number for the "isp_asn" field.</summary>
    public const int IspAsnFieldNumber = 9;
    private readonly static uint IspAsnDefaultValue = 0;

    private uint ispAsn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint IspAsn {
      get { if ((_hasBits0 & 1) != 0) { return ispAsn_; } else { return IspAsnDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ispAsn_ = value;
      }
    }
    /// <summary>Gets whether the "isp_asn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIspAsn {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isp_asn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIspAsn() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsClientMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsClientMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Region != other.Region) return false;
      if (Node != other.Node) return false;
      if (ClientAddr != other.ClientAddr) return false;
      if (ClientConnectTime != other.ClientConnectTime) return false;
      if (ConnectionType != other.ConnectionType) return false;
      if (ReconnectReason != other.ReconnectReason) return false;
      if (GeoHash != other.GeoHash) return false;
      if (Country != other.Country) return false;
      if (IspAsn != other.IspAsn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (Node.Length != 0) hash ^= Node.GetHashCode();
      if (ClientAddr.Length != 0) hash ^= ClientAddr.GetHashCode();
      if (ClientConnectTime != 0) hash ^= ClientConnectTime.GetHashCode();
      if (ConnectionType.Length != 0) hash ^= ConnectionType.GetHashCode();
      if (ReconnectReason != global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown) hash ^= ReconnectReason.GetHashCode();
      if (HasGeoHash) hash ^= GeoHash.GetHashCode();
      if (HasCountry) hash ^= Country.GetHashCode();
      if (HasIspAsn) hash ^= IspAsn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Region.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Region);
      }
      if (Node.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Node);
      }
      if (ClientAddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientAddr);
      }
      if (ClientConnectTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ClientConnectTime);
      }
      if (ConnectionType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionType);
      }
      if (ReconnectReason != global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ReconnectReason);
      }
      if (HasGeoHash) {
        output.WriteRawTag(58);
        output.WriteString(GeoHash);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasIspAsn) {
        output.WriteRawTag(72);
        output.WriteUInt32(IspAsn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Region.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Region);
      }
      if (Node.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Node);
      }
      if (ClientAddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientAddr);
      }
      if (ClientConnectTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ClientConnectTime);
      }
      if (ConnectionType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionType);
      }
      if (ReconnectReason != global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ReconnectReason);
      }
      if (HasGeoHash) {
        output.WriteRawTag(58);
        output.WriteString(GeoHash);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasIspAsn) {
        output.WriteRawTag(72);
        output.WriteUInt32(IspAsn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (Node.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Node);
      }
      if (ClientAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAddr);
      }
      if (ClientConnectTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientConnectTime);
      }
      if (ConnectionType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionType);
      }
      if (ReconnectReason != global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReconnectReason);
      }
      if (HasGeoHash) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeoHash);
      }
      if (HasCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (HasIspAsn) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IspAsn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsClientMeta other) {
      if (other == null) {
        return;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.Node.Length != 0) {
        Node = other.Node;
      }
      if (other.ClientAddr.Length != 0) {
        ClientAddr = other.ClientAddr;
      }
      if (other.ClientConnectTime != 0) {
        ClientConnectTime = other.ClientConnectTime;
      }
      if (other.ConnectionType.Length != 0) {
        ConnectionType = other.ConnectionType;
      }
      if (other.ReconnectReason != global::Livekit.Server.Sdk.Dotnet.ReconnectReason.RrUnknown) {
        ReconnectReason = other.ReconnectReason;
      }
      if (other.HasGeoHash) {
        GeoHash = other.GeoHash;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasIspAsn) {
        IspAsn = other.IspAsn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Region = input.ReadString();
            break;
          }
          case 18: {
            Node = input.ReadString();
            break;
          }
          case 26: {
            ClientAddr = input.ReadString();
            break;
          }
          case 32: {
            ClientConnectTime = input.ReadUInt32();
            break;
          }
          case 42: {
            ConnectionType = input.ReadString();
            break;
          }
          case 48: {
            ReconnectReason = (global::Livekit.Server.Sdk.Dotnet.ReconnectReason) input.ReadEnum();
            break;
          }
          case 58: {
            GeoHash = input.ReadString();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            IspAsn = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Region = input.ReadString();
            break;
          }
          case 18: {
            Node = input.ReadString();
            break;
          }
          case 26: {
            ClientAddr = input.ReadString();
            break;
          }
          case 32: {
            ClientConnectTime = input.ReadUInt32();
            break;
          }
          case 42: {
            ConnectionType = input.ReadString();
            break;
          }
          case 48: {
            ReconnectReason = (global::Livekit.Server.Sdk.Dotnet.ReconnectReason) input.ReadEnum();
            break;
          }
          case 58: {
            GeoHash = input.ReadString();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            IspAsn = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsEvent : pb::IMessage<AnalyticsEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsEvent> _parser = new pb::MessageParser<AnalyticsEvent>(() => new AnalyticsEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvent(AnalyticsEvent other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      roomId_ = other.roomId_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      participantId_ = other.participantId_;
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      trackId_ = other.trackId_;
      track_ = other.track_ != null ? other.track_.Clone() : null;
      analyticsKey_ = other.analyticsKey_;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      clientMeta_ = other.clientMeta_ != null ? other.clientMeta_.Clone() : null;
      egressId_ = other.egressId_;
      ingressId_ = other.ingressId_;
      maxSubscribedVideoQuality_ = other.maxSubscribedVideoQuality_;
      publisher_ = other.publisher_ != null ? other.publisher_.Clone() : null;
      mime_ = other.mime_;
      egress_ = other.egress_ != null ? other.egress_.Clone() : null;
      ingress_ = other.ingress_ != null ? other.ingress_.Clone() : null;
      error_ = other.error_;
      rtpStats_ = other.rtpStats_ != null ? other.rtpStats_.Clone() : null;
      videoLayer_ = other.videoLayer_;
      nodeId_ = other.nodeId_;
      sipCallId_ = other.sipCallId_;
      sipCall_ = other.sipCall_ != null ? other.sipCall_.Clone() : null;
      sipTrunkId_ = other.sipTrunkId_;
      sipInboundTrunk_ = other.sipInboundTrunk_ != null ? other.sipInboundTrunk_.Clone() : null;
      sipOutboundTrunk_ = other.sipOutboundTrunk_ != null ? other.sipOutboundTrunk_.Clone() : null;
      sipDispatchRuleId_ = other.sipDispatchRuleId_;
      sipDispatchRule_ = other.sipDispatchRule_ != null ? other.sipDispatchRule_.Clone() : null;
      sipTransfer_ = other.sipTransfer_ != null ? other.sipTransfer_.Clone() : null;
      report_ = other.report_ != null ? other.report_.Clone() : null;
      apiCall_ = other.apiCall_ != null ? other.apiCall_.Clone() : null;
      webhook_ = other.webhook_ != null ? other.webhook_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvent Clone() {
      return new AnalyticsEvent(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 25;
    private string id_ = "";
    /// <summary>
    /// unique id for this event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType type_ = global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 4;
    private global::Livekit.Server.Sdk.Dotnet.Room room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.Room Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 5;
    private string participantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 6;
    private global::Livekit.Server.Sdk.Dotnet.ParticipantInfo participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ParticipantInfo Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 7;
    private string trackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track" field.</summary>
    public const int TrackFieldNumber = 8;
    private global::Livekit.Server.Sdk.Dotnet.TrackInfo track_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.TrackInfo Track {
      get { return track_; }
      set {
        track_ = value;
      }
    }

    /// <summary>Field number for the "analytics_key" field.</summary>
    public const int AnalyticsKeyFieldNumber = 10;
    private string analyticsKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnalyticsKey {
      get { return analyticsKey_; }
      set {
        analyticsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 11;
    private global::Livekit.Server.Sdk.Dotnet.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "client_meta" field.</summary>
    public const int ClientMetaFieldNumber = 12;
    private global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta clientMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta ClientMeta {
      get { return clientMeta_; }
      set {
        clientMeta_ = value;
      }
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 13;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ingress_id" field.</summary>
    public const int IngressIdFieldNumber = 19;
    private string ingressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IngressId {
      get { return ingressId_; }
      set {
        ingressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_subscribed_video_quality" field.</summary>
    public const int MaxSubscribedVideoQualityFieldNumber = 14;
    private global::Livekit.Server.Sdk.Dotnet.VideoQuality maxSubscribedVideoQuality_ = global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.VideoQuality MaxSubscribedVideoQuality {
      get { return maxSubscribedVideoQuality_; }
      set {
        maxSubscribedVideoQuality_ = value;
      }
    }

    /// <summary>Field number for the "publisher" field.</summary>
    public const int PublisherFieldNumber = 15;
    private global::Livekit.Server.Sdk.Dotnet.ParticipantInfo publisher_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ParticipantInfo Publisher {
      get { return publisher_; }
      set {
        publisher_ = value;
      }
    }

    /// <summary>Field number for the "mime" field.</summary>
    public const int MimeFieldNumber = 16;
    private string mime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mime {
      get { return mime_; }
      set {
        mime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "egress" field.</summary>
    public const int EgressFieldNumber = 17;
    private global::Livekit.Server.Sdk.Dotnet.EgressInfo egress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EgressInfo Egress {
      get { return egress_; }
      set {
        egress_ = value;
      }
    }

    /// <summary>Field number for the "ingress" field.</summary>
    public const int IngressFieldNumber = 18;
    private global::Livekit.Server.Sdk.Dotnet.IngressInfo ingress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.IngressInfo Ingress {
      get { return ingress_; }
      set {
        ingress_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 20;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtp_stats" field.</summary>
    public const int RtpStatsFieldNumber = 21;
    private global::Livekit.Server.Sdk.Dotnet.RTPStats rtpStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.RTPStats RtpStats {
      get { return rtpStats_; }
      set {
        rtpStats_ = value;
      }
    }

    /// <summary>Field number for the "video_layer" field.</summary>
    public const int VideoLayerFieldNumber = 22;
    private int videoLayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VideoLayer {
      get { return videoLayer_; }
      set {
        videoLayer_ = value;
      }
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 24;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_call_id" field.</summary>
    public const int SipCallIdFieldNumber = 26;
    private string sipCallId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SipCallId {
      get { return sipCallId_; }
      set {
        sipCallId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_call" field.</summary>
    public const int SipCallFieldNumber = 27;
    private global::Livekit.Server.Sdk.Dotnet.SIPCallInfo sipCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SIPCallInfo SipCall {
      get { return sipCall_; }
      set {
        sipCall_ = value;
      }
    }

    /// <summary>Field number for the "sip_trunk_id" field.</summary>
    public const int SipTrunkIdFieldNumber = 28;
    private string sipTrunkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SipTrunkId {
      get { return sipTrunkId_; }
      set {
        sipTrunkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_inbound_trunk" field.</summary>
    public const int SipInboundTrunkFieldNumber = 29;
    private global::Livekit.Server.Sdk.Dotnet.SIPInboundTrunkInfo sipInboundTrunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SIPInboundTrunkInfo SipInboundTrunk {
      get { return sipInboundTrunk_; }
      set {
        sipInboundTrunk_ = value;
      }
    }

    /// <summary>Field number for the "sip_outbound_trunk" field.</summary>
    public const int SipOutboundTrunkFieldNumber = 30;
    private global::Livekit.Server.Sdk.Dotnet.SIPOutboundTrunkInfo sipOutboundTrunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SIPOutboundTrunkInfo SipOutboundTrunk {
      get { return sipOutboundTrunk_; }
      set {
        sipOutboundTrunk_ = value;
      }
    }

    /// <summary>Field number for the "sip_dispatch_rule_id" field.</summary>
    public const int SipDispatchRuleIdFieldNumber = 31;
    private string sipDispatchRuleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SipDispatchRuleId {
      get { return sipDispatchRuleId_; }
      set {
        sipDispatchRuleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sip_dispatch_rule" field.</summary>
    public const int SipDispatchRuleFieldNumber = 32;
    private global::Livekit.Server.Sdk.Dotnet.SIPDispatchRuleInfo sipDispatchRule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SIPDispatchRuleInfo SipDispatchRule {
      get { return sipDispatchRule_; }
      set {
        sipDispatchRule_ = value;
      }
    }

    /// <summary>Field number for the "sip_transfer" field.</summary>
    public const int SipTransferFieldNumber = 36;
    private global::Livekit.Server.Sdk.Dotnet.SIPTransferInfo sipTransfer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SIPTransferInfo SipTransfer {
      get { return sipTransfer_; }
      set {
        sipTransfer_ = value;
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 33;
    private global::Livekit.Server.Sdk.Dotnet.ReportInfo report_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ReportInfo Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    /// <summary>Field number for the "api_call" field.</summary>
    public const int ApiCallFieldNumber = 34;
    private global::Livekit.Server.Sdk.Dotnet.APICallInfo apiCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.APICallInfo ApiCall {
      get { return apiCall_; }
      set {
        apiCall_ = value;
      }
    }

    /// <summary>Field number for the "webhook" field.</summary>
    public const int WebhookFieldNumber = 35;
    private global::Livekit.Server.Sdk.Dotnet.WebhookInfo webhook_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.WebhookInfo Webhook {
      get { return webhook_; }
      set {
        webhook_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (RoomId != other.RoomId) return false;
      if (!object.Equals(Room, other.Room)) return false;
      if (ParticipantId != other.ParticipantId) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      if (TrackId != other.TrackId) return false;
      if (!object.Equals(Track, other.Track)) return false;
      if (AnalyticsKey != other.AnalyticsKey) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (!object.Equals(ClientMeta, other.ClientMeta)) return false;
      if (EgressId != other.EgressId) return false;
      if (IngressId != other.IngressId) return false;
      if (MaxSubscribedVideoQuality != other.MaxSubscribedVideoQuality) return false;
      if (!object.Equals(Publisher, other.Publisher)) return false;
      if (Mime != other.Mime) return false;
      if (!object.Equals(Egress, other.Egress)) return false;
      if (!object.Equals(Ingress, other.Ingress)) return false;
      if (Error != other.Error) return false;
      if (!object.Equals(RtpStats, other.RtpStats)) return false;
      if (VideoLayer != other.VideoLayer) return false;
      if (NodeId != other.NodeId) return false;
      if (SipCallId != other.SipCallId) return false;
      if (!object.Equals(SipCall, other.SipCall)) return false;
      if (SipTrunkId != other.SipTrunkId) return false;
      if (!object.Equals(SipInboundTrunk, other.SipInboundTrunk)) return false;
      if (!object.Equals(SipOutboundTrunk, other.SipOutboundTrunk)) return false;
      if (SipDispatchRuleId != other.SipDispatchRuleId) return false;
      if (!object.Equals(SipDispatchRule, other.SipDispatchRule)) return false;
      if (!object.Equals(SipTransfer, other.SipTransfer)) return false;
      if (!object.Equals(Report, other.Report)) return false;
      if (!object.Equals(ApiCall, other.ApiCall)) return false;
      if (!object.Equals(Webhook, other.Webhook)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated) hash ^= Type.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (ParticipantId.Length != 0) hash ^= ParticipantId.GetHashCode();
      if (participant_ != null) hash ^= Participant.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      if (track_ != null) hash ^= Track.GetHashCode();
      if (AnalyticsKey.Length != 0) hash ^= AnalyticsKey.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (clientMeta_ != null) hash ^= ClientMeta.GetHashCode();
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (IngressId.Length != 0) hash ^= IngressId.GetHashCode();
      if (MaxSubscribedVideoQuality != global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low) hash ^= MaxSubscribedVideoQuality.GetHashCode();
      if (publisher_ != null) hash ^= Publisher.GetHashCode();
      if (Mime.Length != 0) hash ^= Mime.GetHashCode();
      if (egress_ != null) hash ^= Egress.GetHashCode();
      if (ingress_ != null) hash ^= Ingress.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (rtpStats_ != null) hash ^= RtpStats.GetHashCode();
      if (VideoLayer != 0) hash ^= VideoLayer.GetHashCode();
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (SipCallId.Length != 0) hash ^= SipCallId.GetHashCode();
      if (sipCall_ != null) hash ^= SipCall.GetHashCode();
      if (SipTrunkId.Length != 0) hash ^= SipTrunkId.GetHashCode();
      if (sipInboundTrunk_ != null) hash ^= SipInboundTrunk.GetHashCode();
      if (sipOutboundTrunk_ != null) hash ^= SipOutboundTrunk.GetHashCode();
      if (SipDispatchRuleId.Length != 0) hash ^= SipDispatchRuleId.GetHashCode();
      if (sipDispatchRule_ != null) hash ^= SipDispatchRule.GetHashCode();
      if (sipTransfer_ != null) hash ^= SipTransfer.GetHashCode();
      if (report_ != null) hash ^= Report.GetHashCode();
      if (apiCall_ != null) hash ^= ApiCall.GetHashCode();
      if (webhook_ != null) hash ^= Webhook.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomId);
      }
      if (room_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Room);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantId);
      }
      if (participant_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Participant);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TrackId);
      }
      if (track_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Track);
      }
      if (AnalyticsKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AnalyticsKey);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ClientInfo);
      }
      if (clientMeta_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ClientMeta);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EgressId);
      }
      if (MaxSubscribedVideoQuality != global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low) {
        output.WriteRawTag(112);
        output.WriteEnum((int) MaxSubscribedVideoQuality);
      }
      if (publisher_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Publisher);
      }
      if (Mime.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Mime);
      }
      if (egress_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Egress);
      }
      if (ingress_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Ingress);
      }
      if (IngressId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(IngressId);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Error);
      }
      if (rtpStats_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(RtpStats);
      }
      if (VideoLayer != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(VideoLayer);
      }
      if (NodeId.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(NodeId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Id);
      }
      if (SipCallId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(SipCallId);
      }
      if (sipCall_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(SipCall);
      }
      if (SipTrunkId.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(SipTrunkId);
      }
      if (sipInboundTrunk_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(SipInboundTrunk);
      }
      if (sipOutboundTrunk_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(SipOutboundTrunk);
      }
      if (SipDispatchRuleId.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(SipDispatchRuleId);
      }
      if (sipDispatchRule_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SipDispatchRule);
      }
      if (report_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Report);
      }
      if (apiCall_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ApiCall);
      }
      if (webhook_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Webhook);
      }
      if (sipTransfer_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SipTransfer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomId);
      }
      if (room_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Room);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantId);
      }
      if (participant_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Participant);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TrackId);
      }
      if (track_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Track);
      }
      if (AnalyticsKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AnalyticsKey);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ClientInfo);
      }
      if (clientMeta_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ClientMeta);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EgressId);
      }
      if (MaxSubscribedVideoQuality != global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low) {
        output.WriteRawTag(112);
        output.WriteEnum((int) MaxSubscribedVideoQuality);
      }
      if (publisher_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Publisher);
      }
      if (Mime.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Mime);
      }
      if (egress_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Egress);
      }
      if (ingress_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Ingress);
      }
      if (IngressId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(IngressId);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Error);
      }
      if (rtpStats_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(RtpStats);
      }
      if (VideoLayer != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(VideoLayer);
      }
      if (NodeId.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(NodeId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Id);
      }
      if (SipCallId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(SipCallId);
      }
      if (sipCall_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(SipCall);
      }
      if (SipTrunkId.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(SipTrunkId);
      }
      if (sipInboundTrunk_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(SipInboundTrunk);
      }
      if (sipOutboundTrunk_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(SipOutboundTrunk);
      }
      if (SipDispatchRuleId.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(SipDispatchRuleId);
      }
      if (sipDispatchRule_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SipDispatchRule);
      }
      if (report_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Report);
      }
      if (apiCall_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ApiCall);
      }
      if (webhook_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Webhook);
      }
      if (sipTransfer_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SipTransfer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (ParticipantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantId);
      }
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      if (track_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Track);
      }
      if (AnalyticsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnalyticsKey);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (clientMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientMeta);
      }
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (IngressId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IngressId);
      }
      if (MaxSubscribedVideoQuality != global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MaxSubscribedVideoQuality);
      }
      if (publisher_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Publisher);
      }
      if (Mime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Mime);
      }
      if (egress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Egress);
      }
      if (ingress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ingress);
      }
      if (Error.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (rtpStats_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RtpStats);
      }
      if (VideoLayer != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VideoLayer);
      }
      if (NodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (SipCallId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SipCallId);
      }
      if (sipCall_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SipCall);
      }
      if (SipTrunkId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SipTrunkId);
      }
      if (sipInboundTrunk_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SipInboundTrunk);
      }
      if (sipOutboundTrunk_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SipOutboundTrunk);
      }
      if (SipDispatchRuleId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SipDispatchRuleId);
      }
      if (sipDispatchRule_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SipDispatchRule);
      }
      if (sipTransfer_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SipTransfer);
      }
      if (report_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Report);
      }
      if (apiCall_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ApiCall);
      }
      if (webhook_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Webhook);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsEvent other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType.RoomCreated) {
        Type = other.Type;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Livekit.Server.Sdk.Dotnet.Room();
        }
        Room.MergeFrom(other.Room);
      }
      if (other.ParticipantId.Length != 0) {
        ParticipantId = other.ParticipantId;
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
        }
        Participant.MergeFrom(other.Participant);
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      if (other.track_ != null) {
        if (track_ == null) {
          Track = new global::Livekit.Server.Sdk.Dotnet.TrackInfo();
        }
        Track.MergeFrom(other.Track);
      }
      if (other.AnalyticsKey.Length != 0) {
        AnalyticsKey = other.AnalyticsKey;
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Livekit.Server.Sdk.Dotnet.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.clientMeta_ != null) {
        if (clientMeta_ == null) {
          ClientMeta = new global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta();
        }
        ClientMeta.MergeFrom(other.ClientMeta);
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      if (other.IngressId.Length != 0) {
        IngressId = other.IngressId;
      }
      if (other.MaxSubscribedVideoQuality != global::Livekit.Server.Sdk.Dotnet.VideoQuality.Low) {
        MaxSubscribedVideoQuality = other.MaxSubscribedVideoQuality;
      }
      if (other.publisher_ != null) {
        if (publisher_ == null) {
          Publisher = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
        }
        Publisher.MergeFrom(other.Publisher);
      }
      if (other.Mime.Length != 0) {
        Mime = other.Mime;
      }
      if (other.egress_ != null) {
        if (egress_ == null) {
          Egress = new global::Livekit.Server.Sdk.Dotnet.EgressInfo();
        }
        Egress.MergeFrom(other.Egress);
      }
      if (other.ingress_ != null) {
        if (ingress_ == null) {
          Ingress = new global::Livekit.Server.Sdk.Dotnet.IngressInfo();
        }
        Ingress.MergeFrom(other.Ingress);
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.rtpStats_ != null) {
        if (rtpStats_ == null) {
          RtpStats = new global::Livekit.Server.Sdk.Dotnet.RTPStats();
        }
        RtpStats.MergeFrom(other.RtpStats);
      }
      if (other.VideoLayer != 0) {
        VideoLayer = other.VideoLayer;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.SipCallId.Length != 0) {
        SipCallId = other.SipCallId;
      }
      if (other.sipCall_ != null) {
        if (sipCall_ == null) {
          SipCall = new global::Livekit.Server.Sdk.Dotnet.SIPCallInfo();
        }
        SipCall.MergeFrom(other.SipCall);
      }
      if (other.SipTrunkId.Length != 0) {
        SipTrunkId = other.SipTrunkId;
      }
      if (other.sipInboundTrunk_ != null) {
        if (sipInboundTrunk_ == null) {
          SipInboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPInboundTrunkInfo();
        }
        SipInboundTrunk.MergeFrom(other.SipInboundTrunk);
      }
      if (other.sipOutboundTrunk_ != null) {
        if (sipOutboundTrunk_ == null) {
          SipOutboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPOutboundTrunkInfo();
        }
        SipOutboundTrunk.MergeFrom(other.SipOutboundTrunk);
      }
      if (other.SipDispatchRuleId.Length != 0) {
        SipDispatchRuleId = other.SipDispatchRuleId;
      }
      if (other.sipDispatchRule_ != null) {
        if (sipDispatchRule_ == null) {
          SipDispatchRule = new global::Livekit.Server.Sdk.Dotnet.SIPDispatchRuleInfo();
        }
        SipDispatchRule.MergeFrom(other.SipDispatchRule);
      }
      if (other.sipTransfer_ != null) {
        if (sipTransfer_ == null) {
          SipTransfer = new global::Livekit.Server.Sdk.Dotnet.SIPTransferInfo();
        }
        SipTransfer.MergeFrom(other.SipTransfer);
      }
      if (other.report_ != null) {
        if (report_ == null) {
          Report = new global::Livekit.Server.Sdk.Dotnet.ReportInfo();
        }
        Report.MergeFrom(other.Report);
      }
      if (other.apiCall_ != null) {
        if (apiCall_ == null) {
          ApiCall = new global::Livekit.Server.Sdk.Dotnet.APICallInfo();
        }
        ApiCall.MergeFrom(other.ApiCall);
      }
      if (other.webhook_ != null) {
        if (webhook_ == null) {
          Webhook = new global::Livekit.Server.Sdk.Dotnet.WebhookInfo();
        }
        Webhook.MergeFrom(other.Webhook);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType) input.ReadEnum();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            RoomId = input.ReadString();
            break;
          }
          case 34: {
            if (room_ == null) {
              Room = new global::Livekit.Server.Sdk.Dotnet.Room();
            }
            input.ReadMessage(Room);
            break;
          }
          case 42: {
            ParticipantId = input.ReadString();
            break;
          }
          case 50: {
            if (participant_ == null) {
              Participant = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 58: {
            TrackId = input.ReadString();
            break;
          }
          case 66: {
            if (track_ == null) {
              Track = new global::Livekit.Server.Sdk.Dotnet.TrackInfo();
            }
            input.ReadMessage(Track);
            break;
          }
          case 82: {
            AnalyticsKey = input.ReadString();
            break;
          }
          case 90: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Livekit.Server.Sdk.Dotnet.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 98: {
            if (clientMeta_ == null) {
              ClientMeta = new global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta();
            }
            input.ReadMessage(ClientMeta);
            break;
          }
          case 106: {
            EgressId = input.ReadString();
            break;
          }
          case 112: {
            MaxSubscribedVideoQuality = (global::Livekit.Server.Sdk.Dotnet.VideoQuality) input.ReadEnum();
            break;
          }
          case 122: {
            if (publisher_ == null) {
              Publisher = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
            }
            input.ReadMessage(Publisher);
            break;
          }
          case 130: {
            Mime = input.ReadString();
            break;
          }
          case 138: {
            if (egress_ == null) {
              Egress = new global::Livekit.Server.Sdk.Dotnet.EgressInfo();
            }
            input.ReadMessage(Egress);
            break;
          }
          case 146: {
            if (ingress_ == null) {
              Ingress = new global::Livekit.Server.Sdk.Dotnet.IngressInfo();
            }
            input.ReadMessage(Ingress);
            break;
          }
          case 154: {
            IngressId = input.ReadString();
            break;
          }
          case 162: {
            Error = input.ReadString();
            break;
          }
          case 170: {
            if (rtpStats_ == null) {
              RtpStats = new global::Livekit.Server.Sdk.Dotnet.RTPStats();
            }
            input.ReadMessage(RtpStats);
            break;
          }
          case 176: {
            VideoLayer = input.ReadInt32();
            break;
          }
          case 194: {
            NodeId = input.ReadString();
            break;
          }
          case 202: {
            Id = input.ReadString();
            break;
          }
          case 210: {
            SipCallId = input.ReadString();
            break;
          }
          case 218: {
            if (sipCall_ == null) {
              SipCall = new global::Livekit.Server.Sdk.Dotnet.SIPCallInfo();
            }
            input.ReadMessage(SipCall);
            break;
          }
          case 226: {
            SipTrunkId = input.ReadString();
            break;
          }
          case 234: {
            if (sipInboundTrunk_ == null) {
              SipInboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPInboundTrunkInfo();
            }
            input.ReadMessage(SipInboundTrunk);
            break;
          }
          case 242: {
            if (sipOutboundTrunk_ == null) {
              SipOutboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPOutboundTrunkInfo();
            }
            input.ReadMessage(SipOutboundTrunk);
            break;
          }
          case 250: {
            SipDispatchRuleId = input.ReadString();
            break;
          }
          case 258: {
            if (sipDispatchRule_ == null) {
              SipDispatchRule = new global::Livekit.Server.Sdk.Dotnet.SIPDispatchRuleInfo();
            }
            input.ReadMessage(SipDispatchRule);
            break;
          }
          case 266: {
            if (report_ == null) {
              Report = new global::Livekit.Server.Sdk.Dotnet.ReportInfo();
            }
            input.ReadMessage(Report);
            break;
          }
          case 274: {
            if (apiCall_ == null) {
              ApiCall = new global::Livekit.Server.Sdk.Dotnet.APICallInfo();
            }
            input.ReadMessage(ApiCall);
            break;
          }
          case 282: {
            if (webhook_ == null) {
              Webhook = new global::Livekit.Server.Sdk.Dotnet.WebhookInfo();
            }
            input.ReadMessage(Webhook);
            break;
          }
          case 290: {
            if (sipTransfer_ == null) {
              SipTransfer = new global::Livekit.Server.Sdk.Dotnet.SIPTransferInfo();
            }
            input.ReadMessage(SipTransfer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Livekit.Server.Sdk.Dotnet.AnalyticsEventType) input.ReadEnum();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 26: {
            RoomId = input.ReadString();
            break;
          }
          case 34: {
            if (room_ == null) {
              Room = new global::Livekit.Server.Sdk.Dotnet.Room();
            }
            input.ReadMessage(Room);
            break;
          }
          case 42: {
            ParticipantId = input.ReadString();
            break;
          }
          case 50: {
            if (participant_ == null) {
              Participant = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 58: {
            TrackId = input.ReadString();
            break;
          }
          case 66: {
            if (track_ == null) {
              Track = new global::Livekit.Server.Sdk.Dotnet.TrackInfo();
            }
            input.ReadMessage(Track);
            break;
          }
          case 82: {
            AnalyticsKey = input.ReadString();
            break;
          }
          case 90: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Livekit.Server.Sdk.Dotnet.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 98: {
            if (clientMeta_ == null) {
              ClientMeta = new global::Livekit.Server.Sdk.Dotnet.AnalyticsClientMeta();
            }
            input.ReadMessage(ClientMeta);
            break;
          }
          case 106: {
            EgressId = input.ReadString();
            break;
          }
          case 112: {
            MaxSubscribedVideoQuality = (global::Livekit.Server.Sdk.Dotnet.VideoQuality) input.ReadEnum();
            break;
          }
          case 122: {
            if (publisher_ == null) {
              Publisher = new global::Livekit.Server.Sdk.Dotnet.ParticipantInfo();
            }
            input.ReadMessage(Publisher);
            break;
          }
          case 130: {
            Mime = input.ReadString();
            break;
          }
          case 138: {
            if (egress_ == null) {
              Egress = new global::Livekit.Server.Sdk.Dotnet.EgressInfo();
            }
            input.ReadMessage(Egress);
            break;
          }
          case 146: {
            if (ingress_ == null) {
              Ingress = new global::Livekit.Server.Sdk.Dotnet.IngressInfo();
            }
            input.ReadMessage(Ingress);
            break;
          }
          case 154: {
            IngressId = input.ReadString();
            break;
          }
          case 162: {
            Error = input.ReadString();
            break;
          }
          case 170: {
            if (rtpStats_ == null) {
              RtpStats = new global::Livekit.Server.Sdk.Dotnet.RTPStats();
            }
            input.ReadMessage(RtpStats);
            break;
          }
          case 176: {
            VideoLayer = input.ReadInt32();
            break;
          }
          case 194: {
            NodeId = input.ReadString();
            break;
          }
          case 202: {
            Id = input.ReadString();
            break;
          }
          case 210: {
            SipCallId = input.ReadString();
            break;
          }
          case 218: {
            if (sipCall_ == null) {
              SipCall = new global::Livekit.Server.Sdk.Dotnet.SIPCallInfo();
            }
            input.ReadMessage(SipCall);
            break;
          }
          case 226: {
            SipTrunkId = input.ReadString();
            break;
          }
          case 234: {
            if (sipInboundTrunk_ == null) {
              SipInboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPInboundTrunkInfo();
            }
            input.ReadMessage(SipInboundTrunk);
            break;
          }
          case 242: {
            if (sipOutboundTrunk_ == null) {
              SipOutboundTrunk = new global::Livekit.Server.Sdk.Dotnet.SIPOutboundTrunkInfo();
            }
            input.ReadMessage(SipOutboundTrunk);
            break;
          }
          case 250: {
            SipDispatchRuleId = input.ReadString();
            break;
          }
          case 258: {
            if (sipDispatchRule_ == null) {
              SipDispatchRule = new global::Livekit.Server.Sdk.Dotnet.SIPDispatchRuleInfo();
            }
            input.ReadMessage(SipDispatchRule);
            break;
          }
          case 266: {
            if (report_ == null) {
              Report = new global::Livekit.Server.Sdk.Dotnet.ReportInfo();
            }
            input.ReadMessage(Report);
            break;
          }
          case 274: {
            if (apiCall_ == null) {
              ApiCall = new global::Livekit.Server.Sdk.Dotnet.APICallInfo();
            }
            input.ReadMessage(ApiCall);
            break;
          }
          case 282: {
            if (webhook_ == null) {
              Webhook = new global::Livekit.Server.Sdk.Dotnet.WebhookInfo();
            }
            input.ReadMessage(Webhook);
            break;
          }
          case 290: {
            if (sipTransfer_ == null) {
              SipTransfer = new global::Livekit.Server.Sdk.Dotnet.SIPTransferInfo();
            }
            input.ReadMessage(SipTransfer);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsEvents : pb::IMessage<AnalyticsEvents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsEvents> _parser = new pb::MessageParser<AnalyticsEvents>(() => new AnalyticsEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvents(AnalyticsEvents other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsEvents Clone() {
      return new AnalyticsEvents(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent> events_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsEvent> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsEvents other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsRoomParticipant : pb::IMessage<AnalyticsRoomParticipant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsRoomParticipant> _parser = new pb::MessageParser<AnalyticsRoomParticipant>(() => new AnalyticsRoomParticipant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsRoomParticipant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoomParticipant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoomParticipant(AnalyticsRoomParticipant other) : this() {
      id_ = other.id_;
      identity_ = other.identity_;
      name_ = other.name_;
      state_ = other.state_;
      joinedAt_ = other.joinedAt_ != null ? other.joinedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoomParticipant Clone() {
      return new AnalyticsRoomParticipant(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State state_ = global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "joined_at" field.</summary>
    public const int JoinedAtFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp joinedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp JoinedAt {
      get { return joinedAt_; }
      set {
        joinedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsRoomParticipant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsRoomParticipant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Identity != other.Identity) return false;
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (!object.Equals(JoinedAt, other.JoinedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining) hash ^= State.GetHashCode();
      if (joinedAt_ != null) hash ^= JoinedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (State != global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (joinedAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(JoinedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (State != global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (joinedAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(JoinedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (joinedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsRoomParticipant other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State.Joining) {
        State = other.State;
      }
      if (other.joinedAt_ != null) {
        if (joinedAt_ == null) {
          JoinedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        JoinedAt.MergeFrom(other.JoinedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            if (joinedAt_ == null) {
              JoinedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JoinedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Livekit.Server.Sdk.Dotnet.ParticipantInfo.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            if (joinedAt_ == null) {
              JoinedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JoinedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsRoom : pb::IMessage<AnalyticsRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsRoom> _parser = new pb::MessageParser<AnalyticsRoom>(() => new AnalyticsRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoom(AnalyticsRoom other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      projectId_ = other.projectId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      participants_ = other.participants_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRoom Clone() {
      return new AnalyticsRoom(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 5;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant> _repeated_participants_codec
        = pb::FieldCodec.ForMessage(34, global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant> participants_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoomParticipant> Participants {
      get { return participants_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if(!participants_.Equals(other.participants_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      hash ^= participants_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      participants_.WriteTo(output, _repeated_participants_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      participants_.WriteTo(ref output, _repeated_participants_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      size += participants_.CalculateSize(_repeated_participants_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsRoom other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      participants_.Add(other.participants_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            participants_.AddEntriesFrom(input, _repeated_participants_codec);
            break;
          }
          case 42: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            participants_.AddEntriesFrom(ref input, _repeated_participants_codec);
            break;
          }
          case 42: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsNodeRooms : pb::IMessage<AnalyticsNodeRooms>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsNodeRooms> _parser = new pb::MessageParser<AnalyticsNodeRooms>(() => new AnalyticsNodeRooms());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsNodeRooms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsNodeRooms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsNodeRooms(AnalyticsNodeRooms other) : this() {
      nodeId_ = other.nodeId_;
      sequenceNumber_ = other.sequenceNumber_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      rooms_ = other.rooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsNodeRooms Clone() {
      return new AnalyticsNodeRooms(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom> _repeated_rooms_codec
        = pb::FieldCodec.ForMessage(34, global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom> rooms_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.AnalyticsRoom> Rooms {
      get { return rooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsNodeRooms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsNodeRooms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if(!rooms_.Equals(other.rooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= rooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      rooms_.WriteTo(output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      rooms_.WriteTo(ref output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += rooms_.CalculateSize(_repeated_rooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsNodeRooms other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      rooms_.Add(other.rooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            rooms_.AddEntriesFrom(ref input, _repeated_rooms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReportInfo : pb::IMessage<ReportInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportInfo> _parser = new pb::MessageParser<ReportInfo>(() => new ReportInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportInfo(ReportInfo other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.FeatureUsage:
          FeatureUsage = other.FeatureUsage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportInfo Clone() {
      return new ReportInfo(this);
    }

    /// <summary>Field number for the "feature_usage" field.</summary>
    public const int FeatureUsageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo FeatureUsage {
      get { return messageCase_ == MessageOneofCase.FeatureUsage ? (global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.FeatureUsage;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      FeatureUsage = 1,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FeatureUsage, other.FeatureUsage)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.FeatureUsage) hash ^= FeatureUsage.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.FeatureUsage) {
        output.WriteRawTag(10);
        output.WriteMessage(FeatureUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.FeatureUsage) {
        output.WriteRawTag(10);
        output.WriteMessage(FeatureUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.FeatureUsage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeatureUsage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportInfo other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.FeatureUsage:
          if (FeatureUsage == null) {
            FeatureUsage = new global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo();
          }
          FeatureUsage.MergeFrom(other.FeatureUsage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo();
            if (messageCase_ == MessageOneofCase.FeatureUsage) {
              subBuilder.MergeFrom(FeatureUsage);
            }
            input.ReadMessage(subBuilder);
            FeatureUsage = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo();
            if (messageCase_ == MessageOneofCase.FeatureUsage) {
              subBuilder.MergeFrom(FeatureUsage);
            }
            input.ReadMessage(subBuilder);
            FeatureUsage = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TimeRange : pb::IMessage<TimeRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeRange> _parser = new pb::MessageParser<TimeRange>(() => new TimeRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimeRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeRange(TimeRange other) : this() {
      startedAt_ = other.startedAt_ != null ? other.startedAt_.Clone() : null;
      endedAt_ = other.endedAt_ != null ? other.endedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeRange Clone() {
      return new TimeRange(this);
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimeRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimeRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartedAt, other.StartedAt)) return false;
      if (!object.Equals(EndedAt, other.EndedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (startedAt_ != null) hash ^= StartedAt.GetHashCode();
      if (endedAt_ != null) hash ^= EndedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startedAt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartedAt);
      }
      if (endedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startedAt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartedAt);
      }
      if (endedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (startedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartedAt);
      }
      if (endedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimeRange other) {
      if (other == null) {
        return;
      }
      if (other.startedAt_ != null) {
        if (startedAt_ == null) {
          StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartedAt.MergeFrom(other.StartedAt);
      }
      if (other.endedAt_ != null) {
        if (endedAt_ == null) {
          EndedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndedAt.MergeFrom(other.EndedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 18: {
            if (endedAt_ == null) {
              EndedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 18: {
            if (endedAt_ == null) {
              EndedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FeatureUsageInfo : pb::IMessage<FeatureUsageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureUsageInfo> _parser = new pb::MessageParser<FeatureUsageInfo>(() => new FeatureUsageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeatureUsageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureUsageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureUsageInfo(FeatureUsageInfo other) : this() {
      feature_ = other.feature_;
      projectId_ = other.projectId_;
      roomName_ = other.roomName_;
      roomId_ = other.roomId_;
      participantIdentity_ = other.participantIdentity_;
      participantId_ = other.participantId_;
      trackId_ = other.trackId_;
      timeRanges_ = other.timeRanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureUsageInfo Clone() {
      return new FeatureUsageInfo(this);
    }

    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 1;
    private global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature feature_ = global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature Feature {
      get { return feature_; }
      set {
        feature_ = value;
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 3;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_identity" field.</summary>
    public const int ParticipantIdentityFieldNumber = 5;
    private string participantIdentity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantIdentity {
      get { return participantIdentity_; }
      set {
        participantIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 6;
    private string participantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 7;
    private string trackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_ranges" field.</summary>
    public const int TimeRangesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.TimeRange> _repeated_timeRanges_codec
        = pb::FieldCodec.ForMessage(66, global::Livekit.Server.Sdk.Dotnet.TimeRange.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.TimeRange> timeRanges_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.TimeRange>();
    /// <summary>
    /// time ranges during which the feature was enabled.
    /// for e. g., noise cancellation may not be applied when a media track is paused/muted,
    /// this allows reporting only periods during which a feature is avtive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.TimeRange> TimeRanges {
      get { return timeRanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeatureUsageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeatureUsageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Feature != other.Feature) return false;
      if (ProjectId != other.ProjectId) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomId != other.RoomId) return false;
      if (ParticipantIdentity != other.ParticipantIdentity) return false;
      if (ParticipantId != other.ParticipantId) return false;
      if (TrackId != other.TrackId) return false;
      if(!timeRanges_.Equals(other.timeRanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Feature != global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation) hash ^= Feature.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (ParticipantIdentity.Length != 0) hash ^= ParticipantIdentity.GetHashCode();
      if (ParticipantId.Length != 0) hash ^= ParticipantId.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      hash ^= timeRanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Feature != global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Feature);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TrackId);
      }
      timeRanges_.WriteTo(output, _repeated_timeRanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Feature != global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Feature);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TrackId);
      }
      timeRanges_.WriteTo(ref output, _repeated_timeRanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Feature != global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Feature);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantId);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      size += timeRanges_.CalculateSize(_repeated_timeRanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeatureUsageInfo other) {
      if (other == null) {
        return;
      }
      if (other.Feature != global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature.KrispNoiseCancellation) {
        Feature = other.Feature;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.ParticipantIdentity.Length != 0) {
        ParticipantIdentity = other.ParticipantIdentity;
      }
      if (other.ParticipantId.Length != 0) {
        ParticipantId = other.ParticipantId;
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      timeRanges_.Add(other.timeRanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Feature = (global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature) input.ReadEnum();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            RoomName = input.ReadString();
            break;
          }
          case 34: {
            RoomId = input.ReadString();
            break;
          }
          case 42: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 50: {
            ParticipantId = input.ReadString();
            break;
          }
          case 58: {
            TrackId = input.ReadString();
            break;
          }
          case 66: {
            timeRanges_.AddEntriesFrom(input, _repeated_timeRanges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Feature = (global::Livekit.Server.Sdk.Dotnet.FeatureUsageInfo.Types.Feature) input.ReadEnum();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            RoomName = input.ReadString();
            break;
          }
          case 34: {
            RoomId = input.ReadString();
            break;
          }
          case 42: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 50: {
            ParticipantId = input.ReadString();
            break;
          }
          case 58: {
            TrackId = input.ReadString();
            break;
          }
          case 66: {
            timeRanges_.AddEntriesFrom(ref input, _repeated_timeRanges_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FeatureUsageInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Feature {
        [pbr::OriginalName("KRISP_NOISE_CANCELLATION")] KrispNoiseCancellation = 0,
        [pbr::OriginalName("KRISP_BACKGROUND_VOICE_CANCELLATION")] KrispBackgroundVoiceCancellation = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class APICallRequest : pb::IMessage<APICallRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<APICallRequest> _parser = new pb::MessageParser<APICallRequest>(() => new APICallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<APICallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallRequest(APICallRequest other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.CreateRoomRequest:
          CreateRoomRequest = other.CreateRoomRequest.Clone();
          break;
        case MessageOneofCase.ListRoomsRequest:
          ListRoomsRequest = other.ListRoomsRequest.Clone();
          break;
        case MessageOneofCase.DeleteRoomRequest:
          DeleteRoomRequest = other.DeleteRoomRequest.Clone();
          break;
        case MessageOneofCase.ListParticipantsRequest:
          ListParticipantsRequest = other.ListParticipantsRequest.Clone();
          break;
        case MessageOneofCase.RoomParticipantIdentity:
          RoomParticipantIdentity = other.RoomParticipantIdentity.Clone();
          break;
        case MessageOneofCase.MuteRoomTrackRequest:
          MuteRoomTrackRequest = other.MuteRoomTrackRequest.Clone();
          break;
        case MessageOneofCase.UpdateParticipantRequest:
          UpdateParticipantRequest = other.UpdateParticipantRequest.Clone();
          break;
        case MessageOneofCase.UpdateSubscriptionsRequest:
          UpdateSubscriptionsRequest = other.UpdateSubscriptionsRequest.Clone();
          break;
        case MessageOneofCase.SendDataRequest:
          SendDataRequest = other.SendDataRequest.Clone();
          break;
        case MessageOneofCase.UpdateRoomMetadataRequest:
          UpdateRoomMetadataRequest = other.UpdateRoomMetadataRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallRequest Clone() {
      return new APICallRequest(this);
    }

    /// <summary>Field number for the "create_room_request" field.</summary>
    public const int CreateRoomRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest CreateRoomRequest {
      get { return messageCase_ == MessageOneofCase.CreateRoomRequest ? (global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateRoomRequest;
      }
    }

    /// <summary>Field number for the "list_rooms_request" field.</summary>
    public const int ListRoomsRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest ListRoomsRequest {
      get { return messageCase_ == MessageOneofCase.ListRoomsRequest ? (global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ListRoomsRequest;
      }
    }

    /// <summary>Field number for the "delete_room_request" field.</summary>
    public const int DeleteRoomRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest DeleteRoomRequest {
      get { return messageCase_ == MessageOneofCase.DeleteRoomRequest ? (global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.DeleteRoomRequest;
      }
    }

    /// <summary>Field number for the "list_participants_request" field.</summary>
    public const int ListParticipantsRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest ListParticipantsRequest {
      get { return messageCase_ == MessageOneofCase.ListParticipantsRequest ? (global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ListParticipantsRequest;
      }
    }

    /// <summary>Field number for the "room_participant_identity" field.</summary>
    public const int RoomParticipantIdentityFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity RoomParticipantIdentity {
      get { return messageCase_ == MessageOneofCase.RoomParticipantIdentity ? (global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomParticipantIdentity;
      }
    }

    /// <summary>Field number for the "mute_room_track_request" field.</summary>
    public const int MuteRoomTrackRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest MuteRoomTrackRequest {
      get { return messageCase_ == MessageOneofCase.MuteRoomTrackRequest ? (global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.MuteRoomTrackRequest;
      }
    }

    /// <summary>Field number for the "update_participant_request" field.</summary>
    public const int UpdateParticipantRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest UpdateParticipantRequest {
      get { return messageCase_ == MessageOneofCase.UpdateParticipantRequest ? (global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateParticipantRequest;
      }
    }

    /// <summary>Field number for the "update_subscriptions_request" field.</summary>
    public const int UpdateSubscriptionsRequestFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest UpdateSubscriptionsRequest {
      get { return messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest ? (global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateSubscriptionsRequest;
      }
    }

    /// <summary>Field number for the "send_data_request" field.</summary>
    public const int SendDataRequestFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SendDataRequest SendDataRequest {
      get { return messageCase_ == MessageOneofCase.SendDataRequest ? (global::Livekit.Server.Sdk.Dotnet.SendDataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SendDataRequest;
      }
    }

    /// <summary>Field number for the "update_room_metadata_request" field.</summary>
    public const int UpdateRoomMetadataRequestFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest UpdateRoomMetadataRequest {
      get { return messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest ? (global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateRoomMetadataRequest;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      CreateRoomRequest = 1,
      ListRoomsRequest = 2,
      DeleteRoomRequest = 3,
      ListParticipantsRequest = 4,
      RoomParticipantIdentity = 5,
      MuteRoomTrackRequest = 6,
      UpdateParticipantRequest = 7,
      UpdateSubscriptionsRequest = 8,
      SendDataRequest = 9,
      UpdateRoomMetadataRequest = 10,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as APICallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(APICallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateRoomRequest, other.CreateRoomRequest)) return false;
      if (!object.Equals(ListRoomsRequest, other.ListRoomsRequest)) return false;
      if (!object.Equals(DeleteRoomRequest, other.DeleteRoomRequest)) return false;
      if (!object.Equals(ListParticipantsRequest, other.ListParticipantsRequest)) return false;
      if (!object.Equals(RoomParticipantIdentity, other.RoomParticipantIdentity)) return false;
      if (!object.Equals(MuteRoomTrackRequest, other.MuteRoomTrackRequest)) return false;
      if (!object.Equals(UpdateParticipantRequest, other.UpdateParticipantRequest)) return false;
      if (!object.Equals(UpdateSubscriptionsRequest, other.UpdateSubscriptionsRequest)) return false;
      if (!object.Equals(SendDataRequest, other.SendDataRequest)) return false;
      if (!object.Equals(UpdateRoomMetadataRequest, other.UpdateRoomMetadataRequest)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.CreateRoomRequest) hash ^= CreateRoomRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.ListRoomsRequest) hash ^= ListRoomsRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.DeleteRoomRequest) hash ^= DeleteRoomRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.ListParticipantsRequest) hash ^= ListParticipantsRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) hash ^= RoomParticipantIdentity.GetHashCode();
      if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) hash ^= MuteRoomTrackRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) hash ^= UpdateParticipantRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) hash ^= UpdateSubscriptionsRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.SendDataRequest) hash ^= SendDataRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) hash ^= UpdateRoomMetadataRequest.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.CreateRoomRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListRoomsRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(ListRoomsRequest);
      }
      if (messageCase_ == MessageOneofCase.DeleteRoomRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(DeleteRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListParticipantsRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(ListParticipantsRequest);
      }
      if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) {
        output.WriteRawTag(42);
        output.WriteMessage(RoomParticipantIdentity);
      }
      if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(MuteRoomTrackRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateParticipantRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateSubscriptionsRequest);
      }
      if (messageCase_ == MessageOneofCase.SendDataRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(SendDataRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateRoomMetadataRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.CreateRoomRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListRoomsRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(ListRoomsRequest);
      }
      if (messageCase_ == MessageOneofCase.DeleteRoomRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(DeleteRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListParticipantsRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(ListParticipantsRequest);
      }
      if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) {
        output.WriteRawTag(42);
        output.WriteMessage(RoomParticipantIdentity);
      }
      if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(MuteRoomTrackRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateParticipantRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateSubscriptionsRequest);
      }
      if (messageCase_ == MessageOneofCase.SendDataRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(SendDataRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateRoomMetadataRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.CreateRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListRoomsRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListRoomsRequest);
      }
      if (messageCase_ == MessageOneofCase.DeleteRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRoomRequest);
      }
      if (messageCase_ == MessageOneofCase.ListParticipantsRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListParticipantsRequest);
      }
      if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomParticipantIdentity);
      }
      if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MuteRoomTrackRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticipantRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSubscriptionsRequest);
      }
      if (messageCase_ == MessageOneofCase.SendDataRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendDataRequest);
      }
      if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRoomMetadataRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(APICallRequest other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.CreateRoomRequest:
          if (CreateRoomRequest == null) {
            CreateRoomRequest = new global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest();
          }
          CreateRoomRequest.MergeFrom(other.CreateRoomRequest);
          break;
        case MessageOneofCase.ListRoomsRequest:
          if (ListRoomsRequest == null) {
            ListRoomsRequest = new global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest();
          }
          ListRoomsRequest.MergeFrom(other.ListRoomsRequest);
          break;
        case MessageOneofCase.DeleteRoomRequest:
          if (DeleteRoomRequest == null) {
            DeleteRoomRequest = new global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest();
          }
          DeleteRoomRequest.MergeFrom(other.DeleteRoomRequest);
          break;
        case MessageOneofCase.ListParticipantsRequest:
          if (ListParticipantsRequest == null) {
            ListParticipantsRequest = new global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest();
          }
          ListParticipantsRequest.MergeFrom(other.ListParticipantsRequest);
          break;
        case MessageOneofCase.RoomParticipantIdentity:
          if (RoomParticipantIdentity == null) {
            RoomParticipantIdentity = new global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity();
          }
          RoomParticipantIdentity.MergeFrom(other.RoomParticipantIdentity);
          break;
        case MessageOneofCase.MuteRoomTrackRequest:
          if (MuteRoomTrackRequest == null) {
            MuteRoomTrackRequest = new global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest();
          }
          MuteRoomTrackRequest.MergeFrom(other.MuteRoomTrackRequest);
          break;
        case MessageOneofCase.UpdateParticipantRequest:
          if (UpdateParticipantRequest == null) {
            UpdateParticipantRequest = new global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest();
          }
          UpdateParticipantRequest.MergeFrom(other.UpdateParticipantRequest);
          break;
        case MessageOneofCase.UpdateSubscriptionsRequest:
          if (UpdateSubscriptionsRequest == null) {
            UpdateSubscriptionsRequest = new global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest();
          }
          UpdateSubscriptionsRequest.MergeFrom(other.UpdateSubscriptionsRequest);
          break;
        case MessageOneofCase.SendDataRequest:
          if (SendDataRequest == null) {
            SendDataRequest = new global::Livekit.Server.Sdk.Dotnet.SendDataRequest();
          }
          SendDataRequest.MergeFrom(other.SendDataRequest);
          break;
        case MessageOneofCase.UpdateRoomMetadataRequest:
          if (UpdateRoomMetadataRequest == null) {
            UpdateRoomMetadataRequest = new global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest();
          }
          UpdateRoomMetadataRequest.MergeFrom(other.UpdateRoomMetadataRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest();
            if (messageCase_ == MessageOneofCase.CreateRoomRequest) {
              subBuilder.MergeFrom(CreateRoomRequest);
            }
            input.ReadMessage(subBuilder);
            CreateRoomRequest = subBuilder;
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest();
            if (messageCase_ == MessageOneofCase.ListRoomsRequest) {
              subBuilder.MergeFrom(ListRoomsRequest);
            }
            input.ReadMessage(subBuilder);
            ListRoomsRequest = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest();
            if (messageCase_ == MessageOneofCase.DeleteRoomRequest) {
              subBuilder.MergeFrom(DeleteRoomRequest);
            }
            input.ReadMessage(subBuilder);
            DeleteRoomRequest = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest();
            if (messageCase_ == MessageOneofCase.ListParticipantsRequest) {
              subBuilder.MergeFrom(ListParticipantsRequest);
            }
            input.ReadMessage(subBuilder);
            ListParticipantsRequest = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity subBuilder = new global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity();
            if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) {
              subBuilder.MergeFrom(RoomParticipantIdentity);
            }
            input.ReadMessage(subBuilder);
            RoomParticipantIdentity = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest();
            if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) {
              subBuilder.MergeFrom(MuteRoomTrackRequest);
            }
            input.ReadMessage(subBuilder);
            MuteRoomTrackRequest = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest();
            if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) {
              subBuilder.MergeFrom(UpdateParticipantRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateParticipantRequest = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest();
            if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) {
              subBuilder.MergeFrom(UpdateSubscriptionsRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateSubscriptionsRequest = subBuilder;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.SendDataRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.SendDataRequest();
            if (messageCase_ == MessageOneofCase.SendDataRequest) {
              subBuilder.MergeFrom(SendDataRequest);
            }
            input.ReadMessage(subBuilder);
            SendDataRequest = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest();
            if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) {
              subBuilder.MergeFrom(UpdateRoomMetadataRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateRoomMetadataRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.CreateRoomRequest();
            if (messageCase_ == MessageOneofCase.CreateRoomRequest) {
              subBuilder.MergeFrom(CreateRoomRequest);
            }
            input.ReadMessage(subBuilder);
            CreateRoomRequest = subBuilder;
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ListRoomsRequest();
            if (messageCase_ == MessageOneofCase.ListRoomsRequest) {
              subBuilder.MergeFrom(ListRoomsRequest);
            }
            input.ReadMessage(subBuilder);
            ListRoomsRequest = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.DeleteRoomRequest();
            if (messageCase_ == MessageOneofCase.DeleteRoomRequest) {
              subBuilder.MergeFrom(DeleteRoomRequest);
            }
            input.ReadMessage(subBuilder);
            DeleteRoomRequest = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ListParticipantsRequest();
            if (messageCase_ == MessageOneofCase.ListParticipantsRequest) {
              subBuilder.MergeFrom(ListParticipantsRequest);
            }
            input.ReadMessage(subBuilder);
            ListParticipantsRequest = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity subBuilder = new global::Livekit.Server.Sdk.Dotnet.RoomParticipantIdentity();
            if (messageCase_ == MessageOneofCase.RoomParticipantIdentity) {
              subBuilder.MergeFrom(RoomParticipantIdentity);
            }
            input.ReadMessage(subBuilder);
            RoomParticipantIdentity = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.MuteRoomTrackRequest();
            if (messageCase_ == MessageOneofCase.MuteRoomTrackRequest) {
              subBuilder.MergeFrom(MuteRoomTrackRequest);
            }
            input.ReadMessage(subBuilder);
            MuteRoomTrackRequest = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateParticipantRequest();
            if (messageCase_ == MessageOneofCase.UpdateParticipantRequest) {
              subBuilder.MergeFrom(UpdateParticipantRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateParticipantRequest = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateSubscriptionsRequest();
            if (messageCase_ == MessageOneofCase.UpdateSubscriptionsRequest) {
              subBuilder.MergeFrom(UpdateSubscriptionsRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateSubscriptionsRequest = subBuilder;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.SendDataRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.SendDataRequest();
            if (messageCase_ == MessageOneofCase.SendDataRequest) {
              subBuilder.MergeFrom(SendDataRequest);
            }
            input.ReadMessage(subBuilder);
            SendDataRequest = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.UpdateRoomMetadataRequest();
            if (messageCase_ == MessageOneofCase.UpdateRoomMetadataRequest) {
              subBuilder.MergeFrom(UpdateRoomMetadataRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateRoomMetadataRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class APICallInfo : pb::IMessage<APICallInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<APICallInfo> _parser = new pb::MessageParser<APICallInfo>(() => new APICallInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<APICallInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallInfo(APICallInfo other) : this() {
      projectId_ = other.projectId_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      service_ = other.service_;
      method_ = other.method_;
      nodeId_ = other.nodeId_;
      status_ = other.status_;
      twirpErrorCode_ = other.twirpErrorCode_;
      twirpErrorMessage_ = other.twirpErrorMessage_;
      roomName_ = other.roomName_;
      roomId_ = other.roomId_;
      participantIdentity_ = other.participantIdentity_;
      participantId_ = other.participantId_;
      trackId_ = other.trackId_;
      startedAt_ = other.startedAt_ != null ? other.startedAt_.Clone() : null;
      durationNs_ = other.durationNs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public APICallInfo Clone() {
      return new APICallInfo(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Livekit.Server.Sdk.Dotnet.APICallRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.APICallRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private string service_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 4;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 5;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "twirp_error_code" field.</summary>
    public const int TwirpErrorCodeFieldNumber = 7;
    private string twirpErrorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TwirpErrorCode {
      get { return twirpErrorCode_; }
      set {
        twirpErrorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twirp_error_message" field.</summary>
    public const int TwirpErrorMessageFieldNumber = 8;
    private string twirpErrorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TwirpErrorMessage {
      get { return twirpErrorMessage_; }
      set {
        twirpErrorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 9;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 10;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_identity" field.</summary>
    public const int ParticipantIdentityFieldNumber = 11;
    private string participantIdentity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantIdentity {
      get { return participantIdentity_; }
      set {
        participantIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 12;
    private string participantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 13;
    private string trackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "duration_ns" field.</summary>
    public const int DurationNsFieldNumber = 15;
    private long durationNs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationNs {
      get { return durationNs_; }
      set {
        durationNs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as APICallInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(APICallInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (Service != other.Service) return false;
      if (Method != other.Method) return false;
      if (NodeId != other.NodeId) return false;
      if (Status != other.Status) return false;
      if (TwirpErrorCode != other.TwirpErrorCode) return false;
      if (TwirpErrorMessage != other.TwirpErrorMessage) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomId != other.RoomId) return false;
      if (ParticipantIdentity != other.ParticipantIdentity) return false;
      if (ParticipantId != other.ParticipantId) return false;
      if (TrackId != other.TrackId) return false;
      if (!object.Equals(StartedAt, other.StartedAt)) return false;
      if (DurationNs != other.DurationNs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (TwirpErrorCode.Length != 0) hash ^= TwirpErrorCode.GetHashCode();
      if (TwirpErrorMessage.Length != 0) hash ^= TwirpErrorMessage.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (ParticipantIdentity.Length != 0) hash ^= ParticipantIdentity.GetHashCode();
      if (ParticipantId.Length != 0) hash ^= ParticipantId.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      if (startedAt_ != null) hash ^= StartedAt.GetHashCode();
      if (DurationNs != 0L) hash ^= DurationNs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Service);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Method);
      }
      if (NodeId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeId);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (TwirpErrorCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TwirpErrorCode);
      }
      if (TwirpErrorMessage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TwirpErrorMessage);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TrackId);
      }
      if (startedAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StartedAt);
      }
      if (DurationNs != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(DurationNs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Service);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Method);
      }
      if (NodeId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeId);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (TwirpErrorCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TwirpErrorCode);
      }
      if (TwirpErrorMessage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TwirpErrorMessage);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TrackId);
      }
      if (startedAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StartedAt);
      }
      if (DurationNs != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(DurationNs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (TwirpErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwirpErrorCode);
      }
      if (TwirpErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwirpErrorMessage);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantId);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      if (startedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartedAt);
      }
      if (DurationNs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DurationNs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(APICallInfo other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Livekit.Server.Sdk.Dotnet.APICallRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.TwirpErrorCode.Length != 0) {
        TwirpErrorCode = other.TwirpErrorCode;
      }
      if (other.TwirpErrorMessage.Length != 0) {
        TwirpErrorMessage = other.TwirpErrorMessage;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.ParticipantIdentity.Length != 0) {
        ParticipantIdentity = other.ParticipantIdentity;
      }
      if (other.ParticipantId.Length != 0) {
        ParticipantId = other.ParticipantId;
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      if (other.startedAt_ != null) {
        if (startedAt_ == null) {
          StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartedAt.MergeFrom(other.StartedAt);
      }
      if (other.DurationNs != 0L) {
        DurationNs = other.DurationNs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Livekit.Server.Sdk.Dotnet.APICallRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            Service = input.ReadString();
            break;
          }
          case 34: {
            Method = input.ReadString();
            break;
          }
          case 42: {
            NodeId = input.ReadString();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 58: {
            TwirpErrorCode = input.ReadString();
            break;
          }
          case 66: {
            TwirpErrorMessage = input.ReadString();
            break;
          }
          case 74: {
            RoomName = input.ReadString();
            break;
          }
          case 82: {
            RoomId = input.ReadString();
            break;
          }
          case 90: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 98: {
            ParticipantId = input.ReadString();
            break;
          }
          case 106: {
            TrackId = input.ReadString();
            break;
          }
          case 114: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 120: {
            DurationNs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Livekit.Server.Sdk.Dotnet.APICallRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            Service = input.ReadString();
            break;
          }
          case 34: {
            Method = input.ReadString();
            break;
          }
          case 42: {
            NodeId = input.ReadString();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 58: {
            TwirpErrorCode = input.ReadString();
            break;
          }
          case 66: {
            TwirpErrorMessage = input.ReadString();
            break;
          }
          case 74: {
            RoomName = input.ReadString();
            break;
          }
          case 82: {
            RoomId = input.ReadString();
            break;
          }
          case 90: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 98: {
            ParticipantId = input.ReadString();
            break;
          }
          case 106: {
            TrackId = input.ReadString();
            break;
          }
          case 114: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 120: {
            DurationNs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WebhookInfo : pb::IMessage<WebhookInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebhookInfo> _parser = new pb::MessageParser<WebhookInfo>(() => new WebhookInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WebhookInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitAnalyticsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebhookInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebhookInfo(WebhookInfo other) : this() {
      eventId_ = other.eventId_;
      event_ = other.event_;
      projectId_ = other.projectId_;
      roomName_ = other.roomName_;
      roomId_ = other.roomId_;
      participantIdentity_ = other.participantIdentity_;
      participantId_ = other.participantId_;
      trackId_ = other.trackId_;
      egressId_ = other.egressId_;
      ingressId_ = other.ingressId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      queuedAt_ = other.queuedAt_ != null ? other.queuedAt_.Clone() : null;
      queueDurationNs_ = other.queueDurationNs_;
      sentAt_ = other.sentAt_ != null ? other.sentAt_.Clone() : null;
      sendDurationNs_ = other.sendDurationNs_;
      url_ = other.url_;
      numDropped_ = other.numDropped_;
      isDropped_ = other.isDropped_;
      serviceStatus_ = other.serviceStatus_;
      serviceErrorCode_ = other.serviceErrorCode_;
      serviceError_ = other.serviceError_;
      sendError_ = other.sendError_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebhookInfo Clone() {
      return new WebhookInfo(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    private string event_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Event {
      get { return event_; }
      set {
        event_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 3;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 4;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 5;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_identity" field.</summary>
    public const int ParticipantIdentityFieldNumber = 6;
    private string participantIdentity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantIdentity {
      get { return participantIdentity_; }
      set {
        participantIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant_id" field.</summary>
    public const int ParticipantIdFieldNumber = 7;
    private string participantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParticipantId {
      get { return participantId_; }
      set {
        participantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 8;
    private string trackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 9;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ingress_id" field.</summary>
    public const int IngressIdFieldNumber = 10;
    private string ingressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IngressId {
      get { return ingressId_; }
      set {
        ingressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "queued_at" field.</summary>
    public const int QueuedAtFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp queuedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp QueuedAt {
      get { return queuedAt_; }
      set {
        queuedAt_ = value;
      }
    }

    /// <summary>Field number for the "queue_duration_ns" field.</summary>
    public const int QueueDurationNsFieldNumber = 13;
    private long queueDurationNs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long QueueDurationNs {
      get { return queueDurationNs_; }
      set {
        queueDurationNs_ = value;
      }
    }

    /// <summary>Field number for the "sent_at" field.</summary>
    public const int SentAtFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sentAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SentAt {
      get { return sentAt_; }
      set {
        sentAt_ = value;
      }
    }

    /// <summary>Field number for the "send_duration_ns" field.</summary>
    public const int SendDurationNsFieldNumber = 15;
    private long sendDurationNs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SendDurationNs {
      get { return sendDurationNs_; }
      set {
        sendDurationNs_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 16;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_dropped" field.</summary>
    public const int NumDroppedFieldNumber = 17;
    private int numDropped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumDropped {
      get { return numDropped_; }
      set {
        numDropped_ = value;
      }
    }

    /// <summary>Field number for the "is_dropped" field.</summary>
    public const int IsDroppedFieldNumber = 18;
    private bool isDropped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDropped {
      get { return isDropped_; }
      set {
        isDropped_ = value;
      }
    }

    /// <summary>Field number for the "service_status" field.</summary>
    public const int ServiceStatusFieldNumber = 19;
    private string serviceStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceStatus {
      get { return serviceStatus_; }
      set {
        serviceStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_error_code" field.</summary>
    public const int ServiceErrorCodeFieldNumber = 20;
    private int serviceErrorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ServiceErrorCode {
      get { return serviceErrorCode_; }
      set {
        serviceErrorCode_ = value;
      }
    }

    /// <summary>Field number for the "service_error" field.</summary>
    public const int ServiceErrorFieldNumber = 21;
    private string serviceError_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceError {
      get { return serviceError_; }
      set {
        serviceError_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "send_error" field.</summary>
    public const int SendErrorFieldNumber = 22;
    private string sendError_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SendError {
      get { return sendError_; }
      set {
        sendError_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WebhookInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WebhookInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Event != other.Event) return false;
      if (ProjectId != other.ProjectId) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomId != other.RoomId) return false;
      if (ParticipantIdentity != other.ParticipantIdentity) return false;
      if (ParticipantId != other.ParticipantId) return false;
      if (TrackId != other.TrackId) return false;
      if (EgressId != other.EgressId) return false;
      if (IngressId != other.IngressId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!object.Equals(QueuedAt, other.QueuedAt)) return false;
      if (QueueDurationNs != other.QueueDurationNs) return false;
      if (!object.Equals(SentAt, other.SentAt)) return false;
      if (SendDurationNs != other.SendDurationNs) return false;
      if (Url != other.Url) return false;
      if (NumDropped != other.NumDropped) return false;
      if (IsDropped != other.IsDropped) return false;
      if (ServiceStatus != other.ServiceStatus) return false;
      if (ServiceErrorCode != other.ServiceErrorCode) return false;
      if (ServiceError != other.ServiceError) return false;
      if (SendError != other.SendError) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (Event.Length != 0) hash ^= Event.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (ParticipantIdentity.Length != 0) hash ^= ParticipantIdentity.GetHashCode();
      if (ParticipantId.Length != 0) hash ^= ParticipantId.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (IngressId.Length != 0) hash ^= IngressId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (queuedAt_ != null) hash ^= QueuedAt.GetHashCode();
      if (QueueDurationNs != 0L) hash ^= QueueDurationNs.GetHashCode();
      if (sentAt_ != null) hash ^= SentAt.GetHashCode();
      if (SendDurationNs != 0L) hash ^= SendDurationNs.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (NumDropped != 0) hash ^= NumDropped.GetHashCode();
      if (IsDropped != false) hash ^= IsDropped.GetHashCode();
      if (ServiceStatus.Length != 0) hash ^= ServiceStatus.GetHashCode();
      if (ServiceErrorCode != 0) hash ^= ServiceErrorCode.GetHashCode();
      if (ServiceError.Length != 0) hash ^= ServiceError.GetHashCode();
      if (SendError.Length != 0) hash ^= SendError.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Event.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Event);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TrackId);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EgressId);
      }
      if (IngressId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IngressId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreatedAt);
      }
      if (queuedAt_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(QueuedAt);
      }
      if (QueueDurationNs != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(QueueDurationNs);
      }
      if (sentAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(SentAt);
      }
      if (SendDurationNs != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(SendDurationNs);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Url);
      }
      if (NumDropped != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(NumDropped);
      }
      if (IsDropped != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsDropped);
      }
      if (ServiceStatus.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ServiceStatus);
      }
      if (ServiceErrorCode != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ServiceErrorCode);
      }
      if (ServiceError.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ServiceError);
      }
      if (SendError.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(SendError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Event.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Event);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantId);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TrackId);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EgressId);
      }
      if (IngressId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IngressId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreatedAt);
      }
      if (queuedAt_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(QueuedAt);
      }
      if (QueueDurationNs != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(QueueDurationNs);
      }
      if (sentAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(SentAt);
      }
      if (SendDurationNs != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(SendDurationNs);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Url);
      }
      if (NumDropped != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(NumDropped);
      }
      if (IsDropped != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsDropped);
      }
      if (ServiceStatus.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ServiceStatus);
      }
      if (ServiceErrorCode != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ServiceErrorCode);
      }
      if (ServiceError.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ServiceError);
      }
      if (SendError.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(SendError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (Event.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Event);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (ParticipantIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIdentity);
      }
      if (ParticipantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantId);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (IngressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IngressId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (queuedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueuedAt);
      }
      if (QueueDurationNs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueDurationNs);
      }
      if (sentAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SentAt);
      }
      if (SendDurationNs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SendDurationNs);
      }
      if (Url.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (NumDropped != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumDropped);
      }
      if (IsDropped != false) {
        size += 2 + 1;
      }
      if (ServiceStatus.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ServiceStatus);
      }
      if (ServiceErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ServiceErrorCode);
      }
      if (ServiceError.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ServiceError);
      }
      if (SendError.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SendError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WebhookInfo other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.Event.Length != 0) {
        Event = other.Event;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.ParticipantIdentity.Length != 0) {
        ParticipantIdentity = other.ParticipantIdentity;
      }
      if (other.ParticipantId.Length != 0) {
        ParticipantId = other.ParticipantId;
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      if (other.IngressId.Length != 0) {
        IngressId = other.IngressId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.queuedAt_ != null) {
        if (queuedAt_ == null) {
          QueuedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        QueuedAt.MergeFrom(other.QueuedAt);
      }
      if (other.QueueDurationNs != 0L) {
        QueueDurationNs = other.QueueDurationNs;
      }
      if (other.sentAt_ != null) {
        if (sentAt_ == null) {
          SentAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SentAt.MergeFrom(other.SentAt);
      }
      if (other.SendDurationNs != 0L) {
        SendDurationNs = other.SendDurationNs;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.NumDropped != 0) {
        NumDropped = other.NumDropped;
      }
      if (other.IsDropped != false) {
        IsDropped = other.IsDropped;
      }
      if (other.ServiceStatus.Length != 0) {
        ServiceStatus = other.ServiceStatus;
      }
      if (other.ServiceErrorCode != 0) {
        ServiceErrorCode = other.ServiceErrorCode;
      }
      if (other.ServiceError.Length != 0) {
        ServiceError = other.ServiceError;
      }
      if (other.SendError.Length != 0) {
        SendError = other.SendError;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Event = input.ReadString();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 42: {
            RoomId = input.ReadString();
            break;
          }
          case 50: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 58: {
            ParticipantId = input.ReadString();
            break;
          }
          case 66: {
            TrackId = input.ReadString();
            break;
          }
          case 74: {
            EgressId = input.ReadString();
            break;
          }
          case 82: {
            IngressId = input.ReadString();
            break;
          }
          case 90: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 98: {
            if (queuedAt_ == null) {
              QueuedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(QueuedAt);
            break;
          }
          case 104: {
            QueueDurationNs = input.ReadInt64();
            break;
          }
          case 114: {
            if (sentAt_ == null) {
              SentAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SentAt);
            break;
          }
          case 120: {
            SendDurationNs = input.ReadInt64();
            break;
          }
          case 130: {
            Url = input.ReadString();
            break;
          }
          case 136: {
            NumDropped = input.ReadInt32();
            break;
          }
          case 144: {
            IsDropped = input.ReadBool();
            break;
          }
          case 154: {
            ServiceStatus = input.ReadString();
            break;
          }
          case 160: {
            ServiceErrorCode = input.ReadInt32();
            break;
          }
          case 170: {
            ServiceError = input.ReadString();
            break;
          }
          case 178: {
            SendError = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Event = input.ReadString();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 42: {
            RoomId = input.ReadString();
            break;
          }
          case 50: {
            ParticipantIdentity = input.ReadString();
            break;
          }
          case 58: {
            ParticipantId = input.ReadString();
            break;
          }
          case 66: {
            TrackId = input.ReadString();
            break;
          }
          case 74: {
            EgressId = input.ReadString();
            break;
          }
          case 82: {
            IngressId = input.ReadString();
            break;
          }
          case 90: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 98: {
            if (queuedAt_ == null) {
              QueuedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(QueuedAt);
            break;
          }
          case 104: {
            QueueDurationNs = input.ReadInt64();
            break;
          }
          case 114: {
            if (sentAt_ == null) {
              SentAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SentAt);
            break;
          }
          case 120: {
            SendDurationNs = input.ReadInt64();
            break;
          }
          case 130: {
            Url = input.ReadString();
            break;
          }
          case 136: {
            NumDropped = input.ReadInt32();
            break;
          }
          case 144: {
            IsDropped = input.ReadBool();
            break;
          }
          case 154: {
            ServiceStatus = input.ReadString();
            break;
          }
          case 160: {
            ServiceErrorCode = input.ReadInt32();
            break;
          }
          case 170: {
            ServiceError = input.ReadString();
            break;
          }
          case 178: {
            SendError = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: livekit_egress.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Livekit.Server.Sdk.Dotnet {

  /// <summary>Holder for reflection information generated from livekit_egress.proto</summary>
  public static partial class LivekitEgressReflection {

    #region Descriptor
    /// <summary>File descriptor for livekit_egress.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LivekitEgressReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRsaXZla2l0X2VncmVzcy5wcm90bxIHbGl2ZWtpdBoUbGl2ZWtpdF9tb2Rl",
            "bHMucHJvdG8iowUKGlJvb21Db21wb3NpdGVFZ3Jlc3NSZXF1ZXN0EhEKCXJv",
            "b21fbmFtZRgBIAEoCRIOCgZsYXlvdXQYAiABKAkSEgoKYXVkaW9fb25seRgD",
            "IAEoCBIqCgxhdWRpb19taXhpbmcYDyABKA4yFC5saXZla2l0LkF1ZGlvTWl4",
            "aW5nEhIKCnZpZGVvX29ubHkYBCABKAgSFwoPY3VzdG9tX2Jhc2VfdXJsGAUg",
            "ASgJEi4KBGZpbGUYBiABKAsyGi5saXZla2l0LkVuY29kZWRGaWxlT3V0cHV0",
            "QgIYAUgAEisKBnN0cmVhbRgHIAEoCzIVLmxpdmVraXQuU3RyZWFtT3V0cHV0",
            "QgIYAUgAEjQKCHNlZ21lbnRzGAogASgLMhwubGl2ZWtpdC5TZWdtZW50ZWRG",
            "aWxlT3V0cHV0QgIYAUgAEjAKBnByZXNldBgIIAEoDjIeLmxpdmVraXQuRW5j",
            "b2RpbmdPcHRpb25zUHJlc2V0SAESLAoIYWR2YW5jZWQYCSABKAsyGC5saXZl",
            "a2l0LkVuY29kaW5nT3B0aW9uc0gBEjAKDGZpbGVfb3V0cHV0cxgLIAMoCzIa",
            "LmxpdmVraXQuRW5jb2RlZEZpbGVPdXRwdXQSLQoOc3RyZWFtX291dHB1dHMY",
            "DCADKAsyFS5saXZla2l0LlN0cmVhbU91dHB1dBI1Cg9zZWdtZW50X291dHB1",
            "dHMYDSADKAsyHC5saXZla2l0LlNlZ21lbnRlZEZpbGVPdXRwdXQSKwoNaW1h",
            "Z2Vfb3V0cHV0cxgOIAMoCzIULmxpdmVraXQuSW1hZ2VPdXRwdXQSKAoId2Vi",
            "aG9va3MYECADKAsyFi5saXZla2l0LldlYmhvb2tDb25maWdCCAoGb3V0cHV0",
            "QgkKB29wdGlvbnMi2gQKEFdlYkVncmVzc1JlcXVlc3QSCwoDdXJsGAEgASgJ",
            "EhIKCmF1ZGlvX29ubHkYAiABKAgSEgoKdmlkZW9fb25seRgDIAEoCBIaChJh",
            "d2FpdF9zdGFydF9zaWduYWwYDCABKAgSLgoEZmlsZRgEIAEoCzIaLmxpdmVr",
            "aXQuRW5jb2RlZEZpbGVPdXRwdXRCAhgBSAASKwoGc3RyZWFtGAUgASgLMhUu",
            "bGl2ZWtpdC5TdHJlYW1PdXRwdXRCAhgBSAASNAoIc2VnbWVudHMYBiABKAsy",
            "HC5saXZla2l0LlNlZ21lbnRlZEZpbGVPdXRwdXRCAhgBSAASMAoGcHJlc2V0",
            "GAcgASgOMh4ubGl2ZWtpdC5FbmNvZGluZ09wdGlvbnNQcmVzZXRIARIsCghh",
            "ZHZhbmNlZBgIIAEoCzIYLmxpdmVraXQuRW5jb2RpbmdPcHRpb25zSAESMAoM",
            "ZmlsZV9vdXRwdXRzGAkgAygLMhoubGl2ZWtpdC5FbmNvZGVkRmlsZU91dHB1",
            "dBItCg5zdHJlYW1fb3V0cHV0cxgKIAMoCzIVLmxpdmVraXQuU3RyZWFtT3V0",
            "cHV0EjUKD3NlZ21lbnRfb3V0cHV0cxgLIAMoCzIcLmxpdmVraXQuU2VnbWVu",
            "dGVkRmlsZU91dHB1dBIrCg1pbWFnZV9vdXRwdXRzGA0gAygLMhQubGl2ZWtp",
            "dC5JbWFnZU91dHB1dBIoCgh3ZWJob29rcxgOIAMoCzIWLmxpdmVraXQuV2Vi",
            "aG9va0NvbmZpZ0IICgZvdXRwdXRCCQoHb3B0aW9ucyKvAwoYUGFydGljaXBh",
            "bnRFZ3Jlc3NSZXF1ZXN0EhEKCXJvb21fbmFtZRgBIAEoCRIQCghpZGVudGl0",
            "eRgCIAEoCRIUCgxzY3JlZW5fc2hhcmUYAyABKAgSMAoGcHJlc2V0GAQgASgO",
            "Mh4ubGl2ZWtpdC5FbmNvZGluZ09wdGlvbnNQcmVzZXRIABIsCghhZHZhbmNl",
            "ZBgFIAEoCzIYLmxpdmVraXQuRW5jb2RpbmdPcHRpb25zSAASMAoMZmlsZV9v",
            "dXRwdXRzGAYgAygLMhoubGl2ZWtpdC5FbmNvZGVkRmlsZU91dHB1dBItCg5z",
            "dHJlYW1fb3V0cHV0cxgHIAMoCzIVLmxpdmVraXQuU3RyZWFtT3V0cHV0EjUK",
            "D3NlZ21lbnRfb3V0cHV0cxgIIAMoCzIcLmxpdmVraXQuU2VnbWVudGVkRmls",
            "ZU91dHB1dBIrCg1pbWFnZV9vdXRwdXRzGAkgAygLMhQubGl2ZWtpdC5JbWFn",
            "ZU91dHB1dBIoCgh3ZWJob29rcxgKIAMoCzIWLmxpdmVraXQuV2ViaG9va0Nv",
            "bmZpZ0IJCgdvcHRpb25zItcEChtUcmFja0NvbXBvc2l0ZUVncmVzc1JlcXVl",
            "c3QSEQoJcm9vbV9uYW1lGAEgASgJEhYKDmF1ZGlvX3RyYWNrX2lkGAIgASgJ",
            "EhYKDnZpZGVvX3RyYWNrX2lkGAMgASgJEi4KBGZpbGUYBCABKAsyGi5saXZl",
            "a2l0LkVuY29kZWRGaWxlT3V0cHV0QgIYAUgAEisKBnN0cmVhbRgFIAEoCzIV",
            "LmxpdmVraXQuU3RyZWFtT3V0cHV0QgIYAUgAEjQKCHNlZ21lbnRzGAggASgL",
            "MhwubGl2ZWtpdC5TZWdtZW50ZWRGaWxlT3V0cHV0QgIYAUgAEjAKBnByZXNl",
            "dBgGIAEoDjIeLmxpdmVraXQuRW5jb2RpbmdPcHRpb25zUHJlc2V0SAESLAoI",
            "YWR2YW5jZWQYByABKAsyGC5saXZla2l0LkVuY29kaW5nT3B0aW9uc0gBEjAK",
            "DGZpbGVfb3V0cHV0cxgLIAMoCzIaLmxpdmVraXQuRW5jb2RlZEZpbGVPdXRw",
            "dXQSLQoOc3RyZWFtX291dHB1dHMYDCADKAsyFS5saXZla2l0LlN0cmVhbU91",
            "dHB1dBI1Cg9zZWdtZW50X291dHB1dHMYDSADKAsyHC5saXZla2l0LlNlZ21l",
            "bnRlZEZpbGVPdXRwdXQSKwoNaW1hZ2Vfb3V0cHV0cxgOIAMoCzIULmxpdmVr",
            "aXQuSW1hZ2VPdXRwdXQSKAoId2ViaG9va3MYDyADKAsyFi5saXZla2l0Lldl",
            "Ymhvb2tDb25maWdCCAoGb3V0cHV0QgkKB29wdGlvbnMisQEKElRyYWNrRWdy",
            "ZXNzUmVxdWVzdBIRCglyb29tX25hbWUYASABKAkSEAoIdHJhY2tfaWQYAiAB",
            "KAkSKQoEZmlsZRgDIAEoCzIZLmxpdmVraXQuRGlyZWN0RmlsZU91dHB1dEgA",
            "EhcKDXdlYnNvY2tldF91cmwYBCABKAlIABIoCgh3ZWJob29rcxgFIAMoCzIW",
            "LmxpdmVraXQuV2ViaG9va0NvbmZpZ0IICgZvdXRwdXQijgIKEUVuY29kZWRG",
            "aWxlT3V0cHV0EisKCWZpbGVfdHlwZRgBIAEoDjIYLmxpdmVraXQuRW5jb2Rl",
            "ZEZpbGVUeXBlEhAKCGZpbGVwYXRoGAIgASgJEhgKEGRpc2FibGVfbWFuaWZl",
            "c3QYBiABKAgSHwoCczMYAyABKAsyES5saXZla2l0LlMzVXBsb2FkSAASIQoD",
            "Z2NwGAQgASgLMhIubGl2ZWtpdC5HQ1BVcGxvYWRIABIpCgVhenVyZRgFIAEo",
            "CzIYLmxpdmVraXQuQXp1cmVCbG9iVXBsb2FkSAASJwoGYWxpT1NTGAcgASgL",
            "MhUubGl2ZWtpdC5BbGlPU1NVcGxvYWRIAEIICgZvdXRwdXQioAMKE1NlZ21l",
            "bnRlZEZpbGVPdXRwdXQSMAoIcHJvdG9jb2wYASABKA4yHi5saXZla2l0LlNl",
            "Z21lbnRlZEZpbGVQcm90b2NvbBIXCg9maWxlbmFtZV9wcmVmaXgYAiABKAkS",
            "FQoNcGxheWxpc3RfbmFtZRgDIAEoCRIaChJsaXZlX3BsYXlsaXN0X25hbWUY",
            "CyABKAkSGAoQc2VnbWVudF9kdXJhdGlvbhgEIAEoDRI1Cg9maWxlbmFtZV9z",
            "dWZmaXgYCiABKA4yHC5saXZla2l0LlNlZ21lbnRlZEZpbGVTdWZmaXgSGAoQ",
            "ZGlzYWJsZV9tYW5pZmVzdBgIIAEoCBIfCgJzMxgFIAEoCzIRLmxpdmVraXQu",
            "UzNVcGxvYWRIABIhCgNnY3AYBiABKAsyEi5saXZla2l0LkdDUFVwbG9hZEgA",
            "EikKBWF6dXJlGAcgASgLMhgubGl2ZWtpdC5BenVyZUJsb2JVcGxvYWRIABIn",
            "CgZhbGlPU1MYCSABKAsyFS5saXZla2l0LkFsaU9TU1VwbG9hZEgAQggKBm91",
            "dHB1dCLgAQoQRGlyZWN0RmlsZU91dHB1dBIQCghmaWxlcGF0aBgBIAEoCRIY",
            "ChBkaXNhYmxlX21hbmlmZXN0GAUgASgIEh8KAnMzGAIgASgLMhEubGl2ZWtp",
            "dC5TM1VwbG9hZEgAEiEKA2djcBgDIAEoCzISLmxpdmVraXQuR0NQVXBsb2Fk",
            "SAASKQoFYXp1cmUYBCABKAsyGC5saXZla2l0LkF6dXJlQmxvYlVwbG9hZEgA",
            "EicKBmFsaU9TUxgGIAEoCzIVLmxpdmVraXQuQWxpT1NTVXBsb2FkSABCCAoG",
            "b3V0cHV0IvgCCgtJbWFnZU91dHB1dBIYChBjYXB0dXJlX2ludGVydmFsGAEg",
            "ASgNEg0KBXdpZHRoGAIgASgFEg4KBmhlaWdodBgDIAEoBRIXCg9maWxlbmFt",
            "ZV9wcmVmaXgYBCABKAkSMQoPZmlsZW5hbWVfc3VmZml4GAUgASgOMhgubGl2",
            "ZWtpdC5JbWFnZUZpbGVTdWZmaXgSKAoLaW1hZ2VfY29kZWMYBiABKA4yEy5s",
            "aXZla2l0LkltYWdlQ29kZWMSGAoQZGlzYWJsZV9tYW5pZmVzdBgHIAEoCBIf",
            "CgJzMxgIIAEoCzIRLmxpdmVraXQuUzNVcGxvYWRIABIhCgNnY3AYCSABKAsy",
            "Ei5saXZla2l0LkdDUFVwbG9hZEgAEikKBWF6dXJlGAogASgLMhgubGl2ZWtp",
            "dC5BenVyZUJsb2JVcGxvYWRIABInCgZhbGlPU1MYCyABKAsyFS5saXZla2l0",
            "LkFsaU9TU1VwbG9hZEgAQggKBm91dHB1dCKCAwoIUzNVcGxvYWQSEgoKYWNj",
            "ZXNzX2tleRgBIAEoCRIOCgZzZWNyZXQYAiABKAkSFQoNc2Vzc2lvbl90b2tl",
            "bhgLIAEoCRIXCg9hc3N1bWVfcm9sZV9hcm4YDCABKAkSHwoXYXNzdW1lX3Jv",
            "bGVfZXh0ZXJuYWxfaWQYDSABKAkSDgoGcmVnaW9uGAMgASgJEhAKCGVuZHBv",
            "aW50GAQgASgJEg4KBmJ1Y2tldBgFIAEoCRIYChBmb3JjZV9wYXRoX3N0eWxl",
            "GAYgASgIEjEKCG1ldGFkYXRhGAcgAygLMh8ubGl2ZWtpdC5TM1VwbG9hZC5N",
            "ZXRhZGF0YUVudHJ5Eg8KB3RhZ2dpbmcYCCABKAkSGwoTY29udGVudF9kaXNw",
            "b3NpdGlvbhgJIAEoCRIjCgVwcm94eRgKIAEoCzIULmxpdmVraXQuUHJveHlD",
            "b25maWcaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIlUKCUdDUFVwbG9hZBITCgtjcmVkZW50aWFscxgBIAEoCRIO",
            "CgZidWNrZXQYAiABKAkSIwoFcHJveHkYAyABKAsyFC5saXZla2l0LlByb3h5",
            "Q29uZmlnIlQKD0F6dXJlQmxvYlVwbG9hZBIUCgxhY2NvdW50X25hbWUYASAB",
            "KAkSEwoLYWNjb3VudF9rZXkYAiABKAkSFgoOY29udGFpbmVyX25hbWUYAyAB",
            "KAkiZAoMQWxpT1NTVXBsb2FkEhIKCmFjY2Vzc19rZXkYASABKAkSDgoGc2Vj",
            "cmV0GAIgASgJEg4KBnJlZ2lvbhgDIAEoCRIQCghlbmRwb2ludBgEIAEoCRIO",
            "CgZidWNrZXQYBSABKAkiPgoLUHJveHlDb25maWcSCwoDdXJsGAEgASgJEhAK",
            "CHVzZXJuYW1lGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJIkcKDFN0cmVhbU91",
            "dHB1dBIpCghwcm90b2NvbBgBIAEoDjIXLmxpdmVraXQuU3RyZWFtUHJvdG9j",
            "b2wSDAoEdXJscxgCIAMoCSK3AgoPRW5jb2RpbmdPcHRpb25zEg0KBXdpZHRo",
            "GAEgASgFEg4KBmhlaWdodBgCIAEoBRINCgVkZXB0aBgDIAEoBRIRCglmcmFt",
            "ZXJhdGUYBCABKAUSKAoLYXVkaW9fY29kZWMYBSABKA4yEy5saXZla2l0LkF1",
            "ZGlvQ29kZWMSFQoNYXVkaW9fYml0cmF0ZRgGIAEoBRIVCg1hdWRpb19xdWFs",
            "aXR5GAsgASgFEhcKD2F1ZGlvX2ZyZXF1ZW5jeRgHIAEoBRIoCgt2aWRlb19j",
            "b2RlYxgIIAEoDjITLmxpdmVraXQuVmlkZW9Db2RlYxIVCg12aWRlb19iaXRy",
            "YXRlGAkgASgFEhUKDXZpZGVvX3F1YWxpdHkYDCABKAUSGgoSa2V5X2ZyYW1l",
            "X2ludGVydmFsGAogASgBIjgKE1VwZGF0ZUxheW91dFJlcXVlc3QSEQoJZWdy",
            "ZXNzX2lkGAEgASgJEg4KBmxheW91dBgCIAEoCSJdChNVcGRhdGVTdHJlYW1S",
            "ZXF1ZXN0EhEKCWVncmVzc19pZBgBIAEoCRIXCg9hZGRfb3V0cHV0X3VybHMY",
            "AiADKAkSGgoScmVtb3ZlX291dHB1dF91cmxzGAMgAygJIkkKEUxpc3RFZ3Jl",
            "c3NSZXF1ZXN0EhEKCXJvb21fbmFtZRgBIAEoCRIRCgllZ3Jlc3NfaWQYAiAB",
            "KAkSDgoGYWN0aXZlGAMgASgIIjgKEkxpc3RFZ3Jlc3NSZXNwb25zZRIiCgVp",
            "dGVtcxgBIAMoCzITLmxpdmVraXQuRWdyZXNzSW5mbyImChFTdG9wRWdyZXNz",
            "UmVxdWVzdBIRCgllZ3Jlc3NfaWQYASABKAkingcKCkVncmVzc0luZm8SEQoJ",
            "ZWdyZXNzX2lkGAEgASgJEg8KB3Jvb21faWQYAiABKAkSEQoJcm9vbV9uYW1l",
            "GA0gASgJEi4KC3NvdXJjZV90eXBlGBogASgOMhkubGl2ZWtpdC5FZ3Jlc3NT",
            "b3VyY2VUeXBlEiUKBnN0YXR1cxgDIAEoDjIVLmxpdmVraXQuRWdyZXNzU3Rh",
            "dHVzEhIKCnN0YXJ0ZWRfYXQYCiABKAMSEAoIZW5kZWRfYXQYCyABKAMSEgoK",
            "dXBkYXRlZF9hdBgSIAEoAxIPCgdkZXRhaWxzGBUgASgJEg0KBWVycm9yGAkg",
            "ASgJEhIKCmVycm9yX2NvZGUYFiABKAUSPQoOcm9vbV9jb21wb3NpdGUYBCAB",
            "KAsyIy5saXZla2l0LlJvb21Db21wb3NpdGVFZ3Jlc3NSZXF1ZXN0SAASKAoD",
            "d2ViGA4gASgLMhkubGl2ZWtpdC5XZWJFZ3Jlc3NSZXF1ZXN0SAASOAoLcGFy",
            "dGljaXBhbnQYEyABKAsyIS5saXZla2l0LlBhcnRpY2lwYW50RWdyZXNzUmVx",
            "dWVzdEgAEj8KD3RyYWNrX2NvbXBvc2l0ZRgFIAEoCzIkLmxpdmVraXQuVHJh",
            "Y2tDb21wb3NpdGVFZ3Jlc3NSZXF1ZXN0SAASLAoFdHJhY2sYBiABKAsyGy5s",
            "aXZla2l0LlRyYWNrRWdyZXNzUmVxdWVzdEgAEi0KBnN0cmVhbRgHIAEoCzIX",
            "LmxpdmVraXQuU3RyZWFtSW5mb0xpc3RCAhgBSAESJQoEZmlsZRgIIAEoCzIR",
            "LmxpdmVraXQuRmlsZUluZm9CAhgBSAESLQoIc2VnbWVudHMYDCABKAsyFS5s",
            "aXZla2l0LlNlZ21lbnRzSW5mb0ICGAFIARIrCg5zdHJlYW1fcmVzdWx0cxgP",
            "IAMoCzITLmxpdmVraXQuU3RyZWFtSW5mbxInCgxmaWxlX3Jlc3VsdHMYECAD",
            "KAsyES5saXZla2l0LkZpbGVJbmZvEi4KD3NlZ21lbnRfcmVzdWx0cxgRIAMo",
            "CzIVLmxpdmVraXQuU2VnbWVudHNJbmZvEioKDWltYWdlX3Jlc3VsdHMYFCAD",
            "KAsyEy5saXZla2l0LkltYWdlc0luZm8SGQoRbWFuaWZlc3RfbG9jYXRpb24Y",
            "FyABKAkSGwoTYmFja3VwX3N0b3JhZ2VfdXNlZBgZIAEoCEIJCgdyZXF1ZXN0",
            "QggKBnJlc3VsdCI3Cg5TdHJlYW1JbmZvTGlzdBIhCgRpbmZvGAEgAygLMhMu",
            "bGl2ZWtpdC5TdHJlYW1JbmZvOgIYASK8AQoKU3RyZWFtSW5mbxILCgN1cmwY",
            "ASABKAkSEgoKc3RhcnRlZF9hdBgCIAEoAxIQCghlbmRlZF9hdBgDIAEoAxIQ",
            "CghkdXJhdGlvbhgEIAEoAxIqCgZzdGF0dXMYBSABKA4yGi5saXZla2l0LlN0",
            "cmVhbUluZm8uU3RhdHVzEg0KBWVycm9yGAYgASgJIi4KBlN0YXR1cxIKCgZB",
            "Q1RJVkUQABIMCghGSU5JU0hFRBABEgoKBkZBSUxFRBACInQKCEZpbGVJbmZv",
            "EhAKCGZpbGVuYW1lGAEgASgJEhIKCnN0YXJ0ZWRfYXQYAiABKAMSEAoIZW5k",
            "ZWRfYXQYAyABKAMSEAoIZHVyYXRpb24YBiABKAMSDAoEc2l6ZRgEIAEoAxIQ",
            "Cghsb2NhdGlvbhgFIAEoCSLZAQoMU2VnbWVudHNJbmZvEhUKDXBsYXlsaXN0",
            "X25hbWUYASABKAkSGgoSbGl2ZV9wbGF5bGlzdF9uYW1lGAggASgJEhAKCGR1",
            "cmF0aW9uGAIgASgDEgwKBHNpemUYAyABKAMSGQoRcGxheWxpc3RfbG9jYXRp",
            "b24YBCABKAkSHgoWbGl2ZV9wbGF5bGlzdF9sb2NhdGlvbhgJIAEoCRIVCg1z",
            "ZWdtZW50X2NvdW50GAUgASgDEhIKCnN0YXJ0ZWRfYXQYBiABKAMSEAoIZW5k",
            "ZWRfYXQYByABKAMiYAoKSW1hZ2VzSW5mbxIXCg9maWxlbmFtZV9wcmVmaXgY",
            "BCABKAkSEwoLaW1hZ2VfY291bnQYASABKAMSEgoKc3RhcnRlZF9hdBgCIAEo",
            "AxIQCghlbmRlZF9hdBgDIAEoAyLrAQoVQXV0b1BhcnRpY2lwYW50RWdyZXNz",
            "EjAKBnByZXNldBgBIAEoDjIeLmxpdmVraXQuRW5jb2RpbmdPcHRpb25zUHJl",
            "c2V0SAASLAoIYWR2YW5jZWQYAiABKAsyGC5saXZla2l0LkVuY29kaW5nT3B0",
            "aW9uc0gAEjAKDGZpbGVfb3V0cHV0cxgDIAMoCzIaLmxpdmVraXQuRW5jb2Rl",
            "ZEZpbGVPdXRwdXQSNQoPc2VnbWVudF9vdXRwdXRzGAQgAygLMhwubGl2ZWtp",
            "dC5TZWdtZW50ZWRGaWxlT3V0cHV0QgkKB29wdGlvbnMi3wEKD0F1dG9UcmFj",
            "a0VncmVzcxIQCghmaWxlcGF0aBgBIAEoCRIYChBkaXNhYmxlX21hbmlmZXN0",
            "GAUgASgIEh8KAnMzGAIgASgLMhEubGl2ZWtpdC5TM1VwbG9hZEgAEiEKA2dj",
            "cBgDIAEoCzISLmxpdmVraXQuR0NQVXBsb2FkSAASKQoFYXp1cmUYBCABKAsy",
            "GC5saXZla2l0LkF6dXJlQmxvYlVwbG9hZEgAEicKBmFsaU9TUxgGIAEoCzIV",
            "LmxpdmVraXQuQWxpT1NTVXBsb2FkSABCCAoGb3V0cHV0KkIKD0VuY29kZWRG",
            "aWxlVHlwZRIUChBERUZBVUxUX0ZJTEVUWVBFEAASBwoDTVA0EAESBwoDT0dH",
            "EAISBwoDTVAzEAMqTgoVU2VnbWVudGVkRmlsZVByb3RvY29sEiMKH0RFRkFV",
            "TFRfU0VHTUVOVEVEX0ZJTEVfUFJPVE9DT0wQABIQCgxITFNfUFJPVE9DT0wQ",
            "ASovChNTZWdtZW50ZWRGaWxlU3VmZml4EgkKBUlOREVYEAASDQoJVElNRVNU",
            "QU1QEAEqZgoPSW1hZ2VGaWxlU3VmZml4EhYKEklNQUdFX1NVRkZJWF9JTkRF",
            "WBAAEhoKFklNQUdFX1NVRkZJWF9USU1FU1RBTVAQARIfChtJTUFHRV9TVUZG",
            "SVhfTk9ORV9PVkVSV1JJVEUQAio5Cg5TdHJlYW1Qcm90b2NvbBIUChBERUZB",
            "VUxUX1BST1RPQ09MEAASCAoEUlRNUBABEgcKA1NSVBACKlUKC0F1ZGlvTWl4",
            "aW5nEhIKDkRFRkFVTFRfTUlYSU5HEAASFgoSRFVBTF9DSEFOTkVMX0FHRU5U",
            "EAESGgoWRFVBTF9DSEFOTkVMX0FMVEVSTkFURRACKs8BChVFbmNvZGluZ09w",
            "dGlvbnNQcmVzZXQSEAoMSDI2NF83MjBQXzMwEAASEAoMSDI2NF83MjBQXzYw",
            "EAESEQoNSDI2NF8xMDgwUF8zMBACEhEKDUgyNjRfMTA4MFBfNjAQAxIZChVQ",
            "T1JUUkFJVF9IMjY0XzcyMFBfMzAQBBIZChVQT1JUUkFJVF9IMjY0XzcyMFBf",
            "NjAQBRIaChZQT1JUUkFJVF9IMjY0XzEwODBQXzMwEAYSGgoWUE9SVFJBSVRf",
            "SDI2NF8xMDgwUF82MBAHKp8BCgxFZ3Jlc3NTdGF0dXMSEwoPRUdSRVNTX1NU",
            "QVJUSU5HEAASEQoNRUdSRVNTX0FDVElWRRABEhEKDUVHUkVTU19FTkRJTkcQ",
            "AhITCg9FR1JFU1NfQ09NUExFVEUQAxIRCg1FR1JFU1NfRkFJTEVEEAQSEgoO",
            "RUdSRVNTX0FCT1JURUQQBRIYChRFR1JFU1NfTElNSVRfUkVBQ0hFRBAGKkoK",
            "EEVncmVzc1NvdXJjZVR5cGUSGgoWRUdSRVNTX1NPVVJDRV9UWVBFX1dFQhAA",
            "EhoKFkVHUkVTU19TT1VSQ0VfVFlQRV9TREsQATKcBQoGRWdyZXNzElQKGFN0",
            "YXJ0Um9vbUNvbXBvc2l0ZUVncmVzcxIjLmxpdmVraXQuUm9vbUNvbXBvc2l0",
            "ZUVncmVzc1JlcXVlc3QaEy5saXZla2l0LkVncmVzc0luZm8SQAoOU3RhcnRX",
            "ZWJFZ3Jlc3MSGS5saXZla2l0LldlYkVncmVzc1JlcXVlc3QaEy5saXZla2l0",
            "LkVncmVzc0luZm8SUAoWU3RhcnRQYXJ0aWNpcGFudEVncmVzcxIhLmxpdmVr",
            "aXQuUGFydGljaXBhbnRFZ3Jlc3NSZXF1ZXN0GhMubGl2ZWtpdC5FZ3Jlc3NJ",
            "bmZvElYKGVN0YXJ0VHJhY2tDb21wb3NpdGVFZ3Jlc3MSJC5saXZla2l0LlRy",
            "YWNrQ29tcG9zaXRlRWdyZXNzUmVxdWVzdBoTLmxpdmVraXQuRWdyZXNzSW5m",
            "bxJEChBTdGFydFRyYWNrRWdyZXNzEhsubGl2ZWtpdC5UcmFja0VncmVzc1Jl",
            "cXVlc3QaEy5saXZla2l0LkVncmVzc0luZm8SQQoMVXBkYXRlTGF5b3V0Ehwu",
            "bGl2ZWtpdC5VcGRhdGVMYXlvdXRSZXF1ZXN0GhMubGl2ZWtpdC5FZ3Jlc3NJ",
            "bmZvEkEKDFVwZGF0ZVN0cmVhbRIcLmxpdmVraXQuVXBkYXRlU3RyZWFtUmVx",
            "dWVzdBoTLmxpdmVraXQuRWdyZXNzSW5mbxJFCgpMaXN0RWdyZXNzEhoubGl2",
            "ZWtpdC5MaXN0RWdyZXNzUmVxdWVzdBobLmxpdmVraXQuTGlzdEVncmVzc1Jl",
            "c3BvbnNlEj0KClN0b3BFZ3Jlc3MSGi5saXZla2l0LlN0b3BFZ3Jlc3NSZXF1",
            "ZXN0GhMubGl2ZWtpdC5FZ3Jlc3NJbmZvQkZaI2dpdGh1Yi5jb20vbGl2ZWtp",
            "dC9wcm90b2NvbC9saXZla2l0qgINTGl2ZUtpdC5Qcm90b+oCDkxpdmVLaXQ6",
            "OlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Livekit.Server.Sdk.Dotnet.LivekitModelsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Livekit.Server.Sdk.Dotnet.EncodedFileType), typeof(global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol), typeof(global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix), typeof(global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix), typeof(global::Livekit.Server.Sdk.Dotnet.StreamProtocol), typeof(global::Livekit.Server.Sdk.Dotnet.AudioMixing), typeof(global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset), typeof(global::Livekit.Server.Sdk.Dotnet.EgressStatus), typeof(global::Livekit.Server.Sdk.Dotnet.EgressSourceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest), global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest.Parser, new[]{ "RoomName", "Layout", "AudioOnly", "AudioMixing", "VideoOnly", "CustomBaseUrl", "File", "Stream", "Segments", "Preset", "Advanced", "FileOutputs", "StreamOutputs", "SegmentOutputs", "ImageOutputs", "Webhooks" }, new[]{ "Output", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.WebEgressRequest), global::Livekit.Server.Sdk.Dotnet.WebEgressRequest.Parser, new[]{ "Url", "AudioOnly", "VideoOnly", "AwaitStartSignal", "File", "Stream", "Segments", "Preset", "Advanced", "FileOutputs", "StreamOutputs", "SegmentOutputs", "ImageOutputs", "Webhooks" }, new[]{ "Output", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest), global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest.Parser, new[]{ "RoomName", "Identity", "ScreenShare", "Preset", "Advanced", "FileOutputs", "StreamOutputs", "SegmentOutputs", "ImageOutputs", "Webhooks" }, new[]{ "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest), global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest.Parser, new[]{ "RoomName", "AudioTrackId", "VideoTrackId", "File", "Stream", "Segments", "Preset", "Advanced", "FileOutputs", "StreamOutputs", "SegmentOutputs", "ImageOutputs", "Webhooks" }, new[]{ "Output", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest), global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest.Parser, new[]{ "RoomName", "TrackId", "File", "WebsocketUrl", "Webhooks" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput), global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser, new[]{ "FileType", "Filepath", "DisableManifest", "S3", "Gcp", "Azure", "AliOSS" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput), global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser, new[]{ "Protocol", "FilenamePrefix", "PlaylistName", "LivePlaylistName", "SegmentDuration", "FilenameSuffix", "DisableManifest", "S3", "Gcp", "Azure", "AliOSS" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.DirectFileOutput), global::Livekit.Server.Sdk.Dotnet.DirectFileOutput.Parser, new[]{ "Filepath", "DisableManifest", "S3", "Gcp", "Azure", "AliOSS" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ImageOutput), global::Livekit.Server.Sdk.Dotnet.ImageOutput.Parser, new[]{ "CaptureInterval", "Width", "Height", "FilenamePrefix", "FilenameSuffix", "ImageCodec", "DisableManifest", "S3", "Gcp", "Azure", "AliOSS" }, new[]{ "Output" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.S3Upload), global::Livekit.Server.Sdk.Dotnet.S3Upload.Parser, new[]{ "AccessKey", "Secret", "SessionToken", "AssumeRoleArn", "AssumeRoleExternalId", "Region", "Endpoint", "Bucket", "ForcePathStyle", "Metadata", "Tagging", "ContentDisposition", "Proxy" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.GCPUpload), global::Livekit.Server.Sdk.Dotnet.GCPUpload.Parser, new[]{ "Credentials", "Bucket", "Proxy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload), global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload.Parser, new[]{ "AccountName", "AccountKey", "ContainerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AliOSSUpload), global::Livekit.Server.Sdk.Dotnet.AliOSSUpload.Parser, new[]{ "AccessKey", "Secret", "Region", "Endpoint", "Bucket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ProxyConfig), global::Livekit.Server.Sdk.Dotnet.ProxyConfig.Parser, new[]{ "Url", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.StreamOutput), global::Livekit.Server.Sdk.Dotnet.StreamOutput.Parser, new[]{ "Protocol", "Urls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.EncodingOptions), global::Livekit.Server.Sdk.Dotnet.EncodingOptions.Parser, new[]{ "Width", "Height", "Depth", "Framerate", "AudioCodec", "AudioBitrate", "AudioQuality", "AudioFrequency", "VideoCodec", "VideoBitrate", "VideoQuality", "KeyFrameInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.UpdateLayoutRequest), global::Livekit.Server.Sdk.Dotnet.UpdateLayoutRequest.Parser, new[]{ "EgressId", "Layout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.UpdateStreamRequest), global::Livekit.Server.Sdk.Dotnet.UpdateStreamRequest.Parser, new[]{ "EgressId", "AddOutputUrls", "RemoveOutputUrls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ListEgressRequest), global::Livekit.Server.Sdk.Dotnet.ListEgressRequest.Parser, new[]{ "RoomName", "EgressId", "Active" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ListEgressResponse), global::Livekit.Server.Sdk.Dotnet.ListEgressResponse.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.StopEgressRequest), global::Livekit.Server.Sdk.Dotnet.StopEgressRequest.Parser, new[]{ "EgressId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.EgressInfo), global::Livekit.Server.Sdk.Dotnet.EgressInfo.Parser, new[]{ "EgressId", "RoomId", "RoomName", "SourceType", "Status", "StartedAt", "EndedAt", "UpdatedAt", "Details", "Error", "ErrorCode", "RoomComposite", "Web", "Participant", "TrackComposite", "Track", "Stream", "File", "Segments", "StreamResults", "FileResults", "SegmentResults", "ImageResults", "ManifestLocation", "BackupStorageUsed" }, new[]{ "Request", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.StreamInfoList), global::Livekit.Server.Sdk.Dotnet.StreamInfoList.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.StreamInfo), global::Livekit.Server.Sdk.Dotnet.StreamInfo.Parser, new[]{ "Url", "StartedAt", "EndedAt", "Duration", "Status", "Error" }, null, new[]{ typeof(global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.FileInfo), global::Livekit.Server.Sdk.Dotnet.FileInfo.Parser, new[]{ "Filename", "StartedAt", "EndedAt", "Duration", "Size", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.SegmentsInfo), global::Livekit.Server.Sdk.Dotnet.SegmentsInfo.Parser, new[]{ "PlaylistName", "LivePlaylistName", "Duration", "Size", "PlaylistLocation", "LivePlaylistLocation", "SegmentCount", "StartedAt", "EndedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.ImagesInfo), global::Livekit.Server.Sdk.Dotnet.ImagesInfo.Parser, new[]{ "FilenamePrefix", "ImageCount", "StartedAt", "EndedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AutoParticipantEgress), global::Livekit.Server.Sdk.Dotnet.AutoParticipantEgress.Parser, new[]{ "Preset", "Advanced", "FileOutputs", "SegmentOutputs" }, new[]{ "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Livekit.Server.Sdk.Dotnet.AutoTrackEgress), global::Livekit.Server.Sdk.Dotnet.AutoTrackEgress.Parser, new[]{ "Filepath", "DisableManifest", "S3", "Gcp", "Azure", "AliOSS" }, new[]{ "Output" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EncodedFileType {
    /// <summary>
    /// file type chosen based on codecs
    /// </summary>
    [pbr::OriginalName("DEFAULT_FILETYPE")] DefaultFiletype = 0,
    [pbr::OriginalName("MP4")] Mp4 = 1,
    [pbr::OriginalName("OGG")] Ogg = 2,
    [pbr::OriginalName("MP3")] Mp3 = 3,
  }

  public enum SegmentedFileProtocol {
    [pbr::OriginalName("DEFAULT_SEGMENTED_FILE_PROTOCOL")] DefaultSegmentedFileProtocol = 0,
    [pbr::OriginalName("HLS_PROTOCOL")] HlsProtocol = 1,
  }

  public enum SegmentedFileSuffix {
    [pbr::OriginalName("INDEX")] Index = 0,
    [pbr::OriginalName("TIMESTAMP")] Timestamp = 1,
  }

  public enum ImageFileSuffix {
    [pbr::OriginalName("IMAGE_SUFFIX_INDEX")] ImageSuffixIndex = 0,
    [pbr::OriginalName("IMAGE_SUFFIX_TIMESTAMP")] ImageSuffixTimestamp = 1,
    /// <summary>
    /// Do not append any suffix and overwrite the existing image with the latest
    /// </summary>
    [pbr::OriginalName("IMAGE_SUFFIX_NONE_OVERWRITE")] ImageSuffixNoneOverwrite = 2,
  }

  public enum StreamProtocol {
    /// <summary>
    /// protocol chosen based on urls
    /// </summary>
    [pbr::OriginalName("DEFAULT_PROTOCOL")] DefaultProtocol = 0,
    [pbr::OriginalName("RTMP")] Rtmp = 1,
    [pbr::OriginalName("SRT")] Srt = 2,
  }

  public enum AudioMixing {
    /// <summary>
    /// all users are mixed together
    /// </summary>
    [pbr::OriginalName("DEFAULT_MIXING")] DefaultMixing = 0,
    /// <summary>
    /// agent audio in the left channel, all other audio in the right channel
    /// </summary>
    [pbr::OriginalName("DUAL_CHANNEL_AGENT")] DualChannelAgent = 1,
    /// <summary>
    /// each new audio track alternates between left and right channels
    /// </summary>
    [pbr::OriginalName("DUAL_CHANNEL_ALTERNATE")] DualChannelAlternate = 2,
  }

  public enum EncodingOptionsPreset {
    /// <summary>
    ///  1280x720, 30fps, 3000kpbs, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("H264_720P_30")] H264720P30 = 0,
    /// <summary>
    ///  1280x720, 60fps, 4500kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("H264_720P_60")] H264720P60 = 1,
    /// <summary>
    /// 1920x1080, 30fps, 4500kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("H264_1080P_30")] H2641080P30 = 2,
    /// <summary>
    /// 1920x1080, 60fps, 6000kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("H264_1080P_60")] H2641080P60 = 3,
    /// <summary>
    ///  720x1280, 30fps, 3000kpbs, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("PORTRAIT_H264_720P_30")] PortraitH264720P30 = 4,
    /// <summary>
    ///  720x1280, 60fps, 4500kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("PORTRAIT_H264_720P_60")] PortraitH264720P60 = 5,
    /// <summary>
    /// 1080x1920, 30fps, 4500kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("PORTRAIT_H264_1080P_30")] PortraitH2641080P30 = 6,
    /// <summary>
    /// 1080x1920, 60fps, 6000kbps, H.264_MAIN / OPUS
    /// </summary>
    [pbr::OriginalName("PORTRAIT_H264_1080P_60")] PortraitH2641080P60 = 7,
  }

  public enum EgressStatus {
    [pbr::OriginalName("EGRESS_STARTING")] EgressStarting = 0,
    [pbr::OriginalName("EGRESS_ACTIVE")] EgressActive = 1,
    [pbr::OriginalName("EGRESS_ENDING")] EgressEnding = 2,
    [pbr::OriginalName("EGRESS_COMPLETE")] EgressComplete = 3,
    [pbr::OriginalName("EGRESS_FAILED")] EgressFailed = 4,
    [pbr::OriginalName("EGRESS_ABORTED")] EgressAborted = 5,
    [pbr::OriginalName("EGRESS_LIMIT_REACHED")] EgressLimitReached = 6,
  }

  public enum EgressSourceType {
    [pbr::OriginalName("EGRESS_SOURCE_TYPE_WEB")] Web = 0,
    [pbr::OriginalName("EGRESS_SOURCE_TYPE_SDK")] Sdk = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// composite using a web browser
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoomCompositeEgressRequest : pb::IMessage<RoomCompositeEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomCompositeEgressRequest> _parser = new pb::MessageParser<RoomCompositeEgressRequest>(() => new RoomCompositeEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomCompositeEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomCompositeEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomCompositeEgressRequest(RoomCompositeEgressRequest other) : this() {
      roomName_ = other.roomName_;
      layout_ = other.layout_;
      audioOnly_ = other.audioOnly_;
      audioMixing_ = other.audioMixing_;
      videoOnly_ = other.videoOnly_;
      customBaseUrl_ = other.customBaseUrl_;
      fileOutputs_ = other.fileOutputs_.Clone();
      streamOutputs_ = other.streamOutputs_.Clone();
      segmentOutputs_ = other.segmentOutputs_.Clone();
      imageOutputs_ = other.imageOutputs_.Clone();
      webhooks_ = other.webhooks_.Clone();
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          File = other.File.Clone();
          break;
        case OutputOneofCase.Stream:
          Stream = other.Stream.Clone();
          break;
        case OutputOneofCase.Segments:
          Segments = other.Segments.Clone();
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          Advanced = other.Advanced.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomCompositeEgressRequest Clone() {
      return new RoomCompositeEgressRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 2;
    private string layout_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Layout {
      get { return layout_; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audio_only" field.</summary>
    public const int AudioOnlyFieldNumber = 3;
    private bool audioOnly_;
    /// <summary>
    /// (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AudioOnly {
      get { return audioOnly_; }
      set {
        audioOnly_ = value;
      }
    }

    /// <summary>Field number for the "audio_mixing" field.</summary>
    public const int AudioMixingFieldNumber = 15;
    private global::Livekit.Server.Sdk.Dotnet.AudioMixing audioMixing_ = global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing;
    /// <summary>
    /// only applies to audio_only egress (default DEFAULT_MIXING)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AudioMixing AudioMixing {
      get { return audioMixing_; }
      set {
        audioMixing_ = value;
      }
    }

    /// <summary>Field number for the "video_only" field.</summary>
    public const int VideoOnlyFieldNumber = 4;
    private bool videoOnly_;
    /// <summary>
    /// (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VideoOnly {
      get { return videoOnly_; }
      set {
        videoOnly_ = value;
      }
    }

    /// <summary>Field number for the "custom_base_url" field.</summary>
    public const int CustomBaseUrlFieldNumber = 5;
    private string customBaseUrl_ = "";
    /// <summary>
    /// template base url (default https://recorder.livekit.io)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomBaseUrl {
      get { return customBaseUrl_; }
      set {
        customBaseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 6;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput File {
      get { return outputCase_ == OutputOneofCase.File ? (global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.File;
      }
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 7;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamOutput Stream {
      get { return outputCase_ == OutputOneofCase.Stream ? (global::Livekit.Server.Sdk.Dotnet.StreamOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Stream;
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 10;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput Segments {
      get { return outputCase_ == OutputOneofCase.Segments ? (global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Segments;
      }
    }

    /// <summary>Field number for the "preset" field.</summary>
    public const int PresetFieldNumber = 8;
    /// <summary>
    /// (default H264_720P_30)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset Preset {
      get { return HasPreset ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset) options_ : global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset.H264720P30; }
      set {
        options_ = value;
        optionsCase_ = OptionsOneofCase.Preset;
      }
    }
    /// <summary>Gets whether the "preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreset {
      get { return optionsCase_ == OptionsOneofCase.Preset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "preset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreset() {
      if (HasPreset) {
        ClearOptions();
      }
    }

    /// <summary>Field number for the "advanced" field.</summary>
    public const int AdvancedFieldNumber = 9;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptions Advanced {
      get { return optionsCase_ == OptionsOneofCase.Advanced ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptions) options_ : null; }
      set {
        options_ = value;
        optionsCase_ = value == null ? OptionsOneofCase.None : OptionsOneofCase.Advanced;
      }
    }

    /// <summary>Field number for the "file_outputs" field.</summary>
    public const int FileOutputsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> _repeated_fileOutputs_codec
        = pb::FieldCodec.ForMessage(90, global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> fileOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> FileOutputs {
      get { return fileOutputs_; }
    }

    /// <summary>Field number for the "stream_outputs" field.</summary>
    public const int StreamOutputsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamOutput> _repeated_streamOutputs_codec
        = pb::FieldCodec.ForMessage(98, global::Livekit.Server.Sdk.Dotnet.StreamOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> streamOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> StreamOutputs {
      get { return streamOutputs_; }
    }

    /// <summary>Field number for the "segment_outputs" field.</summary>
    public const int SegmentOutputsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> _repeated_segmentOutputs_codec
        = pb::FieldCodec.ForMessage(106, global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> segmentOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> SegmentOutputs {
      get { return segmentOutputs_; }
    }

    /// <summary>Field number for the "image_outputs" field.</summary>
    public const int ImageOutputsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.ImageOutput> _repeated_imageOutputs_codec
        = pb::FieldCodec.ForMessage(114, global::Livekit.Server.Sdk.Dotnet.ImageOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> imageOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> ImageOutputs {
      get { return imageOutputs_; }
    }

    /// <summary>Field number for the "webhooks" field.</summary>
    public const int WebhooksFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> _repeated_webhooks_codec
        = pb::FieldCodec.ForMessage(130, global::Livekit.Server.Sdk.Dotnet.WebhookConfig.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> webhooks_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig>();
    /// <summary>
    /// extra webhooks to call for this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> Webhooks {
      get { return webhooks_; }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      File = 6,
      Stream = 7,
      Segments = 10,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    private object options_;
    /// <summary>Enum of possible cases for the "options" oneof.</summary>
    public enum OptionsOneofCase {
      None = 0,
      Preset = 8,
      Advanced = 9,
    }
    private OptionsOneofCase optionsCase_ = OptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionsOneofCase OptionsCase {
      get { return optionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptions() {
      optionsCase_ = OptionsOneofCase.None;
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomCompositeEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomCompositeEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Layout != other.Layout) return false;
      if (AudioOnly != other.AudioOnly) return false;
      if (AudioMixing != other.AudioMixing) return false;
      if (VideoOnly != other.VideoOnly) return false;
      if (CustomBaseUrl != other.CustomBaseUrl) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      if (!object.Equals(Segments, other.Segments)) return false;
      if (Preset != other.Preset) return false;
      if (!object.Equals(Advanced, other.Advanced)) return false;
      if(!fileOutputs_.Equals(other.fileOutputs_)) return false;
      if(!streamOutputs_.Equals(other.streamOutputs_)) return false;
      if(!segmentOutputs_.Equals(other.segmentOutputs_)) return false;
      if(!imageOutputs_.Equals(other.imageOutputs_)) return false;
      if(!webhooks_.Equals(other.webhooks_)) return false;
      if (OutputCase != other.OutputCase) return false;
      if (OptionsCase != other.OptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (Layout.Length != 0) hash ^= Layout.GetHashCode();
      if (AudioOnly != false) hash ^= AudioOnly.GetHashCode();
      if (AudioMixing != global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing) hash ^= AudioMixing.GetHashCode();
      if (VideoOnly != false) hash ^= VideoOnly.GetHashCode();
      if (CustomBaseUrl.Length != 0) hash ^= CustomBaseUrl.GetHashCode();
      if (outputCase_ == OutputOneofCase.File) hash ^= File.GetHashCode();
      if (outputCase_ == OutputOneofCase.Stream) hash ^= Stream.GetHashCode();
      if (outputCase_ == OutputOneofCase.Segments) hash ^= Segments.GetHashCode();
      if (HasPreset) hash ^= Preset.GetHashCode();
      if (optionsCase_ == OptionsOneofCase.Advanced) hash ^= Advanced.GetHashCode();
      hash ^= fileOutputs_.GetHashCode();
      hash ^= streamOutputs_.GetHashCode();
      hash ^= segmentOutputs_.GetHashCode();
      hash ^= imageOutputs_.GetHashCode();
      hash ^= webhooks_.GetHashCode();
      hash ^= (int) outputCase_;
      hash ^= (int) optionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (Layout.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Layout);
      }
      if (AudioOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(AudioOnly);
      }
      if (VideoOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(VideoOnly);
      }
      if (CustomBaseUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CustomBaseUrl);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(58);
        output.WriteMessage(Stream);
      }
      if (HasPreset) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(74);
        output.WriteMessage(Advanced);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(82);
        output.WriteMessage(Segments);
      }
      fileOutputs_.WriteTo(output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(output, _repeated_imageOutputs_codec);
      if (AudioMixing != global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing) {
        output.WriteRawTag(120);
        output.WriteEnum((int) AudioMixing);
      }
      webhooks_.WriteTo(output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (Layout.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Layout);
      }
      if (AudioOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(AudioOnly);
      }
      if (VideoOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(VideoOnly);
      }
      if (CustomBaseUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CustomBaseUrl);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(58);
        output.WriteMessage(Stream);
      }
      if (HasPreset) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(74);
        output.WriteMessage(Advanced);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(82);
        output.WriteMessage(Segments);
      }
      fileOutputs_.WriteTo(ref output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(ref output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(ref output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(ref output, _repeated_imageOutputs_codec);
      if (AudioMixing != global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing) {
        output.WriteRawTag(120);
        output.WriteEnum((int) AudioMixing);
      }
      webhooks_.WriteTo(ref output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (Layout.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Layout);
      }
      if (AudioOnly != false) {
        size += 1 + 1;
      }
      if (AudioMixing != global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioMixing);
      }
      if (VideoOnly != false) {
        size += 1 + 1;
      }
      if (CustomBaseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomBaseUrl);
      }
      if (outputCase_ == OutputOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segments);
      }
      if (HasPreset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Advanced);
      }
      size += fileOutputs_.CalculateSize(_repeated_fileOutputs_codec);
      size += streamOutputs_.CalculateSize(_repeated_streamOutputs_codec);
      size += segmentOutputs_.CalculateSize(_repeated_segmentOutputs_codec);
      size += imageOutputs_.CalculateSize(_repeated_imageOutputs_codec);
      size += webhooks_.CalculateSize(_repeated_webhooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomCompositeEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.Layout.Length != 0) {
        Layout = other.Layout;
      }
      if (other.AudioOnly != false) {
        AudioOnly = other.AudioOnly;
      }
      if (other.AudioMixing != global::Livekit.Server.Sdk.Dotnet.AudioMixing.DefaultMixing) {
        AudioMixing = other.AudioMixing;
      }
      if (other.VideoOnly != false) {
        VideoOnly = other.VideoOnly;
      }
      if (other.CustomBaseUrl.Length != 0) {
        CustomBaseUrl = other.CustomBaseUrl;
      }
      fileOutputs_.Add(other.fileOutputs_);
      streamOutputs_.Add(other.streamOutputs_);
      segmentOutputs_.Add(other.segmentOutputs_);
      imageOutputs_.Add(other.imageOutputs_);
      webhooks_.Add(other.webhooks_);
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          if (File == null) {
            File = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
          }
          File.MergeFrom(other.File);
          break;
        case OutputOneofCase.Stream:
          if (Stream == null) {
            Stream = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
          }
          Stream.MergeFrom(other.Stream);
          break;
        case OutputOneofCase.Segments:
          if (Segments == null) {
            Segments = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
          }
          Segments.MergeFrom(other.Segments);
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          if (Advanced == null) {
            Advanced = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
          }
          Advanced.MergeFrom(other.Advanced);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            Layout = input.ReadString();
            break;
          }
          case 24: {
            AudioOnly = input.ReadBool();
            break;
          }
          case 32: {
            VideoOnly = input.ReadBool();
            break;
          }
          case 42: {
            CustomBaseUrl = input.ReadString();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 64: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 90: {
            fileOutputs_.AddEntriesFrom(input, _repeated_fileOutputs_codec);
            break;
          }
          case 98: {
            streamOutputs_.AddEntriesFrom(input, _repeated_streamOutputs_codec);
            break;
          }
          case 106: {
            segmentOutputs_.AddEntriesFrom(input, _repeated_segmentOutputs_codec);
            break;
          }
          case 114: {
            imageOutputs_.AddEntriesFrom(input, _repeated_imageOutputs_codec);
            break;
          }
          case 120: {
            AudioMixing = (global::Livekit.Server.Sdk.Dotnet.AudioMixing) input.ReadEnum();
            break;
          }
          case 130: {
            webhooks_.AddEntriesFrom(input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            Layout = input.ReadString();
            break;
          }
          case 24: {
            AudioOnly = input.ReadBool();
            break;
          }
          case 32: {
            VideoOnly = input.ReadBool();
            break;
          }
          case 42: {
            CustomBaseUrl = input.ReadString();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 64: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 90: {
            fileOutputs_.AddEntriesFrom(ref input, _repeated_fileOutputs_codec);
            break;
          }
          case 98: {
            streamOutputs_.AddEntriesFrom(ref input, _repeated_streamOutputs_codec);
            break;
          }
          case 106: {
            segmentOutputs_.AddEntriesFrom(ref input, _repeated_segmentOutputs_codec);
            break;
          }
          case 114: {
            imageOutputs_.AddEntriesFrom(ref input, _repeated_imageOutputs_codec);
            break;
          }
          case 120: {
            AudioMixing = (global::Livekit.Server.Sdk.Dotnet.AudioMixing) input.ReadEnum();
            break;
          }
          case 130: {
            webhooks_.AddEntriesFrom(ref input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// record any website
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WebEgressRequest : pb::IMessage<WebEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebEgressRequest> _parser = new pb::MessageParser<WebEgressRequest>(() => new WebEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WebEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebEgressRequest(WebEgressRequest other) : this() {
      url_ = other.url_;
      audioOnly_ = other.audioOnly_;
      videoOnly_ = other.videoOnly_;
      awaitStartSignal_ = other.awaitStartSignal_;
      fileOutputs_ = other.fileOutputs_.Clone();
      streamOutputs_ = other.streamOutputs_.Clone();
      segmentOutputs_ = other.segmentOutputs_.Clone();
      imageOutputs_ = other.imageOutputs_.Clone();
      webhooks_ = other.webhooks_.Clone();
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          File = other.File.Clone();
          break;
        case OutputOneofCase.Stream:
          Stream = other.Stream.Clone();
          break;
        case OutputOneofCase.Segments:
          Segments = other.Segments.Clone();
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          Advanced = other.Advanced.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebEgressRequest Clone() {
      return new WebEgressRequest(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audio_only" field.</summary>
    public const int AudioOnlyFieldNumber = 2;
    private bool audioOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AudioOnly {
      get { return audioOnly_; }
      set {
        audioOnly_ = value;
      }
    }

    /// <summary>Field number for the "video_only" field.</summary>
    public const int VideoOnlyFieldNumber = 3;
    private bool videoOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VideoOnly {
      get { return videoOnly_; }
      set {
        videoOnly_ = value;
      }
    }

    /// <summary>Field number for the "await_start_signal" field.</summary>
    public const int AwaitStartSignalFieldNumber = 12;
    private bool awaitStartSignal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AwaitStartSignal {
      get { return awaitStartSignal_; }
      set {
        awaitStartSignal_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 4;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput File {
      get { return outputCase_ == OutputOneofCase.File ? (global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.File;
      }
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 5;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamOutput Stream {
      get { return outputCase_ == OutputOneofCase.Stream ? (global::Livekit.Server.Sdk.Dotnet.StreamOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Stream;
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 6;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput Segments {
      get { return outputCase_ == OutputOneofCase.Segments ? (global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Segments;
      }
    }

    /// <summary>Field number for the "preset" field.</summary>
    public const int PresetFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset Preset {
      get { return HasPreset ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset) options_ : global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset.H264720P30; }
      set {
        options_ = value;
        optionsCase_ = OptionsOneofCase.Preset;
      }
    }
    /// <summary>Gets whether the "preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreset {
      get { return optionsCase_ == OptionsOneofCase.Preset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "preset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreset() {
      if (HasPreset) {
        ClearOptions();
      }
    }

    /// <summary>Field number for the "advanced" field.</summary>
    public const int AdvancedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptions Advanced {
      get { return optionsCase_ == OptionsOneofCase.Advanced ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptions) options_ : null; }
      set {
        options_ = value;
        optionsCase_ = value == null ? OptionsOneofCase.None : OptionsOneofCase.Advanced;
      }
    }

    /// <summary>Field number for the "file_outputs" field.</summary>
    public const int FileOutputsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> _repeated_fileOutputs_codec
        = pb::FieldCodec.ForMessage(74, global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> fileOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> FileOutputs {
      get { return fileOutputs_; }
    }

    /// <summary>Field number for the "stream_outputs" field.</summary>
    public const int StreamOutputsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamOutput> _repeated_streamOutputs_codec
        = pb::FieldCodec.ForMessage(82, global::Livekit.Server.Sdk.Dotnet.StreamOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> streamOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> StreamOutputs {
      get { return streamOutputs_; }
    }

    /// <summary>Field number for the "segment_outputs" field.</summary>
    public const int SegmentOutputsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> _repeated_segmentOutputs_codec
        = pb::FieldCodec.ForMessage(90, global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> segmentOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> SegmentOutputs {
      get { return segmentOutputs_; }
    }

    /// <summary>Field number for the "image_outputs" field.</summary>
    public const int ImageOutputsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.ImageOutput> _repeated_imageOutputs_codec
        = pb::FieldCodec.ForMessage(106, global::Livekit.Server.Sdk.Dotnet.ImageOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> imageOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> ImageOutputs {
      get { return imageOutputs_; }
    }

    /// <summary>Field number for the "webhooks" field.</summary>
    public const int WebhooksFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> _repeated_webhooks_codec
        = pb::FieldCodec.ForMessage(114, global::Livekit.Server.Sdk.Dotnet.WebhookConfig.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> webhooks_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig>();
    /// <summary>
    /// extra webhooks to call for this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> Webhooks {
      get { return webhooks_; }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      File = 4,
      Stream = 5,
      Segments = 6,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    private object options_;
    /// <summary>Enum of possible cases for the "options" oneof.</summary>
    public enum OptionsOneofCase {
      None = 0,
      Preset = 7,
      Advanced = 8,
    }
    private OptionsOneofCase optionsCase_ = OptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionsOneofCase OptionsCase {
      get { return optionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptions() {
      optionsCase_ = OptionsOneofCase.None;
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WebEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WebEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (AudioOnly != other.AudioOnly) return false;
      if (VideoOnly != other.VideoOnly) return false;
      if (AwaitStartSignal != other.AwaitStartSignal) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      if (!object.Equals(Segments, other.Segments)) return false;
      if (Preset != other.Preset) return false;
      if (!object.Equals(Advanced, other.Advanced)) return false;
      if(!fileOutputs_.Equals(other.fileOutputs_)) return false;
      if(!streamOutputs_.Equals(other.streamOutputs_)) return false;
      if(!segmentOutputs_.Equals(other.segmentOutputs_)) return false;
      if(!imageOutputs_.Equals(other.imageOutputs_)) return false;
      if(!webhooks_.Equals(other.webhooks_)) return false;
      if (OutputCase != other.OutputCase) return false;
      if (OptionsCase != other.OptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (AudioOnly != false) hash ^= AudioOnly.GetHashCode();
      if (VideoOnly != false) hash ^= VideoOnly.GetHashCode();
      if (AwaitStartSignal != false) hash ^= AwaitStartSignal.GetHashCode();
      if (outputCase_ == OutputOneofCase.File) hash ^= File.GetHashCode();
      if (outputCase_ == OutputOneofCase.Stream) hash ^= Stream.GetHashCode();
      if (outputCase_ == OutputOneofCase.Segments) hash ^= Segments.GetHashCode();
      if (HasPreset) hash ^= Preset.GetHashCode();
      if (optionsCase_ == OptionsOneofCase.Advanced) hash ^= Advanced.GetHashCode();
      hash ^= fileOutputs_.GetHashCode();
      hash ^= streamOutputs_.GetHashCode();
      hash ^= segmentOutputs_.GetHashCode();
      hash ^= imageOutputs_.GetHashCode();
      hash ^= webhooks_.GetHashCode();
      hash ^= (int) outputCase_;
      hash ^= (int) optionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (AudioOnly != false) {
        output.WriteRawTag(16);
        output.WriteBool(AudioOnly);
      }
      if (VideoOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(VideoOnly);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(34);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(42);
        output.WriteMessage(Stream);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(50);
        output.WriteMessage(Segments);
      }
      if (HasPreset) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(66);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(output, _repeated_segmentOutputs_codec);
      if (AwaitStartSignal != false) {
        output.WriteRawTag(96);
        output.WriteBool(AwaitStartSignal);
      }
      imageOutputs_.WriteTo(output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (AudioOnly != false) {
        output.WriteRawTag(16);
        output.WriteBool(AudioOnly);
      }
      if (VideoOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(VideoOnly);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(34);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(42);
        output.WriteMessage(Stream);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(50);
        output.WriteMessage(Segments);
      }
      if (HasPreset) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(66);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(ref output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(ref output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(ref output, _repeated_segmentOutputs_codec);
      if (AwaitStartSignal != false) {
        output.WriteRawTag(96);
        output.WriteBool(AwaitStartSignal);
      }
      imageOutputs_.WriteTo(ref output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(ref output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (AudioOnly != false) {
        size += 1 + 1;
      }
      if (VideoOnly != false) {
        size += 1 + 1;
      }
      if (AwaitStartSignal != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segments);
      }
      if (HasPreset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Advanced);
      }
      size += fileOutputs_.CalculateSize(_repeated_fileOutputs_codec);
      size += streamOutputs_.CalculateSize(_repeated_streamOutputs_codec);
      size += segmentOutputs_.CalculateSize(_repeated_segmentOutputs_codec);
      size += imageOutputs_.CalculateSize(_repeated_imageOutputs_codec);
      size += webhooks_.CalculateSize(_repeated_webhooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WebEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.AudioOnly != false) {
        AudioOnly = other.AudioOnly;
      }
      if (other.VideoOnly != false) {
        VideoOnly = other.VideoOnly;
      }
      if (other.AwaitStartSignal != false) {
        AwaitStartSignal = other.AwaitStartSignal;
      }
      fileOutputs_.Add(other.fileOutputs_);
      streamOutputs_.Add(other.streamOutputs_);
      segmentOutputs_.Add(other.segmentOutputs_);
      imageOutputs_.Add(other.imageOutputs_);
      webhooks_.Add(other.webhooks_);
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          if (File == null) {
            File = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
          }
          File.MergeFrom(other.File);
          break;
        case OutputOneofCase.Stream:
          if (Stream == null) {
            Stream = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
          }
          Stream.MergeFrom(other.Stream);
          break;
        case OutputOneofCase.Segments:
          if (Segments == null) {
            Segments = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
          }
          Segments.MergeFrom(other.Segments);
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          if (Advanced == null) {
            Advanced = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
          }
          Advanced.MergeFrom(other.Advanced);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            AudioOnly = input.ReadBool();
            break;
          }
          case 24: {
            VideoOnly = input.ReadBool();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 56: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 74: {
            fileOutputs_.AddEntriesFrom(input, _repeated_fileOutputs_codec);
            break;
          }
          case 82: {
            streamOutputs_.AddEntriesFrom(input, _repeated_streamOutputs_codec);
            break;
          }
          case 90: {
            segmentOutputs_.AddEntriesFrom(input, _repeated_segmentOutputs_codec);
            break;
          }
          case 96: {
            AwaitStartSignal = input.ReadBool();
            break;
          }
          case 106: {
            imageOutputs_.AddEntriesFrom(input, _repeated_imageOutputs_codec);
            break;
          }
          case 114: {
            webhooks_.AddEntriesFrom(input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            AudioOnly = input.ReadBool();
            break;
          }
          case 24: {
            VideoOnly = input.ReadBool();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 56: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 74: {
            fileOutputs_.AddEntriesFrom(ref input, _repeated_fileOutputs_codec);
            break;
          }
          case 82: {
            streamOutputs_.AddEntriesFrom(ref input, _repeated_streamOutputs_codec);
            break;
          }
          case 90: {
            segmentOutputs_.AddEntriesFrom(ref input, _repeated_segmentOutputs_codec);
            break;
          }
          case 96: {
            AwaitStartSignal = input.ReadBool();
            break;
          }
          case 106: {
            imageOutputs_.AddEntriesFrom(ref input, _repeated_imageOutputs_codec);
            break;
          }
          case 114: {
            webhooks_.AddEntriesFrom(ref input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// record audio and video from a single participant
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ParticipantEgressRequest : pb::IMessage<ParticipantEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantEgressRequest> _parser = new pb::MessageParser<ParticipantEgressRequest>(() => new ParticipantEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ParticipantEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParticipantEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParticipantEgressRequest(ParticipantEgressRequest other) : this() {
      roomName_ = other.roomName_;
      identity_ = other.identity_;
      screenShare_ = other.screenShare_;
      fileOutputs_ = other.fileOutputs_.Clone();
      streamOutputs_ = other.streamOutputs_.Clone();
      segmentOutputs_ = other.segmentOutputs_.Clone();
      imageOutputs_ = other.imageOutputs_.Clone();
      webhooks_ = other.webhooks_.Clone();
      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          Advanced = other.Advanced.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ParticipantEgressRequest Clone() {
      return new ParticipantEgressRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "screen_share" field.</summary>
    public const int ScreenShareFieldNumber = 3;
    private bool screenShare_;
    /// <summary>
    /// (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScreenShare {
      get { return screenShare_; }
      set {
        screenShare_ = value;
      }
    }

    /// <summary>Field number for the "preset" field.</summary>
    public const int PresetFieldNumber = 4;
    /// <summary>
    /// (default H264_720P_30)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset Preset {
      get { return HasPreset ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset) options_ : global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset.H264720P30; }
      set {
        options_ = value;
        optionsCase_ = OptionsOneofCase.Preset;
      }
    }
    /// <summary>Gets whether the "preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreset {
      get { return optionsCase_ == OptionsOneofCase.Preset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "preset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreset() {
      if (HasPreset) {
        ClearOptions();
      }
    }

    /// <summary>Field number for the "advanced" field.</summary>
    public const int AdvancedFieldNumber = 5;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptions Advanced {
      get { return optionsCase_ == OptionsOneofCase.Advanced ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptions) options_ : null; }
      set {
        options_ = value;
        optionsCase_ = value == null ? OptionsOneofCase.None : OptionsOneofCase.Advanced;
      }
    }

    /// <summary>Field number for the "file_outputs" field.</summary>
    public const int FileOutputsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> _repeated_fileOutputs_codec
        = pb::FieldCodec.ForMessage(50, global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> fileOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> FileOutputs {
      get { return fileOutputs_; }
    }

    /// <summary>Field number for the "stream_outputs" field.</summary>
    public const int StreamOutputsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamOutput> _repeated_streamOutputs_codec
        = pb::FieldCodec.ForMessage(58, global::Livekit.Server.Sdk.Dotnet.StreamOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> streamOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> StreamOutputs {
      get { return streamOutputs_; }
    }

    /// <summary>Field number for the "segment_outputs" field.</summary>
    public const int SegmentOutputsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> _repeated_segmentOutputs_codec
        = pb::FieldCodec.ForMessage(66, global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> segmentOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> SegmentOutputs {
      get { return segmentOutputs_; }
    }

    /// <summary>Field number for the "image_outputs" field.</summary>
    public const int ImageOutputsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.ImageOutput> _repeated_imageOutputs_codec
        = pb::FieldCodec.ForMessage(74, global::Livekit.Server.Sdk.Dotnet.ImageOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> imageOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> ImageOutputs {
      get { return imageOutputs_; }
    }

    /// <summary>Field number for the "webhooks" field.</summary>
    public const int WebhooksFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> _repeated_webhooks_codec
        = pb::FieldCodec.ForMessage(82, global::Livekit.Server.Sdk.Dotnet.WebhookConfig.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> webhooks_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig>();
    /// <summary>
    /// extra webhooks to call for this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> Webhooks {
      get { return webhooks_; }
    }

    private object options_;
    /// <summary>Enum of possible cases for the "options" oneof.</summary>
    public enum OptionsOneofCase {
      None = 0,
      Preset = 4,
      Advanced = 5,
    }
    private OptionsOneofCase optionsCase_ = OptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionsOneofCase OptionsCase {
      get { return optionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptions() {
      optionsCase_ = OptionsOneofCase.None;
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ParticipantEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ParticipantEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Identity != other.Identity) return false;
      if (ScreenShare != other.ScreenShare) return false;
      if (Preset != other.Preset) return false;
      if (!object.Equals(Advanced, other.Advanced)) return false;
      if(!fileOutputs_.Equals(other.fileOutputs_)) return false;
      if(!streamOutputs_.Equals(other.streamOutputs_)) return false;
      if(!segmentOutputs_.Equals(other.segmentOutputs_)) return false;
      if(!imageOutputs_.Equals(other.imageOutputs_)) return false;
      if(!webhooks_.Equals(other.webhooks_)) return false;
      if (OptionsCase != other.OptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (ScreenShare != false) hash ^= ScreenShare.GetHashCode();
      if (HasPreset) hash ^= Preset.GetHashCode();
      if (optionsCase_ == OptionsOneofCase.Advanced) hash ^= Advanced.GetHashCode();
      hash ^= fileOutputs_.GetHashCode();
      hash ^= streamOutputs_.GetHashCode();
      hash ^= segmentOutputs_.GetHashCode();
      hash ^= imageOutputs_.GetHashCode();
      hash ^= webhooks_.GetHashCode();
      hash ^= (int) optionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (ScreenShare != false) {
        output.WriteRawTag(24);
        output.WriteBool(ScreenShare);
      }
      if (HasPreset) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(42);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (ScreenShare != false) {
        output.WriteRawTag(24);
        output.WriteBool(ScreenShare);
      }
      if (HasPreset) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(42);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(ref output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(ref output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(ref output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(ref output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(ref output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (ScreenShare != false) {
        size += 1 + 1;
      }
      if (HasPreset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Advanced);
      }
      size += fileOutputs_.CalculateSize(_repeated_fileOutputs_codec);
      size += streamOutputs_.CalculateSize(_repeated_streamOutputs_codec);
      size += segmentOutputs_.CalculateSize(_repeated_segmentOutputs_codec);
      size += imageOutputs_.CalculateSize(_repeated_imageOutputs_codec);
      size += webhooks_.CalculateSize(_repeated_webhooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ParticipantEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.ScreenShare != false) {
        ScreenShare = other.ScreenShare;
      }
      fileOutputs_.Add(other.fileOutputs_);
      streamOutputs_.Add(other.streamOutputs_);
      segmentOutputs_.Add(other.segmentOutputs_);
      imageOutputs_.Add(other.imageOutputs_);
      webhooks_.Add(other.webhooks_);
      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          if (Advanced == null) {
            Advanced = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
          }
          Advanced.MergeFrom(other.Advanced);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 24: {
            ScreenShare = input.ReadBool();
            break;
          }
          case 32: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 50: {
            fileOutputs_.AddEntriesFrom(input, _repeated_fileOutputs_codec);
            break;
          }
          case 58: {
            streamOutputs_.AddEntriesFrom(input, _repeated_streamOutputs_codec);
            break;
          }
          case 66: {
            segmentOutputs_.AddEntriesFrom(input, _repeated_segmentOutputs_codec);
            break;
          }
          case 74: {
            imageOutputs_.AddEntriesFrom(input, _repeated_imageOutputs_codec);
            break;
          }
          case 82: {
            webhooks_.AddEntriesFrom(input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 24: {
            ScreenShare = input.ReadBool();
            break;
          }
          case 32: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 50: {
            fileOutputs_.AddEntriesFrom(ref input, _repeated_fileOutputs_codec);
            break;
          }
          case 58: {
            streamOutputs_.AddEntriesFrom(ref input, _repeated_streamOutputs_codec);
            break;
          }
          case 66: {
            segmentOutputs_.AddEntriesFrom(ref input, _repeated_segmentOutputs_codec);
            break;
          }
          case 74: {
            imageOutputs_.AddEntriesFrom(ref input, _repeated_imageOutputs_codec);
            break;
          }
          case 82: {
            webhooks_.AddEntriesFrom(ref input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// containerize up to one audio and one video track
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TrackCompositeEgressRequest : pb::IMessage<TrackCompositeEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackCompositeEgressRequest> _parser = new pb::MessageParser<TrackCompositeEgressRequest>(() => new TrackCompositeEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackCompositeEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackCompositeEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackCompositeEgressRequest(TrackCompositeEgressRequest other) : this() {
      roomName_ = other.roomName_;
      audioTrackId_ = other.audioTrackId_;
      videoTrackId_ = other.videoTrackId_;
      fileOutputs_ = other.fileOutputs_.Clone();
      streamOutputs_ = other.streamOutputs_.Clone();
      segmentOutputs_ = other.segmentOutputs_.Clone();
      imageOutputs_ = other.imageOutputs_.Clone();
      webhooks_ = other.webhooks_.Clone();
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          File = other.File.Clone();
          break;
        case OutputOneofCase.Stream:
          Stream = other.Stream.Clone();
          break;
        case OutputOneofCase.Segments:
          Segments = other.Segments.Clone();
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          Advanced = other.Advanced.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackCompositeEgressRequest Clone() {
      return new TrackCompositeEgressRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audio_track_id" field.</summary>
    public const int AudioTrackIdFieldNumber = 2;
    private string audioTrackId_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AudioTrackId {
      get { return audioTrackId_; }
      set {
        audioTrackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "video_track_id" field.</summary>
    public const int VideoTrackIdFieldNumber = 3;
    private string videoTrackId_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VideoTrackId {
      get { return videoTrackId_; }
      set {
        videoTrackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 4;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput File {
      get { return outputCase_ == OutputOneofCase.File ? (global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.File;
      }
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 5;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamOutput Stream {
      get { return outputCase_ == OutputOneofCase.Stream ? (global::Livekit.Server.Sdk.Dotnet.StreamOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Stream;
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 8;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput Segments {
      get { return outputCase_ == OutputOneofCase.Segments ? (global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Segments;
      }
    }

    /// <summary>Field number for the "preset" field.</summary>
    public const int PresetFieldNumber = 6;
    /// <summary>
    /// (default H264_720P_30)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset Preset {
      get { return HasPreset ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset) options_ : global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset.H264720P30; }
      set {
        options_ = value;
        optionsCase_ = OptionsOneofCase.Preset;
      }
    }
    /// <summary>Gets whether the "preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreset {
      get { return optionsCase_ == OptionsOneofCase.Preset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "preset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreset() {
      if (HasPreset) {
        ClearOptions();
      }
    }

    /// <summary>Field number for the "advanced" field.</summary>
    public const int AdvancedFieldNumber = 7;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptions Advanced {
      get { return optionsCase_ == OptionsOneofCase.Advanced ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptions) options_ : null; }
      set {
        options_ = value;
        optionsCase_ = value == null ? OptionsOneofCase.None : OptionsOneofCase.Advanced;
      }
    }

    /// <summary>Field number for the "file_outputs" field.</summary>
    public const int FileOutputsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> _repeated_fileOutputs_codec
        = pb::FieldCodec.ForMessage(90, global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> fileOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> FileOutputs {
      get { return fileOutputs_; }
    }

    /// <summary>Field number for the "stream_outputs" field.</summary>
    public const int StreamOutputsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamOutput> _repeated_streamOutputs_codec
        = pb::FieldCodec.ForMessage(98, global::Livekit.Server.Sdk.Dotnet.StreamOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> streamOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamOutput> StreamOutputs {
      get { return streamOutputs_; }
    }

    /// <summary>Field number for the "segment_outputs" field.</summary>
    public const int SegmentOutputsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> _repeated_segmentOutputs_codec
        = pb::FieldCodec.ForMessage(106, global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> segmentOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> SegmentOutputs {
      get { return segmentOutputs_; }
    }

    /// <summary>Field number for the "image_outputs" field.</summary>
    public const int ImageOutputsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.ImageOutput> _repeated_imageOutputs_codec
        = pb::FieldCodec.ForMessage(114, global::Livekit.Server.Sdk.Dotnet.ImageOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> imageOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImageOutput> ImageOutputs {
      get { return imageOutputs_; }
    }

    /// <summary>Field number for the "webhooks" field.</summary>
    public const int WebhooksFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> _repeated_webhooks_codec
        = pb::FieldCodec.ForMessage(122, global::Livekit.Server.Sdk.Dotnet.WebhookConfig.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> webhooks_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig>();
    /// <summary>
    /// extra webhooks to call for this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> Webhooks {
      get { return webhooks_; }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      File = 4,
      Stream = 5,
      Segments = 8,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    private object options_;
    /// <summary>Enum of possible cases for the "options" oneof.</summary>
    public enum OptionsOneofCase {
      None = 0,
      Preset = 6,
      Advanced = 7,
    }
    private OptionsOneofCase optionsCase_ = OptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionsOneofCase OptionsCase {
      get { return optionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptions() {
      optionsCase_ = OptionsOneofCase.None;
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackCompositeEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackCompositeEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (AudioTrackId != other.AudioTrackId) return false;
      if (VideoTrackId != other.VideoTrackId) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      if (!object.Equals(Segments, other.Segments)) return false;
      if (Preset != other.Preset) return false;
      if (!object.Equals(Advanced, other.Advanced)) return false;
      if(!fileOutputs_.Equals(other.fileOutputs_)) return false;
      if(!streamOutputs_.Equals(other.streamOutputs_)) return false;
      if(!segmentOutputs_.Equals(other.segmentOutputs_)) return false;
      if(!imageOutputs_.Equals(other.imageOutputs_)) return false;
      if(!webhooks_.Equals(other.webhooks_)) return false;
      if (OutputCase != other.OutputCase) return false;
      if (OptionsCase != other.OptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (AudioTrackId.Length != 0) hash ^= AudioTrackId.GetHashCode();
      if (VideoTrackId.Length != 0) hash ^= VideoTrackId.GetHashCode();
      if (outputCase_ == OutputOneofCase.File) hash ^= File.GetHashCode();
      if (outputCase_ == OutputOneofCase.Stream) hash ^= Stream.GetHashCode();
      if (outputCase_ == OutputOneofCase.Segments) hash ^= Segments.GetHashCode();
      if (HasPreset) hash ^= Preset.GetHashCode();
      if (optionsCase_ == OptionsOneofCase.Advanced) hash ^= Advanced.GetHashCode();
      hash ^= fileOutputs_.GetHashCode();
      hash ^= streamOutputs_.GetHashCode();
      hash ^= segmentOutputs_.GetHashCode();
      hash ^= imageOutputs_.GetHashCode();
      hash ^= webhooks_.GetHashCode();
      hash ^= (int) outputCase_;
      hash ^= (int) optionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (AudioTrackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AudioTrackId);
      }
      if (VideoTrackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VideoTrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(34);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(42);
        output.WriteMessage(Stream);
      }
      if (HasPreset) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(58);
        output.WriteMessage(Advanced);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(66);
        output.WriteMessage(Segments);
      }
      fileOutputs_.WriteTo(output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (AudioTrackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AudioTrackId);
      }
      if (VideoTrackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VideoTrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(34);
        output.WriteMessage(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        output.WriteRawTag(42);
        output.WriteMessage(Stream);
      }
      if (HasPreset) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(58);
        output.WriteMessage(Advanced);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        output.WriteRawTag(66);
        output.WriteMessage(Segments);
      }
      fileOutputs_.WriteTo(ref output, _repeated_fileOutputs_codec);
      streamOutputs_.WriteTo(ref output, _repeated_streamOutputs_codec);
      segmentOutputs_.WriteTo(ref output, _repeated_segmentOutputs_codec);
      imageOutputs_.WriteTo(ref output, _repeated_imageOutputs_codec);
      webhooks_.WriteTo(ref output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (AudioTrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AudioTrackId);
      }
      if (VideoTrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoTrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (outputCase_ == OutputOneofCase.Stream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (outputCase_ == OutputOneofCase.Segments) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segments);
      }
      if (HasPreset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Advanced);
      }
      size += fileOutputs_.CalculateSize(_repeated_fileOutputs_codec);
      size += streamOutputs_.CalculateSize(_repeated_streamOutputs_codec);
      size += segmentOutputs_.CalculateSize(_repeated_segmentOutputs_codec);
      size += imageOutputs_.CalculateSize(_repeated_imageOutputs_codec);
      size += webhooks_.CalculateSize(_repeated_webhooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackCompositeEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.AudioTrackId.Length != 0) {
        AudioTrackId = other.AudioTrackId;
      }
      if (other.VideoTrackId.Length != 0) {
        VideoTrackId = other.VideoTrackId;
      }
      fileOutputs_.Add(other.fileOutputs_);
      streamOutputs_.Add(other.streamOutputs_);
      segmentOutputs_.Add(other.segmentOutputs_);
      imageOutputs_.Add(other.imageOutputs_);
      webhooks_.Add(other.webhooks_);
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          if (File == null) {
            File = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
          }
          File.MergeFrom(other.File);
          break;
        case OutputOneofCase.Stream:
          if (Stream == null) {
            Stream = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
          }
          Stream.MergeFrom(other.Stream);
          break;
        case OutputOneofCase.Segments:
          if (Segments == null) {
            Segments = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
          }
          Segments.MergeFrom(other.Segments);
          break;
      }

      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          if (Advanced == null) {
            Advanced = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
          }
          Advanced.MergeFrom(other.Advanced);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            AudioTrackId = input.ReadString();
            break;
          }
          case 26: {
            VideoTrackId = input.ReadString();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 48: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 90: {
            fileOutputs_.AddEntriesFrom(input, _repeated_fileOutputs_codec);
            break;
          }
          case 98: {
            streamOutputs_.AddEntriesFrom(input, _repeated_streamOutputs_codec);
            break;
          }
          case 106: {
            segmentOutputs_.AddEntriesFrom(input, _repeated_segmentOutputs_codec);
            break;
          }
          case 114: {
            imageOutputs_.AddEntriesFrom(input, _repeated_imageOutputs_codec);
            break;
          }
          case 122: {
            webhooks_.AddEntriesFrom(input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            AudioTrackId = input.ReadString();
            break;
          }
          case 26: {
            VideoTrackId = input.ReadString();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.StreamOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamOutput();
            if (outputCase_ == OutputOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 48: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput();
            if (outputCase_ == OutputOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 90: {
            fileOutputs_.AddEntriesFrom(ref input, _repeated_fileOutputs_codec);
            break;
          }
          case 98: {
            streamOutputs_.AddEntriesFrom(ref input, _repeated_streamOutputs_codec);
            break;
          }
          case 106: {
            segmentOutputs_.AddEntriesFrom(ref input, _repeated_segmentOutputs_codec);
            break;
          }
          case 114: {
            imageOutputs_.AddEntriesFrom(ref input, _repeated_imageOutputs_codec);
            break;
          }
          case 122: {
            webhooks_.AddEntriesFrom(ref input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// record tracks individually, without transcoding
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TrackEgressRequest : pb::IMessage<TrackEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackEgressRequest> _parser = new pb::MessageParser<TrackEgressRequest>(() => new TrackEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackEgressRequest(TrackEgressRequest other) : this() {
      roomName_ = other.roomName_;
      trackId_ = other.trackId_;
      webhooks_ = other.webhooks_.Clone();
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          File = other.File.Clone();
          break;
        case OutputOneofCase.WebsocketUrl:
          WebsocketUrl = other.WebsocketUrl;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackEgressRequest Clone() {
      return new TrackEgressRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_id" field.</summary>
    public const int TrackIdFieldNumber = 2;
    private string trackId_ = "";
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackId {
      get { return trackId_; }
      set {
        trackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.DirectFileOutput File {
      get { return outputCase_ == OutputOneofCase.File ? (global::Livekit.Server.Sdk.Dotnet.DirectFileOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.File;
      }
    }

    /// <summary>Field number for the "websocket_url" field.</summary>
    public const int WebsocketUrlFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WebsocketUrl {
      get { return HasWebsocketUrl ? (string) output_ : ""; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        outputCase_ = OutputOneofCase.WebsocketUrl;
      }
    }
    /// <summary>Gets whether the "websocket_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWebsocketUrl {
      get { return outputCase_ == OutputOneofCase.WebsocketUrl; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "websocket_url" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWebsocketUrl() {
      if (HasWebsocketUrl) {
        ClearOutput();
      }
    }

    /// <summary>Field number for the "webhooks" field.</summary>
    public const int WebhooksFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> _repeated_webhooks_codec
        = pb::FieldCodec.ForMessage(42, global::Livekit.Server.Sdk.Dotnet.WebhookConfig.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> webhooks_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig>();
    /// <summary>
    /// extra webhooks to call for this request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.WebhookConfig> Webhooks {
      get { return webhooks_; }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      File = 3,
      WebsocketUrl = 4,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (TrackId != other.TrackId) return false;
      if (!object.Equals(File, other.File)) return false;
      if (WebsocketUrl != other.WebsocketUrl) return false;
      if(!webhooks_.Equals(other.webhooks_)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (TrackId.Length != 0) hash ^= TrackId.GetHashCode();
      if (outputCase_ == OutputOneofCase.File) hash ^= File.GetHashCode();
      if (HasWebsocketUrl) hash ^= WebsocketUrl.GetHashCode();
      hash ^= webhooks_.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (HasWebsocketUrl) {
        output.WriteRawTag(34);
        output.WriteString(WebsocketUrl);
      }
      webhooks_.WriteTo(output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (TrackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        output.WriteRawTag(26);
        output.WriteMessage(File);
      }
      if (HasWebsocketUrl) {
        output.WriteRawTag(34);
        output.WriteString(WebsocketUrl);
      }
      webhooks_.WriteTo(ref output, _repeated_webhooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (TrackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackId);
      }
      if (outputCase_ == OutputOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (HasWebsocketUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebsocketUrl);
      }
      size += webhooks_.CalculateSize(_repeated_webhooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.TrackId.Length != 0) {
        TrackId = other.TrackId;
      }
      webhooks_.Add(other.webhooks_);
      switch (other.OutputCase) {
        case OutputOneofCase.File:
          if (File == null) {
            File = new global::Livekit.Server.Sdk.Dotnet.DirectFileOutput();
          }
          File.MergeFrom(other.File);
          break;
        case OutputOneofCase.WebsocketUrl:
          WebsocketUrl = other.WebsocketUrl;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            TrackId = input.ReadString();
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.DirectFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.DirectFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 34: {
            WebsocketUrl = input.ReadString();
            break;
          }
          case 42: {
            webhooks_.AddEntriesFrom(input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            TrackId = input.ReadString();
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.DirectFileOutput subBuilder = new global::Livekit.Server.Sdk.Dotnet.DirectFileOutput();
            if (outputCase_ == OutputOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 34: {
            WebsocketUrl = input.ReadString();
            break;
          }
          case 42: {
            webhooks_.AddEntriesFrom(ref input, _repeated_webhooks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EncodedFileOutput : pb::IMessage<EncodedFileOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncodedFileOutput> _parser = new pb::MessageParser<EncodedFileOutput>(() => new EncodedFileOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EncodedFileOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodedFileOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodedFileOutput(EncodedFileOutput other) : this() {
      fileType_ = other.fileType_;
      filepath_ = other.filepath_;
      disableManifest_ = other.disableManifest_;
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          S3 = other.S3.Clone();
          break;
        case OutputOneofCase.Gcp:
          Gcp = other.Gcp.Clone();
          break;
        case OutputOneofCase.Azure:
          Azure = other.Azure.Clone();
          break;
        case OutputOneofCase.AliOSS:
          AliOSS = other.AliOSS.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodedFileOutput Clone() {
      return new EncodedFileOutput(this);
    }

    /// <summary>Field number for the "file_type" field.</summary>
    public const int FileTypeFieldNumber = 1;
    private global::Livekit.Server.Sdk.Dotnet.EncodedFileType fileType_ = global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodedFileType FileType {
      get { return fileType_; }
      set {
        fileType_ = value;
      }
    }

    /// <summary>Field number for the "filepath" field.</summary>
    public const int FilepathFieldNumber = 2;
    private string filepath_ = "";
    /// <summary>
    /// see egress docs for templating (default {room_name}-{time})
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filepath {
      get { return filepath_; }
      set {
        filepath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disable_manifest" field.</summary>
    public const int DisableManifestFieldNumber = 6;
    private bool disableManifest_;
    /// <summary>
    /// disable upload of manifest file (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableManifest {
      get { return disableManifest_; }
      set {
        disableManifest_ = value;
      }
    }

    /// <summary>Field number for the "s3" field.</summary>
    public const int S3FieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.S3Upload S3 {
      get { return outputCase_ == OutputOneofCase.S3 ? (global::Livekit.Server.Sdk.Dotnet.S3Upload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.S3;
      }
    }

    /// <summary>Field number for the "gcp" field.</summary>
    public const int GcpFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.GCPUpload Gcp {
      get { return outputCase_ == OutputOneofCase.Gcp ? (global::Livekit.Server.Sdk.Dotnet.GCPUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Gcp;
      }
    }

    /// <summary>Field number for the "azure" field.</summary>
    public const int AzureFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload Azure {
      get { return outputCase_ == OutputOneofCase.Azure ? (global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Azure;
      }
    }

    /// <summary>Field number for the "aliOSS" field.</summary>
    public const int AliOSSFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AliOSSUpload AliOSS {
      get { return outputCase_ == OutputOneofCase.AliOSS ? (global::Livekit.Server.Sdk.Dotnet.AliOSSUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.AliOSS;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      S3 = 3,
      Gcp = 4,
      Azure = 5,
      AliOSS = 7,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EncodedFileOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EncodedFileOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (Filepath != other.Filepath) return false;
      if (DisableManifest != other.DisableManifest) return false;
      if (!object.Equals(S3, other.S3)) return false;
      if (!object.Equals(Gcp, other.Gcp)) return false;
      if (!object.Equals(Azure, other.Azure)) return false;
      if (!object.Equals(AliOSS, other.AliOSS)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FileType != global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype) hash ^= FileType.GetHashCode();
      if (Filepath.Length != 0) hash ^= Filepath.GetHashCode();
      if (DisableManifest != false) hash ^= DisableManifest.GetHashCode();
      if (outputCase_ == OutputOneofCase.S3) hash ^= S3.GetHashCode();
      if (outputCase_ == OutputOneofCase.Gcp) hash ^= Gcp.GetHashCode();
      if (outputCase_ == OutputOneofCase.Azure) hash ^= Azure.GetHashCode();
      if (outputCase_ == OutputOneofCase.AliOSS) hash ^= AliOSS.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FileType != global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FileType);
      }
      if (Filepath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(26);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(34);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(42);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(48);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(58);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FileType != global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FileType);
      }
      if (Filepath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(26);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(34);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(42);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(48);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(58);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FileType != global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FileType);
      }
      if (Filepath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filepath);
      }
      if (DisableManifest != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.S3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliOSS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EncodedFileOutput other) {
      if (other == null) {
        return;
      }
      if (other.FileType != global::Livekit.Server.Sdk.Dotnet.EncodedFileType.DefaultFiletype) {
        FileType = other.FileType;
      }
      if (other.Filepath.Length != 0) {
        Filepath = other.Filepath;
      }
      if (other.DisableManifest != false) {
        DisableManifest = other.DisableManifest;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          if (S3 == null) {
            S3 = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
          }
          S3.MergeFrom(other.S3);
          break;
        case OutputOneofCase.Gcp:
          if (Gcp == null) {
            Gcp = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
          }
          Gcp.MergeFrom(other.Gcp);
          break;
        case OutputOneofCase.Azure:
          if (Azure == null) {
            Azure = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
          }
          Azure.MergeFrom(other.Azure);
          break;
        case OutputOneofCase.AliOSS:
          if (AliOSS == null) {
            AliOSS = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
          }
          AliOSS.MergeFrom(other.AliOSS);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FileType = (global::Livekit.Server.Sdk.Dotnet.EncodedFileType) input.ReadEnum();
            break;
          }
          case 18: {
            Filepath = input.ReadString();
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 48: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FileType = (global::Livekit.Server.Sdk.Dotnet.EncodedFileType) input.ReadEnum();
            break;
          }
          case 18: {
            Filepath = input.ReadString();
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 48: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to generate HLS segments or other kind of segmented output
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SegmentedFileOutput : pb::IMessage<SegmentedFileOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SegmentedFileOutput> _parser = new pb::MessageParser<SegmentedFileOutput>(() => new SegmentedFileOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SegmentedFileOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentedFileOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentedFileOutput(SegmentedFileOutput other) : this() {
      protocol_ = other.protocol_;
      filenamePrefix_ = other.filenamePrefix_;
      playlistName_ = other.playlistName_;
      livePlaylistName_ = other.livePlaylistName_;
      segmentDuration_ = other.segmentDuration_;
      filenameSuffix_ = other.filenameSuffix_;
      disableManifest_ = other.disableManifest_;
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          S3 = other.S3.Clone();
          break;
        case OutputOneofCase.Gcp:
          Gcp = other.Gcp.Clone();
          break;
        case OutputOneofCase.Azure:
          Azure = other.Azure.Clone();
          break;
        case OutputOneofCase.AliOSS:
          AliOSS = other.AliOSS.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentedFileOutput Clone() {
      return new SegmentedFileOutput(this);
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 1;
    private global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol protocol_ = global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "filename_prefix" field.</summary>
    public const int FilenamePrefixFieldNumber = 2;
    private string filenamePrefix_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilenamePrefix {
      get { return filenamePrefix_; }
      set {
        filenamePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playlist_name" field.</summary>
    public const int PlaylistNameFieldNumber = 3;
    private string playlistName_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlaylistName {
      get { return playlistName_; }
      set {
        playlistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "live_playlist_name" field.</summary>
    public const int LivePlaylistNameFieldNumber = 11;
    private string livePlaylistName_ = "";
    /// <summary>
    /// (optional, disabled if not provided). Path of a live playlist
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LivePlaylistName {
      get { return livePlaylistName_; }
      set {
        livePlaylistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segment_duration" field.</summary>
    public const int SegmentDurationFieldNumber = 4;
    private uint segmentDuration_;
    /// <summary>
    /// in seconds (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SegmentDuration {
      get { return segmentDuration_; }
      set {
        segmentDuration_ = value;
      }
    }

    /// <summary>Field number for the "filename_suffix" field.</summary>
    public const int FilenameSuffixFieldNumber = 10;
    private global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix filenameSuffix_ = global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index;
    /// <summary>
    /// (optional, default INDEX)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix FilenameSuffix {
      get { return filenameSuffix_; }
      set {
        filenameSuffix_ = value;
      }
    }

    /// <summary>Field number for the "disable_manifest" field.</summary>
    public const int DisableManifestFieldNumber = 8;
    private bool disableManifest_;
    /// <summary>
    /// disable upload of manifest file (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableManifest {
      get { return disableManifest_; }
      set {
        disableManifest_ = value;
      }
    }

    /// <summary>Field number for the "s3" field.</summary>
    public const int S3FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.S3Upload S3 {
      get { return outputCase_ == OutputOneofCase.S3 ? (global::Livekit.Server.Sdk.Dotnet.S3Upload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.S3;
      }
    }

    /// <summary>Field number for the "gcp" field.</summary>
    public const int GcpFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.GCPUpload Gcp {
      get { return outputCase_ == OutputOneofCase.Gcp ? (global::Livekit.Server.Sdk.Dotnet.GCPUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Gcp;
      }
    }

    /// <summary>Field number for the "azure" field.</summary>
    public const int AzureFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload Azure {
      get { return outputCase_ == OutputOneofCase.Azure ? (global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Azure;
      }
    }

    /// <summary>Field number for the "aliOSS" field.</summary>
    public const int AliOSSFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AliOSSUpload AliOSS {
      get { return outputCase_ == OutputOneofCase.AliOSS ? (global::Livekit.Server.Sdk.Dotnet.AliOSSUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.AliOSS;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      S3 = 5,
      Gcp = 6,
      Azure = 7,
      AliOSS = 9,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SegmentedFileOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SegmentedFileOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Protocol != other.Protocol) return false;
      if (FilenamePrefix != other.FilenamePrefix) return false;
      if (PlaylistName != other.PlaylistName) return false;
      if (LivePlaylistName != other.LivePlaylistName) return false;
      if (SegmentDuration != other.SegmentDuration) return false;
      if (FilenameSuffix != other.FilenameSuffix) return false;
      if (DisableManifest != other.DisableManifest) return false;
      if (!object.Equals(S3, other.S3)) return false;
      if (!object.Equals(Gcp, other.Gcp)) return false;
      if (!object.Equals(Azure, other.Azure)) return false;
      if (!object.Equals(AliOSS, other.AliOSS)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol) hash ^= Protocol.GetHashCode();
      if (FilenamePrefix.Length != 0) hash ^= FilenamePrefix.GetHashCode();
      if (PlaylistName.Length != 0) hash ^= PlaylistName.GetHashCode();
      if (LivePlaylistName.Length != 0) hash ^= LivePlaylistName.GetHashCode();
      if (SegmentDuration != 0) hash ^= SegmentDuration.GetHashCode();
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index) hash ^= FilenameSuffix.GetHashCode();
      if (DisableManifest != false) hash ^= DisableManifest.GetHashCode();
      if (outputCase_ == OutputOneofCase.S3) hash ^= S3.GetHashCode();
      if (outputCase_ == OutputOneofCase.Gcp) hash ^= Gcp.GetHashCode();
      if (outputCase_ == OutputOneofCase.Azure) hash ^= Azure.GetHashCode();
      if (outputCase_ == OutputOneofCase.AliOSS) hash ^= AliOSS.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FilenamePrefix);
      }
      if (PlaylistName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlaylistName);
      }
      if (SegmentDuration != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SegmentDuration);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(42);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(50);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(58);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(64);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(74);
        output.WriteMessage(AliOSS);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index) {
        output.WriteRawTag(80);
        output.WriteEnum((int) FilenameSuffix);
      }
      if (LivePlaylistName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LivePlaylistName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FilenamePrefix);
      }
      if (PlaylistName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlaylistName);
      }
      if (SegmentDuration != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SegmentDuration);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(42);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(50);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(58);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(64);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(74);
        output.WriteMessage(AliOSS);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index) {
        output.WriteRawTag(80);
        output.WriteEnum((int) FilenameSuffix);
      }
      if (LivePlaylistName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LivePlaylistName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (FilenamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilenamePrefix);
      }
      if (PlaylistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaylistName);
      }
      if (LivePlaylistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LivePlaylistName);
      }
      if (SegmentDuration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentDuration);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FilenameSuffix);
      }
      if (DisableManifest != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.S3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliOSS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SegmentedFileOutput other) {
      if (other == null) {
        return;
      }
      if (other.Protocol != global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol.DefaultSegmentedFileProtocol) {
        Protocol = other.Protocol;
      }
      if (other.FilenamePrefix.Length != 0) {
        FilenamePrefix = other.FilenamePrefix;
      }
      if (other.PlaylistName.Length != 0) {
        PlaylistName = other.PlaylistName;
      }
      if (other.LivePlaylistName.Length != 0) {
        LivePlaylistName = other.LivePlaylistName;
      }
      if (other.SegmentDuration != 0) {
        SegmentDuration = other.SegmentDuration;
      }
      if (other.FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix.Index) {
        FilenameSuffix = other.FilenameSuffix;
      }
      if (other.DisableManifest != false) {
        DisableManifest = other.DisableManifest;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          if (S3 == null) {
            S3 = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
          }
          S3.MergeFrom(other.S3);
          break;
        case OutputOneofCase.Gcp:
          if (Gcp == null) {
            Gcp = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
          }
          Gcp.MergeFrom(other.Gcp);
          break;
        case OutputOneofCase.Azure:
          if (Azure == null) {
            Azure = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
          }
          Azure.MergeFrom(other.Azure);
          break;
        case OutputOneofCase.AliOSS:
          if (AliOSS == null) {
            AliOSS = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
          }
          AliOSS.MergeFrom(other.AliOSS);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Protocol = (global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            FilenamePrefix = input.ReadString();
            break;
          }
          case 26: {
            PlaylistName = input.ReadString();
            break;
          }
          case 32: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 64: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
          case 80: {
            FilenameSuffix = (global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix) input.ReadEnum();
            break;
          }
          case 90: {
            LivePlaylistName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Protocol = (global::Livekit.Server.Sdk.Dotnet.SegmentedFileProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            FilenamePrefix = input.ReadString();
            break;
          }
          case 26: {
            PlaylistName = input.ReadString();
            break;
          }
          case 32: {
            SegmentDuration = input.ReadUInt32();
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 64: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
          case 80: {
            FilenameSuffix = (global::Livekit.Server.Sdk.Dotnet.SegmentedFileSuffix) input.ReadEnum();
            break;
          }
          case 90: {
            LivePlaylistName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DirectFileOutput : pb::IMessage<DirectFileOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DirectFileOutput> _parser = new pb::MessageParser<DirectFileOutput>(() => new DirectFileOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DirectFileOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectFileOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectFileOutput(DirectFileOutput other) : this() {
      filepath_ = other.filepath_;
      disableManifest_ = other.disableManifest_;
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          S3 = other.S3.Clone();
          break;
        case OutputOneofCase.Gcp:
          Gcp = other.Gcp.Clone();
          break;
        case OutputOneofCase.Azure:
          Azure = other.Azure.Clone();
          break;
        case OutputOneofCase.AliOSS:
          AliOSS = other.AliOSS.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectFileOutput Clone() {
      return new DirectFileOutput(this);
    }

    /// <summary>Field number for the "filepath" field.</summary>
    public const int FilepathFieldNumber = 1;
    private string filepath_ = "";
    /// <summary>
    /// see egress docs for templating (default {track_id}-{time})
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filepath {
      get { return filepath_; }
      set {
        filepath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disable_manifest" field.</summary>
    public const int DisableManifestFieldNumber = 5;
    private bool disableManifest_;
    /// <summary>
    /// disable upload of manifest file (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableManifest {
      get { return disableManifest_; }
      set {
        disableManifest_ = value;
      }
    }

    /// <summary>Field number for the "s3" field.</summary>
    public const int S3FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.S3Upload S3 {
      get { return outputCase_ == OutputOneofCase.S3 ? (global::Livekit.Server.Sdk.Dotnet.S3Upload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.S3;
      }
    }

    /// <summary>Field number for the "gcp" field.</summary>
    public const int GcpFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.GCPUpload Gcp {
      get { return outputCase_ == OutputOneofCase.Gcp ? (global::Livekit.Server.Sdk.Dotnet.GCPUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Gcp;
      }
    }

    /// <summary>Field number for the "azure" field.</summary>
    public const int AzureFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload Azure {
      get { return outputCase_ == OutputOneofCase.Azure ? (global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Azure;
      }
    }

    /// <summary>Field number for the "aliOSS" field.</summary>
    public const int AliOSSFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AliOSSUpload AliOSS {
      get { return outputCase_ == OutputOneofCase.AliOSS ? (global::Livekit.Server.Sdk.Dotnet.AliOSSUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.AliOSS;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      S3 = 2,
      Gcp = 3,
      Azure = 4,
      AliOSS = 6,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DirectFileOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DirectFileOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filepath != other.Filepath) return false;
      if (DisableManifest != other.DisableManifest) return false;
      if (!object.Equals(S3, other.S3)) return false;
      if (!object.Equals(Gcp, other.Gcp)) return false;
      if (!object.Equals(Azure, other.Azure)) return false;
      if (!object.Equals(AliOSS, other.AliOSS)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filepath.Length != 0) hash ^= Filepath.GetHashCode();
      if (DisableManifest != false) hash ^= DisableManifest.GetHashCode();
      if (outputCase_ == OutputOneofCase.S3) hash ^= S3.GetHashCode();
      if (outputCase_ == OutputOneofCase.Gcp) hash ^= Gcp.GetHashCode();
      if (outputCase_ == OutputOneofCase.Azure) hash ^= Azure.GetHashCode();
      if (outputCase_ == OutputOneofCase.AliOSS) hash ^= AliOSS.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filepath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(18);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(34);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(50);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filepath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(18);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(34);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(50);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filepath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filepath);
      }
      if (DisableManifest != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.S3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliOSS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DirectFileOutput other) {
      if (other == null) {
        return;
      }
      if (other.Filepath.Length != 0) {
        Filepath = other.Filepath;
      }
      if (other.DisableManifest != false) {
        DisableManifest = other.DisableManifest;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          if (S3 == null) {
            S3 = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
          }
          S3.MergeFrom(other.S3);
          break;
        case OutputOneofCase.Gcp:
          if (Gcp == null) {
            Gcp = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
          }
          Gcp.MergeFrom(other.Gcp);
          break;
        case OutputOneofCase.Azure:
          if (Azure == null) {
            Azure = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
          }
          Azure.MergeFrom(other.Azure);
          break;
        case OutputOneofCase.AliOSS:
          if (AliOSS == null) {
            AliOSS = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
          }
          AliOSS.MergeFrom(other.AliOSS);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filepath = input.ReadString();
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 40: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filepath = input.ReadString();
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 40: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ImageOutput : pb::IMessage<ImageOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageOutput> _parser = new pb::MessageParser<ImageOutput>(() => new ImageOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ImageOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImageOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImageOutput(ImageOutput other) : this() {
      captureInterval_ = other.captureInterval_;
      width_ = other.width_;
      height_ = other.height_;
      filenamePrefix_ = other.filenamePrefix_;
      filenameSuffix_ = other.filenameSuffix_;
      imageCodec_ = other.imageCodec_;
      disableManifest_ = other.disableManifest_;
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          S3 = other.S3.Clone();
          break;
        case OutputOneofCase.Gcp:
          Gcp = other.Gcp.Clone();
          break;
        case OutputOneofCase.Azure:
          Azure = other.Azure.Clone();
          break;
        case OutputOneofCase.AliOSS:
          AliOSS = other.AliOSS.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImageOutput Clone() {
      return new ImageOutput(this);
    }

    /// <summary>Field number for the "capture_interval" field.</summary>
    public const int CaptureIntervalFieldNumber = 1;
    private uint captureInterval_;
    /// <summary>
    /// in seconds (required)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CaptureInterval {
      get { return captureInterval_; }
      set {
        captureInterval_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private int width_;
    /// <summary>
    /// (optional, defaults to track width)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private int height_;
    /// <summary>
    /// (optional, defaults to track height)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "filename_prefix" field.</summary>
    public const int FilenamePrefixFieldNumber = 4;
    private string filenamePrefix_ = "";
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilenamePrefix {
      get { return filenamePrefix_; }
      set {
        filenamePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filename_suffix" field.</summary>
    public const int FilenameSuffixFieldNumber = 5;
    private global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix filenameSuffix_ = global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex;
    /// <summary>
    /// (optional, default INDEX)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix FilenameSuffix {
      get { return filenameSuffix_; }
      set {
        filenameSuffix_ = value;
      }
    }

    /// <summary>Field number for the "image_codec" field.</summary>
    public const int ImageCodecFieldNumber = 6;
    private global::Livekit.Server.Sdk.Dotnet.ImageCodec imageCodec_ = global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ImageCodec ImageCodec {
      get { return imageCodec_; }
      set {
        imageCodec_ = value;
      }
    }

    /// <summary>Field number for the "disable_manifest" field.</summary>
    public const int DisableManifestFieldNumber = 7;
    private bool disableManifest_;
    /// <summary>
    /// disable upload of manifest file (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableManifest {
      get { return disableManifest_; }
      set {
        disableManifest_ = value;
      }
    }

    /// <summary>Field number for the "s3" field.</summary>
    public const int S3FieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.S3Upload S3 {
      get { return outputCase_ == OutputOneofCase.S3 ? (global::Livekit.Server.Sdk.Dotnet.S3Upload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.S3;
      }
    }

    /// <summary>Field number for the "gcp" field.</summary>
    public const int GcpFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.GCPUpload Gcp {
      get { return outputCase_ == OutputOneofCase.Gcp ? (global::Livekit.Server.Sdk.Dotnet.GCPUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Gcp;
      }
    }

    /// <summary>Field number for the "azure" field.</summary>
    public const int AzureFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload Azure {
      get { return outputCase_ == OutputOneofCase.Azure ? (global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Azure;
      }
    }

    /// <summary>Field number for the "aliOSS" field.</summary>
    public const int AliOSSFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AliOSSUpload AliOSS {
      get { return outputCase_ == OutputOneofCase.AliOSS ? (global::Livekit.Server.Sdk.Dotnet.AliOSSUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.AliOSS;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      S3 = 8,
      Gcp = 9,
      Azure = 10,
      AliOSS = 11,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ImageOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ImageOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CaptureInterval != other.CaptureInterval) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (FilenamePrefix != other.FilenamePrefix) return false;
      if (FilenameSuffix != other.FilenameSuffix) return false;
      if (ImageCodec != other.ImageCodec) return false;
      if (DisableManifest != other.DisableManifest) return false;
      if (!object.Equals(S3, other.S3)) return false;
      if (!object.Equals(Gcp, other.Gcp)) return false;
      if (!object.Equals(Azure, other.Azure)) return false;
      if (!object.Equals(AliOSS, other.AliOSS)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CaptureInterval != 0) hash ^= CaptureInterval.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (FilenamePrefix.Length != 0) hash ^= FilenamePrefix.GetHashCode();
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex) hash ^= FilenameSuffix.GetHashCode();
      if (ImageCodec != global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault) hash ^= ImageCodec.GetHashCode();
      if (DisableManifest != false) hash ^= DisableManifest.GetHashCode();
      if (outputCase_ == OutputOneofCase.S3) hash ^= S3.GetHashCode();
      if (outputCase_ == OutputOneofCase.Gcp) hash ^= Gcp.GetHashCode();
      if (outputCase_ == OutputOneofCase.Azure) hash ^= Azure.GetHashCode();
      if (outputCase_ == OutputOneofCase.AliOSS) hash ^= AliOSS.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CaptureInterval != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CaptureInterval);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FilenamePrefix);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FilenameSuffix);
      }
      if (ImageCodec != global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ImageCodec);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(56);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(66);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(74);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(82);
        output.WriteMessage(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(90);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CaptureInterval != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CaptureInterval);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FilenamePrefix);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FilenameSuffix);
      }
      if (ImageCodec != global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ImageCodec);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(56);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(66);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(74);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(82);
        output.WriteMessage(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(90);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CaptureInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CaptureInterval);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (FilenamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilenamePrefix);
      }
      if (FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FilenameSuffix);
      }
      if (ImageCodec != global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImageCodec);
      }
      if (DisableManifest != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.S3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliOSS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ImageOutput other) {
      if (other == null) {
        return;
      }
      if (other.CaptureInterval != 0) {
        CaptureInterval = other.CaptureInterval;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.FilenamePrefix.Length != 0) {
        FilenamePrefix = other.FilenamePrefix;
      }
      if (other.FilenameSuffix != global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix.ImageSuffixIndex) {
        FilenameSuffix = other.FilenameSuffix;
      }
      if (other.ImageCodec != global::Livekit.Server.Sdk.Dotnet.ImageCodec.IcDefault) {
        ImageCodec = other.ImageCodec;
      }
      if (other.DisableManifest != false) {
        DisableManifest = other.DisableManifest;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          if (S3 == null) {
            S3 = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
          }
          S3.MergeFrom(other.S3);
          break;
        case OutputOneofCase.Gcp:
          if (Gcp == null) {
            Gcp = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
          }
          Gcp.MergeFrom(other.Gcp);
          break;
        case OutputOneofCase.Azure:
          if (Azure == null) {
            Azure = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
          }
          Azure.MergeFrom(other.Azure);
          break;
        case OutputOneofCase.AliOSS:
          if (AliOSS == null) {
            AliOSS = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
          }
          AliOSS.MergeFrom(other.AliOSS);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CaptureInterval = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 34: {
            FilenamePrefix = input.ReadString();
            break;
          }
          case 40: {
            FilenameSuffix = (global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix) input.ReadEnum();
            break;
          }
          case 48: {
            ImageCodec = (global::Livekit.Server.Sdk.Dotnet.ImageCodec) input.ReadEnum();
            break;
          }
          case 56: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 90: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CaptureInterval = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 34: {
            FilenamePrefix = input.ReadString();
            break;
          }
          case 40: {
            FilenameSuffix = (global::Livekit.Server.Sdk.Dotnet.ImageFileSuffix) input.ReadEnum();
            break;
          }
          case 48: {
            ImageCodec = (global::Livekit.Server.Sdk.Dotnet.ImageCodec) input.ReadEnum();
            break;
          }
          case 56: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 74: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 82: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 90: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class S3Upload : pb::IMessage<S3Upload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S3Upload> _parser = new pb::MessageParser<S3Upload>(() => new S3Upload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S3Upload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3Upload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3Upload(S3Upload other) : this() {
      accessKey_ = other.accessKey_;
      secret_ = other.secret_;
      sessionToken_ = other.sessionToken_;
      assumeRoleArn_ = other.assumeRoleArn_;
      assumeRoleExternalId_ = other.assumeRoleExternalId_;
      region_ = other.region_;
      endpoint_ = other.endpoint_;
      bucket_ = other.bucket_;
      forcePathStyle_ = other.forcePathStyle_;
      metadata_ = other.metadata_.Clone();
      tagging_ = other.tagging_;
      contentDisposition_ = other.contentDisposition_;
      proxy_ = other.proxy_ != null ? other.proxy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3Upload Clone() {
      return new S3Upload(this);
    }

    /// <summary>Field number for the "access_key" field.</summary>
    public const int AccessKeyFieldNumber = 1;
    private string accessKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessKey {
      get { return accessKey_; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 11;
    private string sessionToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionToken {
      get { return sessionToken_; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assume_role_arn" field.</summary>
    public const int AssumeRoleArnFieldNumber = 12;
    private string assumeRoleArn_ = "";
    /// <summary>
    /// ARN of the role to assume for file upload. Egress will make an AssumeRole API call using the provided access_key and secret to assume that role. On LiveKit cloud, this is only available on accounts that have the feature enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssumeRoleArn {
      get { return assumeRoleArn_; }
      set {
        assumeRoleArn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assume_role_external_id" field.</summary>
    public const int AssumeRoleExternalIdFieldNumber = 13;
    private string assumeRoleExternalId_ = "";
    /// <summary>
    /// ExternalID to use when assuming role for upload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssumeRoleExternalId {
      get { return assumeRoleExternalId_; }
      set {
        assumeRoleExternalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 4;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 5;
    private string bucket_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force_path_style" field.</summary>
    public const int ForcePathStyleFieldNumber = 6;
    private bool forcePathStyle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForcePathStyle {
      get { return forcePathStyle_; }
      set {
        forcePathStyle_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 58);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "tagging" field.</summary>
    public const int TaggingFieldNumber = 8;
    private string tagging_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tagging {
      get { return tagging_; }
      set {
        tagging_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_disposition" field.</summary>
    public const int ContentDispositionFieldNumber = 9;
    private string contentDisposition_ = "";
    /// <summary>
    /// Content-Disposition header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentDisposition {
      get { return contentDisposition_; }
      set {
        contentDisposition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy" field.</summary>
    public const int ProxyFieldNumber = 10;
    private global::Livekit.Server.Sdk.Dotnet.ProxyConfig proxy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ProxyConfig Proxy {
      get { return proxy_; }
      set {
        proxy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S3Upload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S3Upload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessKey != other.AccessKey) return false;
      if (Secret != other.Secret) return false;
      if (SessionToken != other.SessionToken) return false;
      if (AssumeRoleArn != other.AssumeRoleArn) return false;
      if (AssumeRoleExternalId != other.AssumeRoleExternalId) return false;
      if (Region != other.Region) return false;
      if (Endpoint != other.Endpoint) return false;
      if (Bucket != other.Bucket) return false;
      if (ForcePathStyle != other.ForcePathStyle) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (Tagging != other.Tagging) return false;
      if (ContentDisposition != other.ContentDisposition) return false;
      if (!object.Equals(Proxy, other.Proxy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (SessionToken.Length != 0) hash ^= SessionToken.GetHashCode();
      if (AssumeRoleArn.Length != 0) hash ^= AssumeRoleArn.GetHashCode();
      if (AssumeRoleExternalId.Length != 0) hash ^= AssumeRoleExternalId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (ForcePathStyle != false) hash ^= ForcePathStyle.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (Tagging.Length != 0) hash ^= Tagging.GetHashCode();
      if (ContentDisposition.Length != 0) hash ^= ContentDisposition.GetHashCode();
      if (proxy_ != null) hash ^= Proxy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Endpoint);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bucket);
      }
      if (ForcePathStyle != false) {
        output.WriteRawTag(48);
        output.WriteBool(ForcePathStyle);
      }
      metadata_.WriteTo(output, _map_metadata_codec);
      if (Tagging.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Tagging);
      }
      if (ContentDisposition.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentDisposition);
      }
      if (proxy_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Proxy);
      }
      if (SessionToken.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SessionToken);
      }
      if (AssumeRoleArn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AssumeRoleArn);
      }
      if (AssumeRoleExternalId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AssumeRoleExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Endpoint);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bucket);
      }
      if (ForcePathStyle != false) {
        output.WriteRawTag(48);
        output.WriteBool(ForcePathStyle);
      }
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (Tagging.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Tagging);
      }
      if (ContentDisposition.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentDisposition);
      }
      if (proxy_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Proxy);
      }
      if (SessionToken.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SessionToken);
      }
      if (AssumeRoleArn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AssumeRoleArn);
      }
      if (AssumeRoleExternalId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AssumeRoleExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (SessionToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (AssumeRoleArn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssumeRoleArn);
      }
      if (AssumeRoleExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssumeRoleExternalId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (ForcePathStyle != false) {
        size += 1 + 1;
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (Tagging.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tagging);
      }
      if (ContentDisposition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDisposition);
      }
      if (proxy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proxy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S3Upload other) {
      if (other == null) {
        return;
      }
      if (other.AccessKey.Length != 0) {
        AccessKey = other.AccessKey;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      if (other.SessionToken.Length != 0) {
        SessionToken = other.SessionToken;
      }
      if (other.AssumeRoleArn.Length != 0) {
        AssumeRoleArn = other.AssumeRoleArn;
      }
      if (other.AssumeRoleExternalId.Length != 0) {
        AssumeRoleExternalId = other.AssumeRoleExternalId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      if (other.ForcePathStyle != false) {
        ForcePathStyle = other.ForcePathStyle;
      }
      metadata_.MergeFrom(other.metadata_);
      if (other.Tagging.Length != 0) {
        Tagging = other.Tagging;
      }
      if (other.ContentDisposition.Length != 0) {
        ContentDisposition = other.ContentDisposition;
      }
      if (other.proxy_ != null) {
        if (proxy_ == null) {
          Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
        }
        Proxy.MergeFrom(other.Proxy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Endpoint = input.ReadString();
            break;
          }
          case 42: {
            Bucket = input.ReadString();
            break;
          }
          case 48: {
            ForcePathStyle = input.ReadBool();
            break;
          }
          case 58: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 66: {
            Tagging = input.ReadString();
            break;
          }
          case 74: {
            ContentDisposition = input.ReadString();
            break;
          }
          case 82: {
            if (proxy_ == null) {
              Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
            }
            input.ReadMessage(Proxy);
            break;
          }
          case 90: {
            SessionToken = input.ReadString();
            break;
          }
          case 98: {
            AssumeRoleArn = input.ReadString();
            break;
          }
          case 106: {
            AssumeRoleExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Endpoint = input.ReadString();
            break;
          }
          case 42: {
            Bucket = input.ReadString();
            break;
          }
          case 48: {
            ForcePathStyle = input.ReadBool();
            break;
          }
          case 58: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 66: {
            Tagging = input.ReadString();
            break;
          }
          case 74: {
            ContentDisposition = input.ReadString();
            break;
          }
          case 82: {
            if (proxy_ == null) {
              Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
            }
            input.ReadMessage(Proxy);
            break;
          }
          case 90: {
            SessionToken = input.ReadString();
            break;
          }
          case 98: {
            AssumeRoleArn = input.ReadString();
            break;
          }
          case 106: {
            AssumeRoleExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GCPUpload : pb::IMessage<GCPUpload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCPUpload> _parser = new pb::MessageParser<GCPUpload>(() => new GCPUpload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCPUpload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCPUpload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCPUpload(GCPUpload other) : this() {
      credentials_ = other.credentials_;
      bucket_ = other.bucket_;
      proxy_ = other.proxy_ != null ? other.proxy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCPUpload Clone() {
      return new GCPUpload(this);
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 1;
    private string credentials_ = "";
    /// <summary>
    /// service account credentials serialized in JSON "credentials.json"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Credentials {
      get { return credentials_; }
      set {
        credentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 2;
    private string bucket_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy" field.</summary>
    public const int ProxyFieldNumber = 3;
    private global::Livekit.Server.Sdk.Dotnet.ProxyConfig proxy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ProxyConfig Proxy {
      get { return proxy_; }
      set {
        proxy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCPUpload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCPUpload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Credentials != other.Credentials) return false;
      if (Bucket != other.Bucket) return false;
      if (!object.Equals(Proxy, other.Proxy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Credentials.Length != 0) hash ^= Credentials.GetHashCode();
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (proxy_ != null) hash ^= Proxy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Credentials.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Credentials);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Bucket);
      }
      if (proxy_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Proxy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Credentials.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Credentials);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Bucket);
      }
      if (proxy_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Proxy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Credentials.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Credentials);
      }
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (proxy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proxy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCPUpload other) {
      if (other == null) {
        return;
      }
      if (other.Credentials.Length != 0) {
        Credentials = other.Credentials;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      if (other.proxy_ != null) {
        if (proxy_ == null) {
          Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
        }
        Proxy.MergeFrom(other.Proxy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Credentials = input.ReadString();
            break;
          }
          case 18: {
            Bucket = input.ReadString();
            break;
          }
          case 26: {
            if (proxy_ == null) {
              Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
            }
            input.ReadMessage(Proxy);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Credentials = input.ReadString();
            break;
          }
          case 18: {
            Bucket = input.ReadString();
            break;
          }
          case 26: {
            if (proxy_ == null) {
              Proxy = new global::Livekit.Server.Sdk.Dotnet.ProxyConfig();
            }
            input.ReadMessage(Proxy);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AzureBlobUpload : pb::IMessage<AzureBlobUpload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AzureBlobUpload> _parser = new pb::MessageParser<AzureBlobUpload>(() => new AzureBlobUpload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AzureBlobUpload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AzureBlobUpload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AzureBlobUpload(AzureBlobUpload other) : this() {
      accountName_ = other.accountName_;
      accountKey_ = other.accountKey_;
      containerName_ = other.containerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AzureBlobUpload Clone() {
      return new AzureBlobUpload(this);
    }

    /// <summary>Field number for the "account_name" field.</summary>
    public const int AccountNameFieldNumber = 1;
    private string accountName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountName {
      get { return accountName_; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_key" field.</summary>
    public const int AccountKeyFieldNumber = 2;
    private string accountKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountKey {
      get { return accountKey_; }
      set {
        accountKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "container_name" field.</summary>
    public const int ContainerNameFieldNumber = 3;
    private string containerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContainerName {
      get { return containerName_; }
      set {
        containerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AzureBlobUpload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AzureBlobUpload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountName != other.AccountName) return false;
      if (AccountKey != other.AccountKey) return false;
      if (ContainerName != other.ContainerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
      if (AccountKey.Length != 0) hash ^= AccountKey.GetHashCode();
      if (ContainerName.Length != 0) hash ^= ContainerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccountName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountName);
      }
      if (AccountKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountKey);
      }
      if (ContainerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContainerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccountName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountName);
      }
      if (AccountKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountKey);
      }
      if (ContainerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContainerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
      }
      if (AccountKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountKey);
      }
      if (ContainerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AzureBlobUpload other) {
      if (other == null) {
        return;
      }
      if (other.AccountName.Length != 0) {
        AccountName = other.AccountName;
      }
      if (other.AccountKey.Length != 0) {
        AccountKey = other.AccountKey;
      }
      if (other.ContainerName.Length != 0) {
        ContainerName = other.ContainerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountName = input.ReadString();
            break;
          }
          case 18: {
            AccountKey = input.ReadString();
            break;
          }
          case 26: {
            ContainerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountName = input.ReadString();
            break;
          }
          case 18: {
            AccountKey = input.ReadString();
            break;
          }
          case 26: {
            ContainerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AliOSSUpload : pb::IMessage<AliOSSUpload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AliOSSUpload> _parser = new pb::MessageParser<AliOSSUpload>(() => new AliOSSUpload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AliOSSUpload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AliOSSUpload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AliOSSUpload(AliOSSUpload other) : this() {
      accessKey_ = other.accessKey_;
      secret_ = other.secret_;
      region_ = other.region_;
      endpoint_ = other.endpoint_;
      bucket_ = other.bucket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AliOSSUpload Clone() {
      return new AliOSSUpload(this);
    }

    /// <summary>Field number for the "access_key" field.</summary>
    public const int AccessKeyFieldNumber = 1;
    private string accessKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessKey {
      get { return accessKey_; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 4;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 5;
    private string bucket_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AliOSSUpload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AliOSSUpload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessKey != other.AccessKey) return false;
      if (Secret != other.Secret) return false;
      if (Region != other.Region) return false;
      if (Endpoint != other.Endpoint) return false;
      if (Bucket != other.Bucket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Endpoint);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bucket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Endpoint);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bucket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AliOSSUpload other) {
      if (other == null) {
        return;
      }
      if (other.AccessKey.Length != 0) {
        AccessKey = other.AccessKey;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Endpoint = input.ReadString();
            break;
          }
          case 42: {
            Bucket = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Endpoint = input.ReadString();
            break;
          }
          case 42: {
            Bucket = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProxyConfig : pb::IMessage<ProxyConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProxyConfig> _parser = new pb::MessageParser<ProxyConfig>(() => new ProxyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProxyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig(ProxyConfig other) : this() {
      url_ = other.url_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProxyConfig Clone() {
      return new ProxyConfig(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProxyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProxyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProxyConfig other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamOutput : pb::IMessage<StreamOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamOutput> _parser = new pb::MessageParser<StreamOutput>(() => new StreamOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamOutput(StreamOutput other) : this() {
      protocol_ = other.protocol_;
      urls_ = other.urls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamOutput Clone() {
      return new StreamOutput(this);
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 1;
    private global::Livekit.Server.Sdk.Dotnet.StreamProtocol protocol_ = global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "urls" field.</summary>
    public const int UrlsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_urls_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> urls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Urls {
      get { return urls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Protocol != other.Protocol) return false;
      if(!urls_.Equals(other.urls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol) hash ^= Protocol.GetHashCode();
      hash ^= urls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      urls_.WriteTo(output, _repeated_urls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      urls_.WriteTo(ref output, _repeated_urls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Protocol != global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      size += urls_.CalculateSize(_repeated_urls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamOutput other) {
      if (other == null) {
        return;
      }
      if (other.Protocol != global::Livekit.Server.Sdk.Dotnet.StreamProtocol.DefaultProtocol) {
        Protocol = other.Protocol;
      }
      urls_.Add(other.urls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Protocol = (global::Livekit.Server.Sdk.Dotnet.StreamProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            urls_.AddEntriesFrom(input, _repeated_urls_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Protocol = (global::Livekit.Server.Sdk.Dotnet.StreamProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            urls_.AddEntriesFrom(ref input, _repeated_urls_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EncodingOptions : pb::IMessage<EncodingOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncodingOptions> _parser = new pb::MessageParser<EncodingOptions>(() => new EncodingOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EncodingOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingOptions(EncodingOptions other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      depth_ = other.depth_;
      framerate_ = other.framerate_;
      audioCodec_ = other.audioCodec_;
      audioBitrate_ = other.audioBitrate_;
      audioQuality_ = other.audioQuality_;
      audioFrequency_ = other.audioFrequency_;
      videoCodec_ = other.videoCodec_;
      videoBitrate_ = other.videoBitrate_;
      videoQuality_ = other.videoQuality_;
      keyFrameInterval_ = other.keyFrameInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingOptions Clone() {
      return new EncodingOptions(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private int width_;
    /// <summary>
    /// (default 1920)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private int height_;
    /// <summary>
    /// (default 1080)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 3;
    private int depth_;
    /// <summary>
    /// (default 24)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "framerate" field.</summary>
    public const int FramerateFieldNumber = 4;
    private int framerate_;
    /// <summary>
    /// (default 30)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Framerate {
      get { return framerate_; }
      set {
        framerate_ = value;
      }
    }

    /// <summary>Field number for the "audio_codec" field.</summary>
    public const int AudioCodecFieldNumber = 5;
    private global::Livekit.Server.Sdk.Dotnet.AudioCodec audioCodec_ = global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc;
    /// <summary>
    /// (default OPUS)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AudioCodec AudioCodec {
      get { return audioCodec_; }
      set {
        audioCodec_ = value;
      }
    }

    /// <summary>Field number for the "audio_bitrate" field.</summary>
    public const int AudioBitrateFieldNumber = 6;
    private int audioBitrate_;
    /// <summary>
    /// (default 128)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioBitrate {
      get { return audioBitrate_; }
      set {
        audioBitrate_ = value;
      }
    }

    /// <summary>Field number for the "audio_quality" field.</summary>
    public const int AudioQualityFieldNumber = 11;
    private int audioQuality_;
    /// <summary>
    /// quality setting on audio encoder
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioQuality {
      get { return audioQuality_; }
      set {
        audioQuality_ = value;
      }
    }

    /// <summary>Field number for the "audio_frequency" field.</summary>
    public const int AudioFrequencyFieldNumber = 7;
    private int audioFrequency_;
    /// <summary>
    /// (default 44100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioFrequency {
      get { return audioFrequency_; }
      set {
        audioFrequency_ = value;
      }
    }

    /// <summary>Field number for the "video_codec" field.</summary>
    public const int VideoCodecFieldNumber = 8;
    private global::Livekit.Server.Sdk.Dotnet.VideoCodec videoCodec_ = global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc;
    /// <summary>
    /// (default H264_MAIN)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.VideoCodec VideoCodec {
      get { return videoCodec_; }
      set {
        videoCodec_ = value;
      }
    }

    /// <summary>Field number for the "video_bitrate" field.</summary>
    public const int VideoBitrateFieldNumber = 9;
    private int videoBitrate_;
    /// <summary>
    /// (default 4500)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VideoBitrate {
      get { return videoBitrate_; }
      set {
        videoBitrate_ = value;
      }
    }

    /// <summary>Field number for the "video_quality" field.</summary>
    public const int VideoQualityFieldNumber = 12;
    private int videoQuality_;
    /// <summary>
    /// quality setting on video encoder
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VideoQuality {
      get { return videoQuality_; }
      set {
        videoQuality_ = value;
      }
    }

    /// <summary>Field number for the "key_frame_interval" field.</summary>
    public const int KeyFrameIntervalFieldNumber = 10;
    private double keyFrameInterval_;
    /// <summary>
    /// in seconds (default 4s for streaming, segment duration for segmented output, encoder default for files)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double KeyFrameInterval {
      get { return keyFrameInterval_; }
      set {
        keyFrameInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EncodingOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EncodingOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Depth != other.Depth) return false;
      if (Framerate != other.Framerate) return false;
      if (AudioCodec != other.AudioCodec) return false;
      if (AudioBitrate != other.AudioBitrate) return false;
      if (AudioQuality != other.AudioQuality) return false;
      if (AudioFrequency != other.AudioFrequency) return false;
      if (VideoCodec != other.VideoCodec) return false;
      if (VideoBitrate != other.VideoBitrate) return false;
      if (VideoQuality != other.VideoQuality) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(KeyFrameInterval, other.KeyFrameInterval)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (Framerate != 0) hash ^= Framerate.GetHashCode();
      if (AudioCodec != global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc) hash ^= AudioCodec.GetHashCode();
      if (AudioBitrate != 0) hash ^= AudioBitrate.GetHashCode();
      if (AudioQuality != 0) hash ^= AudioQuality.GetHashCode();
      if (AudioFrequency != 0) hash ^= AudioFrequency.GetHashCode();
      if (VideoCodec != global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc) hash ^= VideoCodec.GetHashCode();
      if (VideoBitrate != 0) hash ^= VideoBitrate.GetHashCode();
      if (VideoQuality != 0) hash ^= VideoQuality.GetHashCode();
      if (KeyFrameInterval != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(KeyFrameInterval);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Depth != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Depth);
      }
      if (Framerate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Framerate);
      }
      if (AudioCodec != global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AudioCodec);
      }
      if (AudioBitrate != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AudioBitrate);
      }
      if (AudioFrequency != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AudioFrequency);
      }
      if (VideoCodec != global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc) {
        output.WriteRawTag(64);
        output.WriteEnum((int) VideoCodec);
      }
      if (VideoBitrate != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(VideoBitrate);
      }
      if (KeyFrameInterval != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(KeyFrameInterval);
      }
      if (AudioQuality != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AudioQuality);
      }
      if (VideoQuality != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(VideoQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Depth != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Depth);
      }
      if (Framerate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Framerate);
      }
      if (AudioCodec != global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AudioCodec);
      }
      if (AudioBitrate != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AudioBitrate);
      }
      if (AudioFrequency != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AudioFrequency);
      }
      if (VideoCodec != global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc) {
        output.WriteRawTag(64);
        output.WriteEnum((int) VideoCodec);
      }
      if (VideoBitrate != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(VideoBitrate);
      }
      if (KeyFrameInterval != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(KeyFrameInterval);
      }
      if (AudioQuality != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AudioQuality);
      }
      if (VideoQuality != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(VideoQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (Framerate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Framerate);
      }
      if (AudioCodec != global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioCodec);
      }
      if (AudioBitrate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioBitrate);
      }
      if (AudioQuality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioQuality);
      }
      if (AudioFrequency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioFrequency);
      }
      if (VideoCodec != global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VideoCodec);
      }
      if (VideoBitrate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VideoBitrate);
      }
      if (VideoQuality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VideoQuality);
      }
      if (KeyFrameInterval != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EncodingOptions other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.Framerate != 0) {
        Framerate = other.Framerate;
      }
      if (other.AudioCodec != global::Livekit.Server.Sdk.Dotnet.AudioCodec.DefaultAc) {
        AudioCodec = other.AudioCodec;
      }
      if (other.AudioBitrate != 0) {
        AudioBitrate = other.AudioBitrate;
      }
      if (other.AudioQuality != 0) {
        AudioQuality = other.AudioQuality;
      }
      if (other.AudioFrequency != 0) {
        AudioFrequency = other.AudioFrequency;
      }
      if (other.VideoCodec != global::Livekit.Server.Sdk.Dotnet.VideoCodec.DefaultVc) {
        VideoCodec = other.VideoCodec;
      }
      if (other.VideoBitrate != 0) {
        VideoBitrate = other.VideoBitrate;
      }
      if (other.VideoQuality != 0) {
        VideoQuality = other.VideoQuality;
      }
      if (other.KeyFrameInterval != 0D) {
        KeyFrameInterval = other.KeyFrameInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            Depth = input.ReadInt32();
            break;
          }
          case 32: {
            Framerate = input.ReadInt32();
            break;
          }
          case 40: {
            AudioCodec = (global::Livekit.Server.Sdk.Dotnet.AudioCodec) input.ReadEnum();
            break;
          }
          case 48: {
            AudioBitrate = input.ReadInt32();
            break;
          }
          case 56: {
            AudioFrequency = input.ReadInt32();
            break;
          }
          case 64: {
            VideoCodec = (global::Livekit.Server.Sdk.Dotnet.VideoCodec) input.ReadEnum();
            break;
          }
          case 72: {
            VideoBitrate = input.ReadInt32();
            break;
          }
          case 81: {
            KeyFrameInterval = input.ReadDouble();
            break;
          }
          case 88: {
            AudioQuality = input.ReadInt32();
            break;
          }
          case 96: {
            VideoQuality = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            Depth = input.ReadInt32();
            break;
          }
          case 32: {
            Framerate = input.ReadInt32();
            break;
          }
          case 40: {
            AudioCodec = (global::Livekit.Server.Sdk.Dotnet.AudioCodec) input.ReadEnum();
            break;
          }
          case 48: {
            AudioBitrate = input.ReadInt32();
            break;
          }
          case 56: {
            AudioFrequency = input.ReadInt32();
            break;
          }
          case 64: {
            VideoCodec = (global::Livekit.Server.Sdk.Dotnet.VideoCodec) input.ReadEnum();
            break;
          }
          case 72: {
            VideoBitrate = input.ReadInt32();
            break;
          }
          case 81: {
            KeyFrameInterval = input.ReadDouble();
            break;
          }
          case 88: {
            AudioQuality = input.ReadInt32();
            break;
          }
          case 96: {
            VideoQuality = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateLayoutRequest : pb::IMessage<UpdateLayoutRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateLayoutRequest> _parser = new pb::MessageParser<UpdateLayoutRequest>(() => new UpdateLayoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateLayoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateLayoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateLayoutRequest(UpdateLayoutRequest other) : this() {
      egressId_ = other.egressId_;
      layout_ = other.layout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateLayoutRequest Clone() {
      return new UpdateLayoutRequest(this);
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 1;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 2;
    private string layout_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Layout {
      get { return layout_; }
      set {
        layout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateLayoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateLayoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EgressId != other.EgressId) return false;
      if (Layout != other.Layout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (Layout.Length != 0) hash ^= Layout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (Layout.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (Layout.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (Layout.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Layout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateLayoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      if (other.Layout.Length != 0) {
        Layout = other.Layout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            Layout = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            Layout = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateStreamRequest : pb::IMessage<UpdateStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStreamRequest> _parser = new pb::MessageParser<UpdateStreamRequest>(() => new UpdateStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStreamRequest(UpdateStreamRequest other) : this() {
      egressId_ = other.egressId_;
      addOutputUrls_ = other.addOutputUrls_.Clone();
      removeOutputUrls_ = other.removeOutputUrls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStreamRequest Clone() {
      return new UpdateStreamRequest(this);
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 1;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "add_output_urls" field.</summary>
    public const int AddOutputUrlsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_addOutputUrls_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> addOutputUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AddOutputUrls {
      get { return addOutputUrls_; }
    }

    /// <summary>Field number for the "remove_output_urls" field.</summary>
    public const int RemoveOutputUrlsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_removeOutputUrls_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> removeOutputUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RemoveOutputUrls {
      get { return removeOutputUrls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EgressId != other.EgressId) return false;
      if(!addOutputUrls_.Equals(other.addOutputUrls_)) return false;
      if(!removeOutputUrls_.Equals(other.removeOutputUrls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      hash ^= addOutputUrls_.GetHashCode();
      hash ^= removeOutputUrls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      addOutputUrls_.WriteTo(output, _repeated_addOutputUrls_codec);
      removeOutputUrls_.WriteTo(output, _repeated_removeOutputUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      addOutputUrls_.WriteTo(ref output, _repeated_addOutputUrls_codec);
      removeOutputUrls_.WriteTo(ref output, _repeated_removeOutputUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      size += addOutputUrls_.CalculateSize(_repeated_addOutputUrls_codec);
      size += removeOutputUrls_.CalculateSize(_repeated_removeOutputUrls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      addOutputUrls_.Add(other.addOutputUrls_);
      removeOutputUrls_.Add(other.removeOutputUrls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            addOutputUrls_.AddEntriesFrom(input, _repeated_addOutputUrls_codec);
            break;
          }
          case 26: {
            removeOutputUrls_.AddEntriesFrom(input, _repeated_removeOutputUrls_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            addOutputUrls_.AddEntriesFrom(ref input, _repeated_addOutputUrls_codec);
            break;
          }
          case 26: {
            removeOutputUrls_.AddEntriesFrom(ref input, _repeated_removeOutputUrls_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListEgressRequest : pb::IMessage<ListEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListEgressRequest> _parser = new pb::MessageParser<ListEgressRequest>(() => new ListEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressRequest(ListEgressRequest other) : this() {
      roomName_ = other.roomName_;
      egressId_ = other.egressId_;
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressRequest Clone() {
      return new ListEgressRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    /// (optional, filter by room name)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 2;
    private string egressId_ = "";
    /// <summary>
    /// (optional, filter by egress ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 3;
    private bool active_;
    /// <summary>
    /// (optional, list active egress only)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (EgressId != other.EgressId) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EgressId);
      }
      if (Active != false) {
        output.WriteRawTag(24);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (EgressId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EgressId);
      }
      if (Active != false) {
        output.WriteRawTag(24);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (Active != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            EgressId = input.ReadString();
            break;
          }
          case 24: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            EgressId = input.ReadString();
            break;
          }
          case 24: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListEgressResponse : pb::IMessage<ListEgressResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListEgressResponse> _parser = new pb::MessageParser<ListEgressResponse>(() => new ListEgressResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListEgressResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressResponse(ListEgressResponse other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListEgressResponse Clone() {
      return new ListEgressResponse(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EgressInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Livekit.Server.Sdk.Dotnet.EgressInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EgressInfo> items_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EgressInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EgressInfo> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListEgressResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListEgressResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListEgressResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StopEgressRequest : pb::IMessage<StopEgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StopEgressRequest> _parser = new pb::MessageParser<StopEgressRequest>(() => new StopEgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StopEgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopEgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopEgressRequest(StopEgressRequest other) : this() {
      egressId_ = other.egressId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopEgressRequest Clone() {
      return new StopEgressRequest(this);
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 1;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StopEgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StopEgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EgressId != other.EgressId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StopEgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EgressInfo : pb::IMessage<EgressInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EgressInfo> _parser = new pb::MessageParser<EgressInfo>(() => new EgressInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EgressInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EgressInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EgressInfo(EgressInfo other) : this() {
      egressId_ = other.egressId_;
      roomId_ = other.roomId_;
      roomName_ = other.roomName_;
      sourceType_ = other.sourceType_;
      status_ = other.status_;
      startedAt_ = other.startedAt_;
      endedAt_ = other.endedAt_;
      updatedAt_ = other.updatedAt_;
      details_ = other.details_;
      error_ = other.error_;
      errorCode_ = other.errorCode_;
      streamResults_ = other.streamResults_.Clone();
      fileResults_ = other.fileResults_.Clone();
      segmentResults_ = other.segmentResults_.Clone();
      imageResults_ = other.imageResults_.Clone();
      manifestLocation_ = other.manifestLocation_;
      backupStorageUsed_ = other.backupStorageUsed_;
      switch (other.RequestCase) {
        case RequestOneofCase.RoomComposite:
          RoomComposite = other.RoomComposite.Clone();
          break;
        case RequestOneofCase.Web:
          Web = other.Web.Clone();
          break;
        case RequestOneofCase.Participant:
          Participant = other.Participant.Clone();
          break;
        case RequestOneofCase.TrackComposite:
          TrackComposite = other.TrackComposite.Clone();
          break;
        case RequestOneofCase.Track:
          Track = other.Track.Clone();
          break;
      }

      switch (other.ResultCase) {
        case ResultOneofCase.Stream:
          Stream = other.Stream.Clone();
          break;
        case ResultOneofCase.File:
          File = other.File.Clone();
          break;
        case ResultOneofCase.Segments:
          Segments = other.Segments.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EgressInfo Clone() {
      return new EgressInfo(this);
    }

    /// <summary>Field number for the "egress_id" field.</summary>
    public const int EgressIdFieldNumber = 1;
    private string egressId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EgressId {
      get { return egressId_; }
      set {
        egressId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 2;
    private string roomId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomId {
      get { return roomId_; }
      set {
        roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 13;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 26;
    private global::Livekit.Server.Sdk.Dotnet.EgressSourceType sourceType_ = global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EgressSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Livekit.Server.Sdk.Dotnet.EgressStatus status_ = global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EgressStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 10;
    private long startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 11;
    private long endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 18;
    private long updatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 21;
    private string details_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Details {
      get { return details_; }
      set {
        details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 9;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 22;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "room_composite" field.</summary>
    public const int RoomCompositeFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest RoomComposite {
      get { return requestCase_ == RequestOneofCase.RoomComposite ? (global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.RoomComposite;
      }
    }

    /// <summary>Field number for the "web" field.</summary>
    public const int WebFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.WebEgressRequest Web {
      get { return requestCase_ == RequestOneofCase.Web ? (global::Livekit.Server.Sdk.Dotnet.WebEgressRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Web;
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest Participant {
      get { return requestCase_ == RequestOneofCase.Participant ? (global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Participant;
      }
    }

    /// <summary>Field number for the "track_composite" field.</summary>
    public const int TrackCompositeFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest TrackComposite {
      get { return requestCase_ == RequestOneofCase.TrackComposite ? (global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.TrackComposite;
      }
    }

    /// <summary>Field number for the "track" field.</summary>
    public const int TrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest Track {
      get { return requestCase_ == RequestOneofCase.Track ? (global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Track;
      }
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 7;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamInfoList Stream {
      get { return resultCase_ == ResultOneofCase.Stream ? (global::Livekit.Server.Sdk.Dotnet.StreamInfoList) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Stream;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 8;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.FileInfo File {
      get { return resultCase_ == ResultOneofCase.File ? (global::Livekit.Server.Sdk.Dotnet.FileInfo) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.File;
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 12;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.SegmentsInfo Segments {
      get { return resultCase_ == ResultOneofCase.Segments ? (global::Livekit.Server.Sdk.Dotnet.SegmentsInfo) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Segments;
      }
    }

    /// <summary>Field number for the "stream_results" field.</summary>
    public const int StreamResultsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamInfo> _repeated_streamResults_codec
        = pb::FieldCodec.ForMessage(122, global::Livekit.Server.Sdk.Dotnet.StreamInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo> streamResults_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo> StreamResults {
      get { return streamResults_; }
    }

    /// <summary>Field number for the "file_results" field.</summary>
    public const int FileResultsFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.FileInfo> _repeated_fileResults_codec
        = pb::FieldCodec.ForMessage(130, global::Livekit.Server.Sdk.Dotnet.FileInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.FileInfo> fileResults_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.FileInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.FileInfo> FileResults {
      get { return fileResults_; }
    }

    /// <summary>Field number for the "segment_results" field.</summary>
    public const int SegmentResultsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentsInfo> _repeated_segmentResults_codec
        = pb::FieldCodec.ForMessage(138, global::Livekit.Server.Sdk.Dotnet.SegmentsInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentsInfo> segmentResults_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentsInfo> SegmentResults {
      get { return segmentResults_; }
    }

    /// <summary>Field number for the "image_results" field.</summary>
    public const int ImageResultsFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.ImagesInfo> _repeated_imageResults_codec
        = pb::FieldCodec.ForMessage(162, global::Livekit.Server.Sdk.Dotnet.ImagesInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImagesInfo> imageResults_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImagesInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.ImagesInfo> ImageResults {
      get { return imageResults_; }
    }

    /// <summary>Field number for the "manifest_location" field.</summary>
    public const int ManifestLocationFieldNumber = 23;
    private string manifestLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ManifestLocation {
      get { return manifestLocation_; }
      set {
        manifestLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backup_storage_used" field.</summary>
    public const int BackupStorageUsedFieldNumber = 25;
    private bool backupStorageUsed_;
    /// <summary>
    /// next ID: 27
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BackupStorageUsed {
      get { return backupStorageUsed_; }
      set {
        backupStorageUsed_ = value;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      RoomComposite = 4,
      Web = 14,
      Participant = 19,
      TrackComposite = 5,
      Track = 6,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Stream = 7,
      File = 8,
      Segments = 12,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EgressInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EgressInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EgressId != other.EgressId) return false;
      if (RoomId != other.RoomId) return false;
      if (RoomName != other.RoomName) return false;
      if (SourceType != other.SourceType) return false;
      if (Status != other.Status) return false;
      if (StartedAt != other.StartedAt) return false;
      if (EndedAt != other.EndedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (Details != other.Details) return false;
      if (Error != other.Error) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (!object.Equals(RoomComposite, other.RoomComposite)) return false;
      if (!object.Equals(Web, other.Web)) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      if (!object.Equals(TrackComposite, other.TrackComposite)) return false;
      if (!object.Equals(Track, other.Track)) return false;
      if (!object.Equals(Stream, other.Stream)) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Segments, other.Segments)) return false;
      if(!streamResults_.Equals(other.streamResults_)) return false;
      if(!fileResults_.Equals(other.fileResults_)) return false;
      if(!segmentResults_.Equals(other.segmentResults_)) return false;
      if(!imageResults_.Equals(other.imageResults_)) return false;
      if (ManifestLocation != other.ManifestLocation) return false;
      if (BackupStorageUsed != other.BackupStorageUsed) return false;
      if (RequestCase != other.RequestCase) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EgressId.Length != 0) hash ^= EgressId.GetHashCode();
      if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (SourceType != global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web) hash ^= SourceType.GetHashCode();
      if (Status != global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting) hash ^= Status.GetHashCode();
      if (StartedAt != 0L) hash ^= StartedAt.GetHashCode();
      if (EndedAt != 0L) hash ^= EndedAt.GetHashCode();
      if (UpdatedAt != 0L) hash ^= UpdatedAt.GetHashCode();
      if (Details.Length != 0) hash ^= Details.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (requestCase_ == RequestOneofCase.RoomComposite) hash ^= RoomComposite.GetHashCode();
      if (requestCase_ == RequestOneofCase.Web) hash ^= Web.GetHashCode();
      if (requestCase_ == RequestOneofCase.Participant) hash ^= Participant.GetHashCode();
      if (requestCase_ == RequestOneofCase.TrackComposite) hash ^= TrackComposite.GetHashCode();
      if (requestCase_ == RequestOneofCase.Track) hash ^= Track.GetHashCode();
      if (resultCase_ == ResultOneofCase.Stream) hash ^= Stream.GetHashCode();
      if (resultCase_ == ResultOneofCase.File) hash ^= File.GetHashCode();
      if (resultCase_ == ResultOneofCase.Segments) hash ^= Segments.GetHashCode();
      hash ^= streamResults_.GetHashCode();
      hash ^= fileResults_.GetHashCode();
      hash ^= segmentResults_.GetHashCode();
      hash ^= imageResults_.GetHashCode();
      if (ManifestLocation.Length != 0) hash ^= ManifestLocation.GetHashCode();
      if (BackupStorageUsed != false) hash ^= BackupStorageUsed.GetHashCode();
      hash ^= (int) requestCase_;
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomId);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (requestCase_ == RequestOneofCase.RoomComposite) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomComposite);
      }
      if (requestCase_ == RequestOneofCase.TrackComposite) {
        output.WriteRawTag(42);
        output.WriteMessage(TrackComposite);
      }
      if (requestCase_ == RequestOneofCase.Track) {
        output.WriteRawTag(50);
        output.WriteMessage(Track);
      }
      if (resultCase_ == ResultOneofCase.Stream) {
        output.WriteRawTag(58);
        output.WriteMessage(Stream);
      }
      if (resultCase_ == ResultOneofCase.File) {
        output.WriteRawTag(66);
        output.WriteMessage(File);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Error);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(EndedAt);
      }
      if (resultCase_ == ResultOneofCase.Segments) {
        output.WriteRawTag(98);
        output.WriteMessage(Segments);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RoomName);
      }
      if (requestCase_ == RequestOneofCase.Web) {
        output.WriteRawTag(114);
        output.WriteMessage(Web);
      }
      streamResults_.WriteTo(output, _repeated_streamResults_codec);
      fileResults_.WriteTo(output, _repeated_fileResults_codec);
      segmentResults_.WriteTo(output, _repeated_segmentResults_codec);
      if (UpdatedAt != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(UpdatedAt);
      }
      if (requestCase_ == RequestOneofCase.Participant) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Participant);
      }
      imageResults_.WriteTo(output, _repeated_imageResults_codec);
      if (Details.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Details);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ErrorCode);
      }
      if (ManifestLocation.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ManifestLocation);
      }
      if (BackupStorageUsed != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(BackupStorageUsed);
      }
      if (SourceType != global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) SourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EgressId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EgressId);
      }
      if (RoomId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomId);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (requestCase_ == RequestOneofCase.RoomComposite) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomComposite);
      }
      if (requestCase_ == RequestOneofCase.TrackComposite) {
        output.WriteRawTag(42);
        output.WriteMessage(TrackComposite);
      }
      if (requestCase_ == RequestOneofCase.Track) {
        output.WriteRawTag(50);
        output.WriteMessage(Track);
      }
      if (resultCase_ == ResultOneofCase.Stream) {
        output.WriteRawTag(58);
        output.WriteMessage(Stream);
      }
      if (resultCase_ == ResultOneofCase.File) {
        output.WriteRawTag(66);
        output.WriteMessage(File);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Error);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(EndedAt);
      }
      if (resultCase_ == ResultOneofCase.Segments) {
        output.WriteRawTag(98);
        output.WriteMessage(Segments);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RoomName);
      }
      if (requestCase_ == RequestOneofCase.Web) {
        output.WriteRawTag(114);
        output.WriteMessage(Web);
      }
      streamResults_.WriteTo(ref output, _repeated_streamResults_codec);
      fileResults_.WriteTo(ref output, _repeated_fileResults_codec);
      segmentResults_.WriteTo(ref output, _repeated_segmentResults_codec);
      if (UpdatedAt != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(UpdatedAt);
      }
      if (requestCase_ == RequestOneofCase.Participant) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Participant);
      }
      imageResults_.WriteTo(ref output, _repeated_imageResults_codec);
      if (Details.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Details);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ErrorCode);
      }
      if (ManifestLocation.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ManifestLocation);
      }
      if (BackupStorageUsed != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(BackupStorageUsed);
      }
      if (SourceType != global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) SourceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EgressId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EgressId);
      }
      if (RoomId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (SourceType != global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StartedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedAt);
      }
      if (EndedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndedAt);
      }
      if (UpdatedAt != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(UpdatedAt);
      }
      if (Details.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Details);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (ErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (requestCase_ == RequestOneofCase.RoomComposite) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomComposite);
      }
      if (requestCase_ == RequestOneofCase.Web) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Web);
      }
      if (requestCase_ == RequestOneofCase.Participant) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (requestCase_ == RequestOneofCase.TrackComposite) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackComposite);
      }
      if (requestCase_ == RequestOneofCase.Track) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Track);
      }
      if (resultCase_ == ResultOneofCase.Stream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (resultCase_ == ResultOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (resultCase_ == ResultOneofCase.Segments) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segments);
      }
      size += streamResults_.CalculateSize(_repeated_streamResults_codec);
      size += fileResults_.CalculateSize(_repeated_fileResults_codec);
      size += segmentResults_.CalculateSize(_repeated_segmentResults_codec);
      size += imageResults_.CalculateSize(_repeated_imageResults_codec);
      if (ManifestLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ManifestLocation);
      }
      if (BackupStorageUsed != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EgressInfo other) {
      if (other == null) {
        return;
      }
      if (other.EgressId.Length != 0) {
        EgressId = other.EgressId;
      }
      if (other.RoomId.Length != 0) {
        RoomId = other.RoomId;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.SourceType != global::Livekit.Server.Sdk.Dotnet.EgressSourceType.Web) {
        SourceType = other.SourceType;
      }
      if (other.Status != global::Livekit.Server.Sdk.Dotnet.EgressStatus.EgressStarting) {
        Status = other.Status;
      }
      if (other.StartedAt != 0L) {
        StartedAt = other.StartedAt;
      }
      if (other.EndedAt != 0L) {
        EndedAt = other.EndedAt;
      }
      if (other.UpdatedAt != 0L) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.Details.Length != 0) {
        Details = other.Details;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      streamResults_.Add(other.streamResults_);
      fileResults_.Add(other.fileResults_);
      segmentResults_.Add(other.segmentResults_);
      imageResults_.Add(other.imageResults_);
      if (other.ManifestLocation.Length != 0) {
        ManifestLocation = other.ManifestLocation;
      }
      if (other.BackupStorageUsed != false) {
        BackupStorageUsed = other.BackupStorageUsed;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.RoomComposite:
          if (RoomComposite == null) {
            RoomComposite = new global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest();
          }
          RoomComposite.MergeFrom(other.RoomComposite);
          break;
        case RequestOneofCase.Web:
          if (Web == null) {
            Web = new global::Livekit.Server.Sdk.Dotnet.WebEgressRequest();
          }
          Web.MergeFrom(other.Web);
          break;
        case RequestOneofCase.Participant:
          if (Participant == null) {
            Participant = new global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest();
          }
          Participant.MergeFrom(other.Participant);
          break;
        case RequestOneofCase.TrackComposite:
          if (TrackComposite == null) {
            TrackComposite = new global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest();
          }
          TrackComposite.MergeFrom(other.TrackComposite);
          break;
        case RequestOneofCase.Track:
          if (Track == null) {
            Track = new global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest();
          }
          Track.MergeFrom(other.Track);
          break;
      }

      switch (other.ResultCase) {
        case ResultOneofCase.Stream:
          if (Stream == null) {
            Stream = new global::Livekit.Server.Sdk.Dotnet.StreamInfoList();
          }
          Stream.MergeFrom(other.Stream);
          break;
        case ResultOneofCase.File:
          if (File == null) {
            File = new global::Livekit.Server.Sdk.Dotnet.FileInfo();
          }
          File.MergeFrom(other.File);
          break;
        case ResultOneofCase.Segments:
          if (Segments == null) {
            Segments = new global::Livekit.Server.Sdk.Dotnet.SegmentsInfo();
          }
          Segments.MergeFrom(other.Segments);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            RoomId = input.ReadString();
            break;
          }
          case 24: {
            Status = (global::Livekit.Server.Sdk.Dotnet.EgressStatus) input.ReadEnum();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest();
            if (requestCase_ == RequestOneofCase.RoomComposite) {
              subBuilder.MergeFrom(RoomComposite);
            }
            input.ReadMessage(subBuilder);
            RoomComposite = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest();
            if (requestCase_ == RequestOneofCase.TrackComposite) {
              subBuilder.MergeFrom(TrackComposite);
            }
            input.ReadMessage(subBuilder);
            TrackComposite = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest();
            if (requestCase_ == RequestOneofCase.Track) {
              subBuilder.MergeFrom(Track);
            }
            input.ReadMessage(subBuilder);
            Track = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.StreamInfoList subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamInfoList();
            if (resultCase_ == ResultOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.FileInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.FileInfo();
            if (resultCase_ == ResultOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 74: {
            Error = input.ReadString();
            break;
          }
          case 80: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 88: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 98: {
            global::Livekit.Server.Sdk.Dotnet.SegmentsInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentsInfo();
            if (resultCase_ == ResultOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 106: {
            RoomName = input.ReadString();
            break;
          }
          case 114: {
            global::Livekit.Server.Sdk.Dotnet.WebEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.WebEgressRequest();
            if (requestCase_ == RequestOneofCase.Web) {
              subBuilder.MergeFrom(Web);
            }
            input.ReadMessage(subBuilder);
            Web = subBuilder;
            break;
          }
          case 122: {
            streamResults_.AddEntriesFrom(input, _repeated_streamResults_codec);
            break;
          }
          case 130: {
            fileResults_.AddEntriesFrom(input, _repeated_fileResults_codec);
            break;
          }
          case 138: {
            segmentResults_.AddEntriesFrom(input, _repeated_segmentResults_codec);
            break;
          }
          case 144: {
            UpdatedAt = input.ReadInt64();
            break;
          }
          case 154: {
            global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest();
            if (requestCase_ == RequestOneofCase.Participant) {
              subBuilder.MergeFrom(Participant);
            }
            input.ReadMessage(subBuilder);
            Participant = subBuilder;
            break;
          }
          case 162: {
            imageResults_.AddEntriesFrom(input, _repeated_imageResults_codec);
            break;
          }
          case 170: {
            Details = input.ReadString();
            break;
          }
          case 176: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 186: {
            ManifestLocation = input.ReadString();
            break;
          }
          case 200: {
            BackupStorageUsed = input.ReadBool();
            break;
          }
          case 208: {
            SourceType = (global::Livekit.Server.Sdk.Dotnet.EgressSourceType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EgressId = input.ReadString();
            break;
          }
          case 18: {
            RoomId = input.ReadString();
            break;
          }
          case 24: {
            Status = (global::Livekit.Server.Sdk.Dotnet.EgressStatus) input.ReadEnum();
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.RoomCompositeEgressRequest();
            if (requestCase_ == RequestOneofCase.RoomComposite) {
              subBuilder.MergeFrom(RoomComposite);
            }
            input.ReadMessage(subBuilder);
            RoomComposite = subBuilder;
            break;
          }
          case 42: {
            global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.TrackCompositeEgressRequest();
            if (requestCase_ == RequestOneofCase.TrackComposite) {
              subBuilder.MergeFrom(TrackComposite);
            }
            input.ReadMessage(subBuilder);
            TrackComposite = subBuilder;
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.TrackEgressRequest();
            if (requestCase_ == RequestOneofCase.Track) {
              subBuilder.MergeFrom(Track);
            }
            input.ReadMessage(subBuilder);
            Track = subBuilder;
            break;
          }
          case 58: {
            global::Livekit.Server.Sdk.Dotnet.StreamInfoList subBuilder = new global::Livekit.Server.Sdk.Dotnet.StreamInfoList();
            if (resultCase_ == ResultOneofCase.Stream) {
              subBuilder.MergeFrom(Stream);
            }
            input.ReadMessage(subBuilder);
            Stream = subBuilder;
            break;
          }
          case 66: {
            global::Livekit.Server.Sdk.Dotnet.FileInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.FileInfo();
            if (resultCase_ == ResultOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 74: {
            Error = input.ReadString();
            break;
          }
          case 80: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 88: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 98: {
            global::Livekit.Server.Sdk.Dotnet.SegmentsInfo subBuilder = new global::Livekit.Server.Sdk.Dotnet.SegmentsInfo();
            if (resultCase_ == ResultOneofCase.Segments) {
              subBuilder.MergeFrom(Segments);
            }
            input.ReadMessage(subBuilder);
            Segments = subBuilder;
            break;
          }
          case 106: {
            RoomName = input.ReadString();
            break;
          }
          case 114: {
            global::Livekit.Server.Sdk.Dotnet.WebEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.WebEgressRequest();
            if (requestCase_ == RequestOneofCase.Web) {
              subBuilder.MergeFrom(Web);
            }
            input.ReadMessage(subBuilder);
            Web = subBuilder;
            break;
          }
          case 122: {
            streamResults_.AddEntriesFrom(ref input, _repeated_streamResults_codec);
            break;
          }
          case 130: {
            fileResults_.AddEntriesFrom(ref input, _repeated_fileResults_codec);
            break;
          }
          case 138: {
            segmentResults_.AddEntriesFrom(ref input, _repeated_segmentResults_codec);
            break;
          }
          case 144: {
            UpdatedAt = input.ReadInt64();
            break;
          }
          case 154: {
            global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest subBuilder = new global::Livekit.Server.Sdk.Dotnet.ParticipantEgressRequest();
            if (requestCase_ == RequestOneofCase.Participant) {
              subBuilder.MergeFrom(Participant);
            }
            input.ReadMessage(subBuilder);
            Participant = subBuilder;
            break;
          }
          case 162: {
            imageResults_.AddEntriesFrom(ref input, _repeated_imageResults_codec);
            break;
          }
          case 170: {
            Details = input.ReadString();
            break;
          }
          case 176: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 186: {
            ManifestLocation = input.ReadString();
            break;
          }
          case 200: {
            BackupStorageUsed = input.ReadBool();
            break;
          }
          case 208: {
            SourceType = (global::Livekit.Server.Sdk.Dotnet.EgressSourceType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.ObsoleteAttribute]
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamInfoList : pb::IMessage<StreamInfoList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamInfoList> _parser = new pb::MessageParser<StreamInfoList>(() => new StreamInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfoList(StreamInfoList other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfoList Clone() {
      return new StreamInfoList(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.StreamInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Livekit.Server.Sdk.Dotnet.StreamInfo.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo> info_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.StreamInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamInfoList other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StreamInfo : pb::IMessage<StreamInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamInfo> _parser = new pb::MessageParser<StreamInfo>(() => new StreamInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StreamInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfo(StreamInfo other) : this() {
      url_ = other.url_;
      startedAt_ = other.startedAt_;
      endedAt_ = other.endedAt_;
      duration_ = other.duration_;
      status_ = other.status_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamInfo Clone() {
      return new StreamInfo(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 2;
    private long startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 3;
    private long endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private long duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status status_ = global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 6;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StreamInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StreamInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (StartedAt != other.StartedAt) return false;
      if (EndedAt != other.EndedAt) return false;
      if (Duration != other.Duration) return false;
      if (Status != other.Status) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (StartedAt != 0L) hash ^= StartedAt.GetHashCode();
      if (EndedAt != 0L) hash ^= EndedAt.GetHashCode();
      if (Duration != 0L) hash ^= Duration.GetHashCode();
      if (Status != global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active) hash ^= Status.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (Duration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Duration);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (Duration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Duration);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (StartedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedAt);
      }
      if (EndedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndedAt);
      }
      if (Duration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Duration);
      }
      if (Status != global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StreamInfo other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.StartedAt != 0L) {
        StartedAt = other.StartedAt;
      }
      if (other.EndedAt != 0L) {
        EndedAt = other.EndedAt;
      }
      if (other.Duration != 0L) {
        Duration = other.Duration;
      }
      if (other.Status != global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status.Active) {
        Status = other.Status;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 32: {
            Duration = input.ReadInt64();
            break;
          }
          case 40: {
            Status = (global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status) input.ReadEnum();
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 32: {
            Duration = input.ReadInt64();
            break;
          }
          case 40: {
            Status = (global::Livekit.Server.Sdk.Dotnet.StreamInfo.Types.Status) input.ReadEnum();
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("ACTIVE")] Active = 0,
        [pbr::OriginalName("FINISHED")] Finished = 1,
        [pbr::OriginalName("FAILED")] Failed = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FileInfo : pb::IMessage<FileInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileInfo> _parser = new pb::MessageParser<FileInfo>(() => new FileInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FileInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInfo(FileInfo other) : this() {
      filename_ = other.filename_;
      startedAt_ = other.startedAt_;
      endedAt_ = other.endedAt_;
      duration_ = other.duration_;
      size_ = other.size_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileInfo Clone() {
      return new FileInfo(this);
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 1;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 2;
    private long startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 3;
    private long endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 6;
    private long duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 5;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FileInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FileInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filename != other.Filename) return false;
      if (StartedAt != other.StartedAt) return false;
      if (EndedAt != other.EndedAt) return false;
      if (Duration != other.Duration) return false;
      if (Size != other.Size) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (StartedAt != 0L) hash ^= StartedAt.GetHashCode();
      if (EndedAt != 0L) hash ^= EndedAt.GetHashCode();
      if (Duration != 0L) hash ^= Duration.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filename);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (Size != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Size);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Location);
      }
      if (Duration != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filename);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (Size != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Size);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Location);
      }
      if (Duration != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (StartedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedAt);
      }
      if (EndedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndedAt);
      }
      if (Duration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Duration);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FileInfo other) {
      if (other == null) {
        return;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      if (other.StartedAt != 0L) {
        StartedAt = other.StartedAt;
      }
      if (other.EndedAt != 0L) {
        EndedAt = other.EndedAt;
      }
      if (other.Duration != 0L) {
        Duration = other.Duration;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filename = input.ReadString();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 32: {
            Size = input.ReadInt64();
            break;
          }
          case 42: {
            Location = input.ReadString();
            break;
          }
          case 48: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filename = input.ReadString();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 32: {
            Size = input.ReadInt64();
            break;
          }
          case 42: {
            Location = input.ReadString();
            break;
          }
          case 48: {
            Duration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SegmentsInfo : pb::IMessage<SegmentsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SegmentsInfo> _parser = new pb::MessageParser<SegmentsInfo>(() => new SegmentsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SegmentsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentsInfo(SegmentsInfo other) : this() {
      playlistName_ = other.playlistName_;
      livePlaylistName_ = other.livePlaylistName_;
      duration_ = other.duration_;
      size_ = other.size_;
      playlistLocation_ = other.playlistLocation_;
      livePlaylistLocation_ = other.livePlaylistLocation_;
      segmentCount_ = other.segmentCount_;
      startedAt_ = other.startedAt_;
      endedAt_ = other.endedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentsInfo Clone() {
      return new SegmentsInfo(this);
    }

    /// <summary>Field number for the "playlist_name" field.</summary>
    public const int PlaylistNameFieldNumber = 1;
    private string playlistName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlaylistName {
      get { return playlistName_; }
      set {
        playlistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "live_playlist_name" field.</summary>
    public const int LivePlaylistNameFieldNumber = 8;
    private string livePlaylistName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LivePlaylistName {
      get { return livePlaylistName_; }
      set {
        livePlaylistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 2;
    private long duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "playlist_location" field.</summary>
    public const int PlaylistLocationFieldNumber = 4;
    private string playlistLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlaylistLocation {
      get { return playlistLocation_; }
      set {
        playlistLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "live_playlist_location" field.</summary>
    public const int LivePlaylistLocationFieldNumber = 9;
    private string livePlaylistLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LivePlaylistLocation {
      get { return livePlaylistLocation_; }
      set {
        livePlaylistLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segment_count" field.</summary>
    public const int SegmentCountFieldNumber = 5;
    private long segmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SegmentCount {
      get { return segmentCount_; }
      set {
        segmentCount_ = value;
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 6;
    private long startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 7;
    private long endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SegmentsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SegmentsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlaylistName != other.PlaylistName) return false;
      if (LivePlaylistName != other.LivePlaylistName) return false;
      if (Duration != other.Duration) return false;
      if (Size != other.Size) return false;
      if (PlaylistLocation != other.PlaylistLocation) return false;
      if (LivePlaylistLocation != other.LivePlaylistLocation) return false;
      if (SegmentCount != other.SegmentCount) return false;
      if (StartedAt != other.StartedAt) return false;
      if (EndedAt != other.EndedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlaylistName.Length != 0) hash ^= PlaylistName.GetHashCode();
      if (LivePlaylistName.Length != 0) hash ^= LivePlaylistName.GetHashCode();
      if (Duration != 0L) hash ^= Duration.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (PlaylistLocation.Length != 0) hash ^= PlaylistLocation.GetHashCode();
      if (LivePlaylistLocation.Length != 0) hash ^= LivePlaylistLocation.GetHashCode();
      if (SegmentCount != 0L) hash ^= SegmentCount.GetHashCode();
      if (StartedAt != 0L) hash ^= StartedAt.GetHashCode();
      if (EndedAt != 0L) hash ^= EndedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlaylistName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlaylistName);
      }
      if (Duration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Duration);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (PlaylistLocation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlaylistLocation);
      }
      if (SegmentCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SegmentCount);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndedAt);
      }
      if (LivePlaylistName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LivePlaylistName);
      }
      if (LivePlaylistLocation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LivePlaylistLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlaylistName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlaylistName);
      }
      if (Duration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Duration);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (PlaylistLocation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlaylistLocation);
      }
      if (SegmentCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SegmentCount);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndedAt);
      }
      if (LivePlaylistName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LivePlaylistName);
      }
      if (LivePlaylistLocation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LivePlaylistLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlaylistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaylistName);
      }
      if (LivePlaylistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LivePlaylistName);
      }
      if (Duration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Duration);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (PlaylistLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaylistLocation);
      }
      if (LivePlaylistLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LivePlaylistLocation);
      }
      if (SegmentCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SegmentCount);
      }
      if (StartedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedAt);
      }
      if (EndedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SegmentsInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlaylistName.Length != 0) {
        PlaylistName = other.PlaylistName;
      }
      if (other.LivePlaylistName.Length != 0) {
        LivePlaylistName = other.LivePlaylistName;
      }
      if (other.Duration != 0L) {
        Duration = other.Duration;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.PlaylistLocation.Length != 0) {
        PlaylistLocation = other.PlaylistLocation;
      }
      if (other.LivePlaylistLocation.Length != 0) {
        LivePlaylistLocation = other.LivePlaylistLocation;
      }
      if (other.SegmentCount != 0L) {
        SegmentCount = other.SegmentCount;
      }
      if (other.StartedAt != 0L) {
        StartedAt = other.StartedAt;
      }
      if (other.EndedAt != 0L) {
        EndedAt = other.EndedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlaylistName = input.ReadString();
            break;
          }
          case 16: {
            Duration = input.ReadInt64();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            PlaylistLocation = input.ReadString();
            break;
          }
          case 40: {
            SegmentCount = input.ReadInt64();
            break;
          }
          case 48: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 56: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 66: {
            LivePlaylistName = input.ReadString();
            break;
          }
          case 74: {
            LivePlaylistLocation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlaylistName = input.ReadString();
            break;
          }
          case 16: {
            Duration = input.ReadInt64();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            PlaylistLocation = input.ReadString();
            break;
          }
          case 40: {
            SegmentCount = input.ReadInt64();
            break;
          }
          case 48: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 56: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 66: {
            LivePlaylistName = input.ReadString();
            break;
          }
          case 74: {
            LivePlaylistLocation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ImagesInfo : pb::IMessage<ImagesInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImagesInfo> _parser = new pb::MessageParser<ImagesInfo>(() => new ImagesInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ImagesInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImagesInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImagesInfo(ImagesInfo other) : this() {
      filenamePrefix_ = other.filenamePrefix_;
      imageCount_ = other.imageCount_;
      startedAt_ = other.startedAt_;
      endedAt_ = other.endedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ImagesInfo Clone() {
      return new ImagesInfo(this);
    }

    /// <summary>Field number for the "filename_prefix" field.</summary>
    public const int FilenamePrefixFieldNumber = 4;
    private string filenamePrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilenamePrefix {
      get { return filenamePrefix_; }
      set {
        filenamePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 1;
    private long imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 2;
    private long startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "ended_at" field.</summary>
    public const int EndedAtFieldNumber = 3;
    private long endedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndedAt {
      get { return endedAt_; }
      set {
        endedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ImagesInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ImagesInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilenamePrefix != other.FilenamePrefix) return false;
      if (ImageCount != other.ImageCount) return false;
      if (StartedAt != other.StartedAt) return false;
      if (EndedAt != other.EndedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FilenamePrefix.Length != 0) hash ^= FilenamePrefix.GetHashCode();
      if (ImageCount != 0L) hash ^= ImageCount.GetHashCode();
      if (StartedAt != 0L) hash ^= StartedAt.GetHashCode();
      if (EndedAt != 0L) hash ^= EndedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ImageCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ImageCount);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FilenamePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ImageCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ImageCount);
      }
      if (StartedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartedAt);
      }
      if (EndedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EndedAt);
      }
      if (FilenamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FilenamePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FilenamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilenamePrefix);
      }
      if (ImageCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageCount);
      }
      if (StartedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartedAt);
      }
      if (EndedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ImagesInfo other) {
      if (other == null) {
        return;
      }
      if (other.FilenamePrefix.Length != 0) {
        FilenamePrefix = other.FilenamePrefix;
      }
      if (other.ImageCount != 0L) {
        ImageCount = other.ImageCount;
      }
      if (other.StartedAt != 0L) {
        StartedAt = other.StartedAt;
      }
      if (other.EndedAt != 0L) {
        EndedAt = other.EndedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImageCount = input.ReadInt64();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 34: {
            FilenamePrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ImageCount = input.ReadInt64();
            break;
          }
          case 16: {
            StartedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EndedAt = input.ReadInt64();
            break;
          }
          case 34: {
            FilenamePrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AutoParticipantEgress : pb::IMessage<AutoParticipantEgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoParticipantEgress> _parser = new pb::MessageParser<AutoParticipantEgress>(() => new AutoParticipantEgress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoParticipantEgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoParticipantEgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoParticipantEgress(AutoParticipantEgress other) : this() {
      fileOutputs_ = other.fileOutputs_.Clone();
      segmentOutputs_ = other.segmentOutputs_.Clone();
      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          Advanced = other.Advanced.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoParticipantEgress Clone() {
      return new AutoParticipantEgress(this);
    }

    /// <summary>Field number for the "preset" field.</summary>
    public const int PresetFieldNumber = 1;
    /// <summary>
    /// (default H264_720P_30)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset Preset {
      get { return HasPreset ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset) options_ : global::Livekit.Server.Sdk.Dotnet.EncodingOptionsPreset.H264720P30; }
      set {
        options_ = value;
        optionsCase_ = OptionsOneofCase.Preset;
      }
    }
    /// <summary>Gets whether the "preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreset {
      get { return optionsCase_ == OptionsOneofCase.Preset; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "preset" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreset() {
      if (HasPreset) {
        ClearOptions();
      }
    }

    /// <summary>Field number for the "advanced" field.</summary>
    public const int AdvancedFieldNumber = 2;
    /// <summary>
    /// (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.EncodingOptions Advanced {
      get { return optionsCase_ == OptionsOneofCase.Advanced ? (global::Livekit.Server.Sdk.Dotnet.EncodingOptions) options_ : null; }
      set {
        options_ = value;
        optionsCase_ = value == null ? OptionsOneofCase.None : OptionsOneofCase.Advanced;
      }
    }

    /// <summary>Field number for the "file_outputs" field.</summary>
    public const int FileOutputsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> _repeated_fileOutputs_codec
        = pb::FieldCodec.ForMessage(26, global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> fileOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.EncodedFileOutput> FileOutputs {
      get { return fileOutputs_; }
    }

    /// <summary>Field number for the "segment_outputs" field.</summary>
    public const int SegmentOutputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> _repeated_segmentOutputs_codec
        = pb::FieldCodec.ForMessage(34, global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput.Parser);
    private readonly pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> segmentOutputs_ = new pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Livekit.Server.Sdk.Dotnet.SegmentedFileOutput> SegmentOutputs {
      get { return segmentOutputs_; }
    }

    private object options_;
    /// <summary>Enum of possible cases for the "options" oneof.</summary>
    public enum OptionsOneofCase {
      None = 0,
      Preset = 1,
      Advanced = 2,
    }
    private OptionsOneofCase optionsCase_ = OptionsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OptionsOneofCase OptionsCase {
      get { return optionsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptions() {
      optionsCase_ = OptionsOneofCase.None;
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoParticipantEgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoParticipantEgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Preset != other.Preset) return false;
      if (!object.Equals(Advanced, other.Advanced)) return false;
      if(!fileOutputs_.Equals(other.fileOutputs_)) return false;
      if(!segmentOutputs_.Equals(other.segmentOutputs_)) return false;
      if (OptionsCase != other.OptionsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPreset) hash ^= Preset.GetHashCode();
      if (optionsCase_ == OptionsOneofCase.Advanced) hash ^= Advanced.GetHashCode();
      hash ^= fileOutputs_.GetHashCode();
      hash ^= segmentOutputs_.GetHashCode();
      hash ^= (int) optionsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPreset) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(18);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(output, _repeated_fileOutputs_codec);
      segmentOutputs_.WriteTo(output, _repeated_segmentOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPreset) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        output.WriteRawTag(18);
        output.WriteMessage(Advanced);
      }
      fileOutputs_.WriteTo(ref output, _repeated_fileOutputs_codec);
      segmentOutputs_.WriteTo(ref output, _repeated_segmentOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPreset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preset);
      }
      if (optionsCase_ == OptionsOneofCase.Advanced) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Advanced);
      }
      size += fileOutputs_.CalculateSize(_repeated_fileOutputs_codec);
      size += segmentOutputs_.CalculateSize(_repeated_segmentOutputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoParticipantEgress other) {
      if (other == null) {
        return;
      }
      fileOutputs_.Add(other.fileOutputs_);
      segmentOutputs_.Add(other.segmentOutputs_);
      switch (other.OptionsCase) {
        case OptionsOneofCase.Preset:
          Preset = other.Preset;
          break;
        case OptionsOneofCase.Advanced:
          if (Advanced == null) {
            Advanced = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
          }
          Advanced.MergeFrom(other.Advanced);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 26: {
            fileOutputs_.AddEntriesFrom(input, _repeated_fileOutputs_codec);
            break;
          }
          case 34: {
            segmentOutputs_.AddEntriesFrom(input, _repeated_segmentOutputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            options_ = input.ReadEnum();
            optionsCase_ = OptionsOneofCase.Preset;
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.EncodingOptions subBuilder = new global::Livekit.Server.Sdk.Dotnet.EncodingOptions();
            if (optionsCase_ == OptionsOneofCase.Advanced) {
              subBuilder.MergeFrom(Advanced);
            }
            input.ReadMessage(subBuilder);
            Advanced = subBuilder;
            break;
          }
          case 26: {
            fileOutputs_.AddEntriesFrom(ref input, _repeated_fileOutputs_codec);
            break;
          }
          case 34: {
            segmentOutputs_.AddEntriesFrom(ref input, _repeated_segmentOutputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AutoTrackEgress : pb::IMessage<AutoTrackEgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoTrackEgress> _parser = new pb::MessageParser<AutoTrackEgress>(() => new AutoTrackEgress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoTrackEgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Livekit.Server.Sdk.Dotnet.LivekitEgressReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoTrackEgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoTrackEgress(AutoTrackEgress other) : this() {
      filepath_ = other.filepath_;
      disableManifest_ = other.disableManifest_;
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          S3 = other.S3.Clone();
          break;
        case OutputOneofCase.Gcp:
          Gcp = other.Gcp.Clone();
          break;
        case OutputOneofCase.Azure:
          Azure = other.Azure.Clone();
          break;
        case OutputOneofCase.AliOSS:
          AliOSS = other.AliOSS.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoTrackEgress Clone() {
      return new AutoTrackEgress(this);
    }

    /// <summary>Field number for the "filepath" field.</summary>
    public const int FilepathFieldNumber = 1;
    private string filepath_ = "";
    /// <summary>
    /// see docs for templating (default {track_id}-{time})
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filepath {
      get { return filepath_; }
      set {
        filepath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disable_manifest" field.</summary>
    public const int DisableManifestFieldNumber = 5;
    private bool disableManifest_;
    /// <summary>
    /// disables upload of json manifest file (default false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableManifest {
      get { return disableManifest_; }
      set {
        disableManifest_ = value;
      }
    }

    /// <summary>Field number for the "s3" field.</summary>
    public const int S3FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.S3Upload S3 {
      get { return outputCase_ == OutputOneofCase.S3 ? (global::Livekit.Server.Sdk.Dotnet.S3Upload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.S3;
      }
    }

    /// <summary>Field number for the "gcp" field.</summary>
    public const int GcpFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.GCPUpload Gcp {
      get { return outputCase_ == OutputOneofCase.Gcp ? (global::Livekit.Server.Sdk.Dotnet.GCPUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Gcp;
      }
    }

    /// <summary>Field number for the "azure" field.</summary>
    public const int AzureFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload Azure {
      get { return outputCase_ == OutputOneofCase.Azure ? (global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.Azure;
      }
    }

    /// <summary>Field number for the "aliOSS" field.</summary>
    public const int AliOSSFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Livekit.Server.Sdk.Dotnet.AliOSSUpload AliOSS {
      get { return outputCase_ == OutputOneofCase.AliOSS ? (global::Livekit.Server.Sdk.Dotnet.AliOSSUpload) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.AliOSS;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      S3 = 2,
      Gcp = 3,
      Azure = 4,
      AliOSS = 6,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoTrackEgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoTrackEgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filepath != other.Filepath) return false;
      if (DisableManifest != other.DisableManifest) return false;
      if (!object.Equals(S3, other.S3)) return false;
      if (!object.Equals(Gcp, other.Gcp)) return false;
      if (!object.Equals(Azure, other.Azure)) return false;
      if (!object.Equals(AliOSS, other.AliOSS)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Filepath.Length != 0) hash ^= Filepath.GetHashCode();
      if (DisableManifest != false) hash ^= DisableManifest.GetHashCode();
      if (outputCase_ == OutputOneofCase.S3) hash ^= S3.GetHashCode();
      if (outputCase_ == OutputOneofCase.Gcp) hash ^= Gcp.GetHashCode();
      if (outputCase_ == OutputOneofCase.Azure) hash ^= Azure.GetHashCode();
      if (outputCase_ == OutputOneofCase.AliOSS) hash ^= AliOSS.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filepath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(18);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(34);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(50);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filepath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filepath);
      }
      if (outputCase_ == OutputOneofCase.S3) {
        output.WriteRawTag(18);
        output.WriteMessage(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        output.WriteRawTag(34);
        output.WriteMessage(Azure);
      }
      if (DisableManifest != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableManifest);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        output.WriteRawTag(50);
        output.WriteMessage(AliOSS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Filepath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filepath);
      }
      if (DisableManifest != false) {
        size += 1 + 1;
      }
      if (outputCase_ == OutputOneofCase.S3) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S3);
      }
      if (outputCase_ == OutputOneofCase.Gcp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcp);
      }
      if (outputCase_ == OutputOneofCase.Azure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Azure);
      }
      if (outputCase_ == OutputOneofCase.AliOSS) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliOSS);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoTrackEgress other) {
      if (other == null) {
        return;
      }
      if (other.Filepath.Length != 0) {
        Filepath = other.Filepath;
      }
      if (other.DisableManifest != false) {
        DisableManifest = other.DisableManifest;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.S3:
          if (S3 == null) {
            S3 = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
          }
          S3.MergeFrom(other.S3);
          break;
        case OutputOneofCase.Gcp:
          if (Gcp == null) {
            Gcp = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
          }
          Gcp.MergeFrom(other.Gcp);
          break;
        case OutputOneofCase.Azure:
          if (Azure == null) {
            Azure = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
          }
          Azure.MergeFrom(other.Azure);
          break;
        case OutputOneofCase.AliOSS:
          if (AliOSS == null) {
            AliOSS = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
          }
          AliOSS.MergeFrom(other.AliOSS);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filepath = input.ReadString();
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 40: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filepath = input.ReadString();
            break;
          }
          case 18: {
            global::Livekit.Server.Sdk.Dotnet.S3Upload subBuilder = new global::Livekit.Server.Sdk.Dotnet.S3Upload();
            if (outputCase_ == OutputOneofCase.S3) {
              subBuilder.MergeFrom(S3);
            }
            input.ReadMessage(subBuilder);
            S3 = subBuilder;
            break;
          }
          case 26: {
            global::Livekit.Server.Sdk.Dotnet.GCPUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.GCPUpload();
            if (outputCase_ == OutputOneofCase.Gcp) {
              subBuilder.MergeFrom(Gcp);
            }
            input.ReadMessage(subBuilder);
            Gcp = subBuilder;
            break;
          }
          case 34: {
            global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AzureBlobUpload();
            if (outputCase_ == OutputOneofCase.Azure) {
              subBuilder.MergeFrom(Azure);
            }
            input.ReadMessage(subBuilder);
            Azure = subBuilder;
            break;
          }
          case 40: {
            DisableManifest = input.ReadBool();
            break;
          }
          case 50: {
            global::Livekit.Server.Sdk.Dotnet.AliOSSUpload subBuilder = new global::Livekit.Server.Sdk.Dotnet.AliOSSUpload();
            if (outputCase_ == OutputOneofCase.AliOSS) {
              subBuilder.MergeFrom(AliOSS);
            }
            input.ReadMessage(subBuilder);
            AliOSS = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
